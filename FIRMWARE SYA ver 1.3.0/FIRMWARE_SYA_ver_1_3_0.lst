;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/22/2024 12:53:39 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EFBB  	GOTO        1398
_interrupt:
;FIRMWARE_SYA_ver_1_3_0.c,98 :: 		void interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;FIRMWARE_SYA_ver_1_3_0.c,111 :: 		if((1 == IOCCF.B0) && (1 == IOCIE_bit)){
0x000C	0x010F      	MOVLB       15
0x000E	0xA11A      	BTFSS       IOCCF, 0, 1
0x0010	0xD00A      	BRA         L_interrupt2
0x0012	0x010E      	MOVLB       14
0x0014	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0016	0xD007      	BRA         L_interrupt2
L__interrupt127:
;FIRMWARE_SYA_ver_1_3_0.c,112 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0018	0x010F      	MOVLB       15
0x001A	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_1_3_0.c,113 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x001C	0x0E01      	MOVLW       1
0x001E	0x6E30      	MOVWF       _interruptC0 
0x0020	0x0E00      	MOVLW       0
0x0022	0x6E31      	MOVWF       _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,114 :: 		Events();
0x0024	0xD860      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,130 :: 		}
L_interrupt2:
;FIRMWARE_SYA_ver_1_3_0.c,132 :: 		if((1 == IOCCF.B1) && (1 == IOCIE_bit)){
0x0026	0x010F      	MOVLB       15
0x0028	0xA31A      	BTFSS       IOCCF, 1, 1
0x002A	0xD00A      	BRA         L_interrupt5
0x002C	0x010E      	MOVLB       14
0x002E	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0030	0xD007      	BRA         L_interrupt5
L__interrupt126:
;FIRMWARE_SYA_ver_1_3_0.c,133 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x0032	0x010F      	MOVLB       15
0x0034	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_1_3_0.c,134 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0036	0x0E01      	MOVLW       1
0x0038	0x6E2E      	MOVWF       _interruptC1 
0x003A	0x0E00      	MOVLW       0
0x003C	0x6E2F      	MOVWF       _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,135 :: 		Events();
0x003E	0xD853      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,152 :: 		}
L_interrupt5:
;FIRMWARE_SYA_ver_1_3_0.c,153 :: 		if((1 == IOCCF.B2) && (1 == IOCIE_bit)){
0x0040	0x010F      	MOVLB       15
0x0042	0xA51A      	BTFSS       IOCCF, 2, 1
0x0044	0xD00A      	BRA         L_interrupt8
0x0046	0x010E      	MOVLB       14
0x0048	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x004A	0xD007      	BRA         L_interrupt8
L__interrupt125:
;FIRMWARE_SYA_ver_1_3_0.c,154 :: 		IOCCF.B2 = 0; // Limpiamos la bandera de IOC
0x004C	0x010F      	MOVLB       15
0x004E	0x951A      	BCF         IOCCF, 2, 1
;FIRMWARE_SYA_ver_1_3_0.c,155 :: 		interruptC2 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0050	0x0E01      	MOVLW       1
0x0052	0x6E2C      	MOVWF       _interruptC2 
0x0054	0x0E00      	MOVLW       0
0x0056	0x6E2D      	MOVWF       _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,156 :: 		Events();
0x0058	0xD846      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,168 :: 		}
L_interrupt8:
;FIRMWARE_SYA_ver_1_3_0.c,170 :: 		}
L_end_interrupt:
L__interrupt158:
0x005A	0xF000C015  	MOVFF       21, R0
0x005E	0x0011      	RETFIE      1
; end of _interrupt
_M3Off:
;FIRMWARE_SYA_ver_1_3_0.c,92 :: 		void M3Off(){M3 = 0;}
0x0060	0x9287      	BCF         LATE, 1 
L_end_M3Off:
0x0062	0x0012      	RETURN      0
; end of _M3Off
_M2Off:
;FIRMWARE_SYA_ver_1_3_0.c,90 :: 		void M2Off(){M2 = 0;}
0x0064	0x9087      	BCF         LATE, 0 
L_end_M2Off:
0x0066	0x0012      	RETURN      0
; end of _M2Off
_M1Off:
;FIRMWARE_SYA_ver_1_3_0.c,88 :: 		void M1Off(){M1 = 0;}
0x0068	0x9A83      	BCF         LATA, 5 
L_end_M1Off:
0x006A	0x0012      	RETURN      0
; end of _M1Off
_M2On:
;FIRMWARE_SYA_ver_1_3_0.c,89 :: 		void M2On(){M2 = 1;}
0x006C	0x8087      	BSF         LATE, 0 
L_end_M2On:
0x006E	0x0012      	RETURN      0
; end of _M2On
_M3On:
;FIRMWARE_SYA_ver_1_3_0.c,91 :: 		void M3On(){M3 = 1;}
0x0070	0x8287      	BSF         LATE, 1 
L_end_M3On:
0x0072	0x0012      	RETURN      0
; end of _M3On
_M1On:
;FIRMWARE_SYA_ver_1_3_0.c,87 :: 		void M1On(){M1 = 1;}
0x0074	0x8A83      	BSF         LATA, 5 
L_end_M1On:
0x0076	0x0012      	RETURN      0
; end of _M1On
_InitMCU:
;FIRMWARE_SYA_ver_1_3_0.c,448 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_1_3_0.c,450 :: 		ADCON0 = 0x08; // Desactivamos ADC
0x0078	0x0E08      	MOVLW       8
0x007A	0x6E60      	MOVWF       ADCON0 
;FIRMWARE_SYA_ver_1_3_0.c,451 :: 		ANSELC = 0x00;    // Ponemos en modo digital al puerto C
0x007C	0x010F      	MOVLB       15
0x007E	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_1_3_0.c,452 :: 		ANSELE = 0x00;    //                ''                 E
0x0080	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_1_3_0.c,453 :: 		ANSELA = 0x00;    //                ''                 A
0x0082	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_1_3_0.c,454 :: 		ANSELD = 0x00;
0x0084	0x6B26      	CLRF        ANSELD, 1
;FIRMWARE_SYA_ver_1_3_0.c,456 :: 		TRISC = 0x0F;  // Ponemos en modo de entrada a C0, C1, c2 Y c3, los demas como salida
0x0086	0x0E0F      	MOVLW       15
0x0088	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_1_3_0.c,457 :: 		TRISD = 0x07;  // Ponemos en modo de entrada a D0 y D1
0x008A	0x0E07      	MOVLW       7
0x008C	0x6E8B      	MOVWF       TRISD 
;FIRMWARE_SYA_ver_1_3_0.c,458 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x008E	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_1_3_0.c,459 :: 		TRISA = 0x80;  //                ''                A
0x0090	0x0E80      	MOVLW       128
0x0092	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_1_3_0.c,461 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x0094	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_1_3_0.c,462 :: 		PORTD = 0x00;
0x0096	0x6A90      	CLRF        PORTD 
;FIRMWARE_SYA_ver_1_3_0.c,463 :: 		PORTE = 0x00;  //                ''             E
0x0098	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_1_3_0.c,464 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x009A	0x0E10      	MOVLW       16
0x009C	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_1_3_0.c,466 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x009E	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_1_3_0.c,467 :: 		LATD = 0x00;
0x00A0	0x6A86      	CLRF        LATD 
;FIRMWARE_SYA_ver_1_3_0.c,468 :: 		LATE = 0x00;   //                ''                      E
0x00A2	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_1_3_0.c,469 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x00A4	0x0E10      	MOVLW       16
0x00A6	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_1_3_0.c,473 :: 		WPUD = 0x07;   // Activamos el pull-up interno de C0 y C1
0x00A8	0x0E07      	MOVLW       7
0x00AA	0x6F25      	MOVWF       WPUD, 1
;FIRMWARE_SYA_ver_1_3_0.c,474 :: 		INLVLD = 0x07; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x00AC	0x0E07      	MOVLW       7
0x00AE	0x6F22      	MOVWF       INLVLD, 1
;FIRMWARE_SYA_ver_1_3_0.c,475 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x00B0	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,476 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x00B2	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,478 :: 		}
L_end_InitMCU:
0x00B4	0x0012      	RETURN      0
; end of _InitMCU
_InitInterrupt:
;FIRMWARE_SYA_ver_1_3_0.c,428 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_1_3_0.c,430 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x00B6	0x0E30      	MOVLW       48
0x00B8	0x010E      	MOVLB       14
0x00BA	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_1_3_0.c,431 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x00BC	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_1_3_0.c,436 :: 		IOCCN = 0x07;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x00BE	0x0E07      	MOVLW       7
0x00C0	0x010F      	MOVLB       15
0x00C2	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_1_3_0.c,437 :: 		IOCCP = 0x07;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x00C4	0x0E07      	MOVLW       7
0x00C6	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_1_3_0.c,438 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x00C8	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_1_3_0.c,439 :: 		PIR0.TMR0IF = 0;
0x00CA	0x010E      	MOVLB       14
0x00CC	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_3_0.c,440 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x00CE	0x0EC0      	MOVLW       192
0x00D0	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_1_3_0.c,442 :: 		}
L_end_InitInterrupt:
0x00D2	0x0012      	RETURN      0
; end of _InitInterrupt
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x00D4	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x00D6	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x00D8	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x00DC	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x00DE	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x00E0	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x00E2	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x00E4	0x0012      	RETURN      0
; end of ___CC2DW
_Events:
;FIRMWARE_SYA_ver_1_3_0.c,362 :: 		void Events(){
;FIRMWARE_SYA_ver_1_3_0.c,364 :: 		if(1 == interruptC0){
0x00E6	0x0E00      	MOVLW       0
0x00E8	0x1831      	XORWF       _interruptC0+1, 0 
0x00EA	0xE102      	BNZ         L__Events212
0x00EC	0x5030      	MOVF        _interruptC0, 0 
0x00EE	0x0A01      	XORLW       1
L__Events212:
0x00F0	0xE112      	BNZ         L_Events113
;FIRMWARE_SYA_ver_1_3_0.c,366 :: 		if(1 == SWITCH1){
0x00F2	0xA08F      	BTFSS       PORTC, 0 
0x00F4	0xD007      	BRA         L_Events114
;FIRMWARE_SYA_ver_1_3_0.c,368 :: 		sn_PosEdge_1 = 0;
0x00F6	0x6A28      	CLRF        _sn_PosEdge_1 
0x00F8	0x6A29      	CLRF        _sn_PosEdge_1+1 
;FIRMWARE_SYA_ver_1_3_0.c,369 :: 		sn_NegEdge_1 = 1;
0x00FA	0x0E01      	MOVLW       1
0x00FC	0x6E18      	MOVWF       _sn_NegEdge_1 
0x00FE	0x0E00      	MOVLW       0
0x0100	0x6E19      	MOVWF       _sn_NegEdge_1+1 
;FIRMWARE_SYA_ver_1_3_0.c,370 :: 		}
0x0102	0xD006      	BRA         L_Events115
L_Events114:
;FIRMWARE_SYA_ver_1_3_0.c,374 :: 		sn_PosEdge_1 = 1;
0x0104	0x0E01      	MOVLW       1
0x0106	0x6E28      	MOVWF       _sn_PosEdge_1 
0x0108	0x0E00      	MOVLW       0
0x010A	0x6E29      	MOVWF       _sn_PosEdge_1+1 
;FIRMWARE_SYA_ver_1_3_0.c,375 :: 		sn_NegEdge_1 = 0;
0x010C	0x6A18      	CLRF        _sn_NegEdge_1 
0x010E	0x6A19      	CLRF        _sn_NegEdge_1+1 
;FIRMWARE_SYA_ver_1_3_0.c,376 :: 		}
L_Events115:
;FIRMWARE_SYA_ver_1_3_0.c,377 :: 		interruptC0 = 0; // Limpiamos la bandera de interrupcion en C0
0x0110	0x6A30      	CLRF        _interruptC0 
0x0112	0x6A31      	CLRF        _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,378 :: 		}
0x0114	0xD036      	BRA         L_Events116
L_Events113:
;FIRMWARE_SYA_ver_1_3_0.c,380 :: 		else if(1 == interruptC1){
0x0116	0x0E00      	MOVLW       0
0x0118	0x182F      	XORWF       _interruptC1+1, 0 
0x011A	0xE102      	BNZ         L__Events213
0x011C	0x502E      	MOVF        _interruptC1, 0 
0x011E	0x0A01      	XORLW       1
L__Events213:
0x0120	0xE112      	BNZ         L_Events117
;FIRMWARE_SYA_ver_1_3_0.c,382 :: 		if(1 == SWITCH2){
0x0122	0xA28F      	BTFSS       PORTC, 1 
0x0124	0xD007      	BRA         L_Events118
;FIRMWARE_SYA_ver_1_3_0.c,384 :: 		sn_PosEdge_2 = 0;
0x0126	0x6A20      	CLRF        _sn_PosEdge_2 
0x0128	0x6A21      	CLRF        _sn_PosEdge_2+1 
;FIRMWARE_SYA_ver_1_3_0.c,385 :: 		sn_NegEdge_2 = 1;
0x012A	0x0E01      	MOVLW       1
0x012C	0x6E1E      	MOVWF       _sn_NegEdge_2 
0x012E	0x0E00      	MOVLW       0
0x0130	0x6E1F      	MOVWF       _sn_NegEdge_2+1 
;FIRMWARE_SYA_ver_1_3_0.c,386 :: 		}
0x0132	0xD006      	BRA         L_Events119
L_Events118:
;FIRMWARE_SYA_ver_1_3_0.c,390 :: 		sn_PosEdge_2 = 1;
0x0134	0x0E01      	MOVLW       1
0x0136	0x6E20      	MOVWF       _sn_PosEdge_2 
0x0138	0x0E00      	MOVLW       0
0x013A	0x6E21      	MOVWF       _sn_PosEdge_2+1 
;FIRMWARE_SYA_ver_1_3_0.c,391 :: 		sn_NegEdge_2 = 0;
0x013C	0x6A1E      	CLRF        _sn_NegEdge_2 
0x013E	0x6A1F      	CLRF        _sn_NegEdge_2+1 
;FIRMWARE_SYA_ver_1_3_0.c,392 :: 		}
L_Events119:
;FIRMWARE_SYA_ver_1_3_0.c,393 :: 		interruptC1 = 0; // Limpiamos la bandera de interrupcion en C1
0x0140	0x6A2E      	CLRF        _interruptC1 
0x0142	0x6A2F      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,394 :: 		}
0x0144	0xD01E      	BRA         L_Events120
L_Events117:
;FIRMWARE_SYA_ver_1_3_0.c,395 :: 		else if(1 == interruptC2){
0x0146	0x0E00      	MOVLW       0
0x0148	0x182D      	XORWF       _interruptC2+1, 0 
0x014A	0xE102      	BNZ         L__Events214
0x014C	0x502C      	MOVF        _interruptC2, 0 
0x014E	0x0A01      	XORLW       1
L__Events214:
0x0150	0xE112      	BNZ         L_Events121
;FIRMWARE_SYA_ver_1_3_0.c,396 :: 		if(1 == SWITCH3){
0x0152	0xA48F      	BTFSS       PORTC, 2 
0x0154	0xD007      	BRA         L_Events122
;FIRMWARE_SYA_ver_1_3_0.c,397 :: 		sn_PosEdge_3 = 0;
0x0156	0x6A1C      	CLRF        _sn_PosEdge_3 
0x0158	0x6A1D      	CLRF        _sn_PosEdge_3+1 
;FIRMWARE_SYA_ver_1_3_0.c,398 :: 		sn_NegEdge_3 = 1;
0x015A	0x0E01      	MOVLW       1
0x015C	0x6E32      	MOVWF       _sn_NegEdge_3 
0x015E	0x0E00      	MOVLW       0
0x0160	0x6E33      	MOVWF       _sn_NegEdge_3+1 
;FIRMWARE_SYA_ver_1_3_0.c,399 :: 		}
0x0162	0xD006      	BRA         L_Events123
L_Events122:
;FIRMWARE_SYA_ver_1_3_0.c,401 :: 		sn_PosEdge_3 = 1;
0x0164	0x0E01      	MOVLW       1
0x0166	0x6E1C      	MOVWF       _sn_PosEdge_3 
0x0168	0x0E00      	MOVLW       0
0x016A	0x6E1D      	MOVWF       _sn_PosEdge_3+1 
;FIRMWARE_SYA_ver_1_3_0.c,402 :: 		sn_NegEdge_3 = 0;
0x016C	0x6A32      	CLRF        _sn_NegEdge_3 
0x016E	0x6A33      	CLRF        _sn_NegEdge_3+1 
;FIRMWARE_SYA_ver_1_3_0.c,403 :: 		}
L_Events123:
;FIRMWARE_SYA_ver_1_3_0.c,404 :: 		interruptC2 = 0;
0x0170	0x6A2C      	CLRF        _interruptC2 
0x0172	0x6A2D      	CLRF        _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,405 :: 		}
0x0174	0xD006      	BRA         L_Events124
L_Events121:
;FIRMWARE_SYA_ver_1_3_0.c,407 :: 		interruptC0 = 0;
0x0176	0x6A30      	CLRF        _interruptC0 
0x0178	0x6A31      	CLRF        _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,408 :: 		interruptC1 = 0;
0x017A	0x6A2E      	CLRF        _interruptC1 
0x017C	0x6A2F      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,409 :: 		interruptC2 = 0;
0x017E	0x6A2C      	CLRF        _interruptC2 
0x0180	0x6A2D      	CLRF        _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,410 :: 		}
L_Events124:
L_Events120:
L_Events116:
;FIRMWARE_SYA_ver_1_3_0.c,411 :: 		return;
;FIRMWARE_SYA_ver_1_3_0.c,413 :: 		}
L_end_Events:
0x0182	0x0012      	RETURN      0
; end of _Events
_FSM:
;FIRMWARE_SYA_ver_1_3_0.c,195 :: 		void FSM(){
;FIRMWARE_SYA_ver_1_3_0.c,196 :: 		clock0 = 1;
0x0184	0x0E01      	MOVLW       1
0x0186	0x6E22      	MOVWF       _clock0 
0x0188	0x0E00      	MOVLW       0
0x018A	0x6E23      	MOVWF       _clock0+1 
;FIRMWARE_SYA_ver_1_3_0.c,197 :: 		switch(current_state){
0x018C	0xD1D0      	BRA         L_FSM16
;FIRMWARE_SYA_ver_1_3_0.c,198 :: 		case s0:
L_FSM18:
;FIRMWARE_SYA_ver_1_3_0.c,199 :: 		M1Off();
0x018E	0xDF6C      	RCALL       _M1Off
;FIRMWARE_SYA_ver_1_3_0.c,200 :: 		M2Off();
0x0190	0xDF69      	RCALL       _M2Off
;FIRMWARE_SYA_ver_1_3_0.c,201 :: 		M3Off();
0x0192	0xDF66      	RCALL       _M3Off
;FIRMWARE_SYA_ver_1_3_0.c,202 :: 		sn_GoTo = 0;
0x0194	0x6A2A      	CLRF        _sn_GoTo 
0x0196	0x6A2B      	CLRF        _sn_GoTo+1 
;FIRMWARE_SYA_ver_1_3_0.c,203 :: 		if((1 == sn_PosEdge_1) && (1 == clock0)){
0x0198	0x0E00      	MOVLW       0
0x019A	0x1829      	XORWF       _sn_PosEdge_1+1, 0 
0x019C	0xE102      	BNZ         L__FSM161
0x019E	0x5028      	MOVF        _sn_PosEdge_1, 0 
0x01A0	0x0A01      	XORLW       1
L__FSM161:
0x01A2	0xE109      	BNZ         L_FSM21
0x01A4	0x0E00      	MOVLW       0
0x01A6	0x1823      	XORWF       _clock0+1, 0 
0x01A8	0xE102      	BNZ         L__FSM162
0x01AA	0x5022      	MOVF        _clock0, 0 
0x01AC	0x0A01      	XORLW       1
L__FSM162:
0x01AE	0xE103      	BNZ         L_FSM21
L__FSM150:
;FIRMWARE_SYA_ver_1_3_0.c,204 :: 		next_state = s7;
0x01B0	0x0E07      	MOVLW       7
0x01B2	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,205 :: 		}
0x01B4	0xD000      	BRA         L_FSM22
L_FSM21:
;FIRMWARE_SYA_ver_1_3_0.c,207 :: 		}
L_FSM22:
;FIRMWARE_SYA_ver_1_3_0.c,208 :: 		break;
0x01B6	0xD1DB      	BRA         L_FSM17
;FIRMWARE_SYA_ver_1_3_0.c,209 :: 		case s1:
L_FSM23:
;FIRMWARE_SYA_ver_1_3_0.c,210 :: 		M1On();
0x01B8	0xDF5D      	RCALL       _M1On
;FIRMWARE_SYA_ver_1_3_0.c,211 :: 		M2Off();
0x01BA	0xDF54      	RCALL       _M2Off
;FIRMWARE_SYA_ver_1_3_0.c,212 :: 		M3Off();
0x01BC	0xDF51      	RCALL       _M3Off
;FIRMWARE_SYA_ver_1_3_0.c,213 :: 		GT1 = 1;
0x01BE	0x0E01      	MOVLW       1
0x01C0	0x6E26      	MOVWF       _GT1 
0x01C2	0x0E00      	MOVLW       0
0x01C4	0x6E27      	MOVWF       _GT1+1 
;FIRMWARE_SYA_ver_1_3_0.c,214 :: 		GT2 = 0;
0x01C6	0x6A1A      	CLRF        _GT2 
0x01C8	0x6A1B      	CLRF        _GT2+1 
;FIRMWARE_SYA_ver_1_3_0.c,215 :: 		GT3 = 0;
0x01CA	0x6A16      	CLRF        _GT3 
0x01CC	0x6A17      	CLRF        _GT3+1 
;FIRMWARE_SYA_ver_1_3_0.c,217 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x01CE	0x0E00      	MOVLW       0
0x01D0	0x1819      	XORWF       _sn_NegEdge_1+1, 0 
0x01D2	0xE102      	BNZ         L__FSM163
0x01D4	0x5018      	MOVF        _sn_NegEdge_1, 0 
0x01D6	0x0A01      	XORLW       1
L__FSM163:
0x01D8	0xE108      	BNZ         L_FSM26
0x01DA	0x0E00      	MOVLW       0
0x01DC	0x1823      	XORWF       _clock0+1, 0 
0x01DE	0xE102      	BNZ         L__FSM164
0x01E0	0x5022      	MOVF        _clock0, 0 
0x01E2	0x0A01      	XORLW       1
L__FSM164:
0x01E4	0xE102      	BNZ         L_FSM26
L__FSM149:
;FIRMWARE_SYA_ver_1_3_0.c,219 :: 		next_state = s0;
0x01E6	0x6A25      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,220 :: 		}
0x01E8	0xD00F      	BRA         L_FSM27
L_FSM26:
;FIRMWARE_SYA_ver_1_3_0.c,221 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x01EA	0x0E00      	MOVLW       0
0x01EC	0x1821      	XORWF       _sn_PosEdge_2+1, 0 
0x01EE	0xE102      	BNZ         L__FSM165
0x01F0	0x5020      	MOVF        _sn_PosEdge_2, 0 
0x01F2	0x0A01      	XORLW       1
L__FSM165:
0x01F4	0xE109      	BNZ         L_FSM30
0x01F6	0x0E00      	MOVLW       0
0x01F8	0x1823      	XORWF       _clock0+1, 0 
0x01FA	0xE102      	BNZ         L__FSM166
0x01FC	0x5022      	MOVF        _clock0, 0 
0x01FE	0x0A01      	XORLW       1
L__FSM166:
0x0200	0xE103      	BNZ         L_FSM30
L__FSM148:
;FIRMWARE_SYA_ver_1_3_0.c,222 :: 		next_state = s4;
0x0202	0x0E04      	MOVLW       4
0x0204	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,223 :: 		}
0x0206	0xD000      	BRA         L_FSM31
L_FSM30:
;FIRMWARE_SYA_ver_1_3_0.c,225 :: 		}
L_FSM31:
L_FSM27:
;FIRMWARE_SYA_ver_1_3_0.c,226 :: 		break;
0x0208	0xD1B2      	BRA         L_FSM17
;FIRMWARE_SYA_ver_1_3_0.c,227 :: 		case s2:
L_FSM32:
;FIRMWARE_SYA_ver_1_3_0.c,228 :: 		M1Off();
0x020A	0xDF2E      	RCALL       _M1Off
;FIRMWARE_SYA_ver_1_3_0.c,229 :: 		M2On();
0x020C	0xDF2F      	RCALL       _M2On
;FIRMWARE_SYA_ver_1_3_0.c,230 :: 		M3Off();
0x020E	0xDF28      	RCALL       _M3Off
;FIRMWARE_SYA_ver_1_3_0.c,231 :: 		GT1 = 0;
0x0210	0x6A26      	CLRF        _GT1 
0x0212	0x6A27      	CLRF        _GT1+1 
;FIRMWARE_SYA_ver_1_3_0.c,232 :: 		GT2 = 1;
0x0214	0x0E01      	MOVLW       1
0x0216	0x6E1A      	MOVWF       _GT2 
0x0218	0x0E00      	MOVLW       0
0x021A	0x6E1B      	MOVWF       _GT2+1 
;FIRMWARE_SYA_ver_1_3_0.c,233 :: 		GT3 = 0;
0x021C	0x6A16      	CLRF        _GT3 
0x021E	0x6A17      	CLRF        _GT3+1 
;FIRMWARE_SYA_ver_1_3_0.c,234 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x0220	0x0E00      	MOVLW       0
0x0222	0x1819      	XORWF       _sn_NegEdge_1+1, 0 
0x0224	0xE102      	BNZ         L__FSM167
0x0226	0x5018      	MOVF        _sn_NegEdge_1, 0 
0x0228	0x0A01      	XORLW       1
L__FSM167:
0x022A	0xE108      	BNZ         L_FSM35
0x022C	0x0E00      	MOVLW       0
0x022E	0x1823      	XORWF       _clock0+1, 0 
0x0230	0xE102      	BNZ         L__FSM168
0x0232	0x5022      	MOVF        _clock0, 0 
0x0234	0x0A01      	XORLW       1
L__FSM168:
0x0236	0xE102      	BNZ         L_FSM35
L__FSM147:
;FIRMWARE_SYA_ver_1_3_0.c,235 :: 		next_state = s0;
0x0238	0x6A25      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,236 :: 		}
0x023A	0xD00F      	BRA         L_FSM36
L_FSM35:
;FIRMWARE_SYA_ver_1_3_0.c,237 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x023C	0x0E00      	MOVLW       0
0x023E	0x1821      	XORWF       _sn_PosEdge_2+1, 0 
0x0240	0xE102      	BNZ         L__FSM169
0x0242	0x5020      	MOVF        _sn_PosEdge_2, 0 
0x0244	0x0A01      	XORLW       1
L__FSM169:
0x0246	0xE109      	BNZ         L_FSM39
0x0248	0x0E00      	MOVLW       0
0x024A	0x1823      	XORWF       _clock0+1, 0 
0x024C	0xE102      	BNZ         L__FSM170
0x024E	0x5022      	MOVF        _clock0, 0 
0x0250	0x0A01      	XORLW       1
L__FSM170:
0x0252	0xE103      	BNZ         L_FSM39
L__FSM146:
;FIRMWARE_SYA_ver_1_3_0.c,238 :: 		next_state = s4;
0x0254	0x0E04      	MOVLW       4
0x0256	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,239 :: 		}
0x0258	0xD000      	BRA         L_FSM40
L_FSM39:
;FIRMWARE_SYA_ver_1_3_0.c,241 :: 		}
L_FSM40:
L_FSM36:
;FIRMWARE_SYA_ver_1_3_0.c,242 :: 		break;
0x025A	0xD189      	BRA         L_FSM17
;FIRMWARE_SYA_ver_1_3_0.c,243 :: 		case s3:
L_FSM41:
;FIRMWARE_SYA_ver_1_3_0.c,244 :: 		M1Off();
0x025C	0xDF05      	RCALL       _M1Off
;FIRMWARE_SYA_ver_1_3_0.c,245 :: 		M2Off();
0x025E	0xDF02      	RCALL       _M2Off
;FIRMWARE_SYA_ver_1_3_0.c,246 :: 		M3On();
0x0260	0xDF07      	RCALL       _M3On
;FIRMWARE_SYA_ver_1_3_0.c,247 :: 		GT1 = 0;
0x0262	0x6A26      	CLRF        _GT1 
0x0264	0x6A27      	CLRF        _GT1+1 
;FIRMWARE_SYA_ver_1_3_0.c,248 :: 		GT2 = 0;
0x0266	0x6A1A      	CLRF        _GT2 
0x0268	0x6A1B      	CLRF        _GT2+1 
;FIRMWARE_SYA_ver_1_3_0.c,249 :: 		GT3 = 1;
0x026A	0x0E01      	MOVLW       1
0x026C	0x6E16      	MOVWF       _GT3 
0x026E	0x0E00      	MOVLW       0
0x0270	0x6E17      	MOVWF       _GT3+1 
;FIRMWARE_SYA_ver_1_3_0.c,250 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x0272	0x0E00      	MOVLW       0
0x0274	0x1819      	XORWF       _sn_NegEdge_1+1, 0 
0x0276	0xE102      	BNZ         L__FSM171
0x0278	0x5018      	MOVF        _sn_NegEdge_1, 0 
0x027A	0x0A01      	XORLW       1
L__FSM171:
0x027C	0xE108      	BNZ         L_FSM44
0x027E	0x0E00      	MOVLW       0
0x0280	0x1823      	XORWF       _clock0+1, 0 
0x0282	0xE102      	BNZ         L__FSM172
0x0284	0x5022      	MOVF        _clock0, 0 
0x0286	0x0A01      	XORLW       1
L__FSM172:
0x0288	0xE102      	BNZ         L_FSM44
L__FSM145:
;FIRMWARE_SYA_ver_1_3_0.c,251 :: 		next_state = s0;
0x028A	0x6A25      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,252 :: 		}
0x028C	0xD00F      	BRA         L_FSM45
L_FSM44:
;FIRMWARE_SYA_ver_1_3_0.c,253 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x028E	0x0E00      	MOVLW       0
0x0290	0x1821      	XORWF       _sn_PosEdge_2+1, 0 
0x0292	0xE102      	BNZ         L__FSM173
0x0294	0x5020      	MOVF        _sn_PosEdge_2, 0 
0x0296	0x0A01      	XORLW       1
L__FSM173:
0x0298	0xE109      	BNZ         L_FSM48
0x029A	0x0E00      	MOVLW       0
0x029C	0x1823      	XORWF       _clock0+1, 0 
0x029E	0xE102      	BNZ         L__FSM174
0x02A0	0x5022      	MOVF        _clock0, 0 
0x02A2	0x0A01      	XORLW       1
L__FSM174:
0x02A4	0xE103      	BNZ         L_FSM48
L__FSM144:
;FIRMWARE_SYA_ver_1_3_0.c,254 :: 		next_state = s4;
0x02A6	0x0E04      	MOVLW       4
0x02A8	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,255 :: 		}
0x02AA	0xD000      	BRA         L_FSM49
L_FSM48:
;FIRMWARE_SYA_ver_1_3_0.c,257 :: 		}
L_FSM49:
L_FSM45:
;FIRMWARE_SYA_ver_1_3_0.c,258 :: 		break;
0x02AC	0xD160      	BRA         L_FSM17
;FIRMWARE_SYA_ver_1_3_0.c,259 :: 		case s4:
L_FSM50:
;FIRMWARE_SYA_ver_1_3_0.c,260 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x02AE	0x0E00      	MOVLW       0
0x02B0	0x1827      	XORWF       _GT1+1, 0 
0x02B2	0xE102      	BNZ         L__FSM175
0x02B4	0x5026      	MOVF        _GT1, 0 
0x02B6	0x0A01      	XORLW       1
L__FSM175:
0x02B8	0xE110      	BNZ         L_FSM53
0x02BA	0x0E00      	MOVLW       0
0x02BC	0x181B      	XORWF       _GT2+1, 0 
0x02BE	0xE102      	BNZ         L__FSM176
0x02C0	0x501A      	MOVF        _GT2, 0 
0x02C2	0x0A00      	XORLW       0
L__FSM176:
0x02C4	0xE10A      	BNZ         L_FSM53
0x02C6	0x0E00      	MOVLW       0
0x02C8	0x1817      	XORWF       _GT3+1, 0 
0x02CA	0xE102      	BNZ         L__FSM177
0x02CC	0x5016      	MOVF        _GT3, 0 
0x02CE	0x0A00      	XORLW       0
L__FSM177:
0x02D0	0xE104      	BNZ         L_FSM53
L__FSM143:
;FIRMWARE_SYA_ver_1_3_0.c,261 :: 		M1On();
0x02D2	0xDED0      	RCALL       _M1On
;FIRMWARE_SYA_ver_1_3_0.c,262 :: 		M2On();
0x02D4	0xDECB      	RCALL       _M2On
;FIRMWARE_SYA_ver_1_3_0.c,263 :: 		M3Off();
0x02D6	0xDEC4      	RCALL       _M3Off
;FIRMWARE_SYA_ver_1_3_0.c,264 :: 		}
0x02D8	0xD02B      	BRA         L_FSM54
L_FSM53:
;FIRMWARE_SYA_ver_1_3_0.c,265 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x02DA	0x0E00      	MOVLW       0
0x02DC	0x181B      	XORWF       _GT2+1, 0 
0x02DE	0xE102      	BNZ         L__FSM178
0x02E0	0x501A      	MOVF        _GT2, 0 
0x02E2	0x0A01      	XORLW       1
L__FSM178:
0x02E4	0xE110      	BNZ         L_FSM57
0x02E6	0x0E00      	MOVLW       0
0x02E8	0x1827      	XORWF       _GT1+1, 0 
0x02EA	0xE102      	BNZ         L__FSM179
0x02EC	0x5026      	MOVF        _GT1, 0 
0x02EE	0x0A00      	XORLW       0
L__FSM179:
0x02F0	0xE10A      	BNZ         L_FSM57
0x02F2	0x0E00      	MOVLW       0
0x02F4	0x1817      	XORWF       _GT3+1, 0 
0x02F6	0xE102      	BNZ         L__FSM180
0x02F8	0x5016      	MOVF        _GT3, 0 
0x02FA	0x0A00      	XORLW       0
L__FSM180:
0x02FC	0xE104      	BNZ         L_FSM57
L__FSM142:
;FIRMWARE_SYA_ver_1_3_0.c,266 :: 		M1Off();
0x02FE	0xDEB4      	RCALL       _M1Off
;FIRMWARE_SYA_ver_1_3_0.c,267 :: 		M2On();
0x0300	0xDEB5      	RCALL       _M2On
;FIRMWARE_SYA_ver_1_3_0.c,268 :: 		M3On();
0x0302	0xDEB6      	RCALL       _M3On
;FIRMWARE_SYA_ver_1_3_0.c,269 :: 		}
0x0304	0xD015      	BRA         L_FSM58
L_FSM57:
;FIRMWARE_SYA_ver_1_3_0.c,270 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x0306	0x0E00      	MOVLW       0
0x0308	0x1817      	XORWF       _GT3+1, 0 
0x030A	0xE102      	BNZ         L__FSM181
0x030C	0x5016      	MOVF        _GT3, 0 
0x030E	0x0A01      	XORLW       1
L__FSM181:
0x0310	0xE10F      	BNZ         L_FSM61
0x0312	0x0E00      	MOVLW       0
0x0314	0x1827      	XORWF       _GT1+1, 0 
0x0316	0xE102      	BNZ         L__FSM182
0x0318	0x5026      	MOVF        _GT1, 0 
0x031A	0x0A00      	XORLW       0
L__FSM182:
0x031C	0xE109      	BNZ         L_FSM61
0x031E	0x0E00      	MOVLW       0
0x0320	0x181B      	XORWF       _GT2+1, 0 
0x0322	0xE102      	BNZ         L__FSM183
0x0324	0x501A      	MOVF        _GT2, 0 
0x0326	0x0A00      	XORLW       0
L__FSM183:
0x0328	0xE103      	BNZ         L_FSM61
L__FSM141:
;FIRMWARE_SYA_ver_1_3_0.c,271 :: 		M1On();
0x032A	0xDEA4      	RCALL       _M1On
;FIRMWARE_SYA_ver_1_3_0.c,272 :: 		M2Off();
0x032C	0xDE9B      	RCALL       _M2Off
;FIRMWARE_SYA_ver_1_3_0.c,273 :: 		M3On();
0x032E	0xDEA0      	RCALL       _M3On
;FIRMWARE_SYA_ver_1_3_0.c,274 :: 		}
L_FSM61:
L_FSM58:
L_FSM54:
;FIRMWARE_SYA_ver_1_3_0.c,275 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x0330	0x0E00      	MOVLW       0
0x0332	0x1819      	XORWF       _sn_NegEdge_1+1, 0 
0x0334	0xE102      	BNZ         L__FSM184
0x0336	0x5018      	MOVF        _sn_NegEdge_1, 0 
0x0338	0x0A01      	XORLW       1
L__FSM184:
0x033A	0xE108      	BNZ         L_FSM64
0x033C	0x0E00      	MOVLW       0
0x033E	0x1823      	XORWF       _clock0+1, 0 
0x0340	0xE102      	BNZ         L__FSM185
0x0342	0x5022      	MOVF        _clock0, 0 
0x0344	0x0A01      	XORLW       1
L__FSM185:
0x0346	0xE102      	BNZ         L_FSM64
L__FSM140:
;FIRMWARE_SYA_ver_1_3_0.c,276 :: 		next_state = s0;
0x0348	0x6A25      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,277 :: 		}
0x034A	0xD01E      	BRA         L_FSM65
L_FSM64:
;FIRMWARE_SYA_ver_1_3_0.c,278 :: 		else if((1 == sn_NegEdge_2) && (1 == clock0)){
0x034C	0x0E00      	MOVLW       0
0x034E	0x181F      	XORWF       _sn_NegEdge_2+1, 0 
0x0350	0xE102      	BNZ         L__FSM186
0x0352	0x501E      	MOVF        _sn_NegEdge_2, 0 
0x0354	0x0A01      	XORLW       1
L__FSM186:
0x0356	0xE109      	BNZ         L_FSM68
0x0358	0x0E00      	MOVLW       0
0x035A	0x1823      	XORWF       _clock0+1, 0 
0x035C	0xE102      	BNZ         L__FSM187
0x035E	0x5022      	MOVF        _clock0, 0 
0x0360	0x0A01      	XORLW       1
L__FSM187:
0x0362	0xE103      	BNZ         L_FSM68
L__FSM139:
;FIRMWARE_SYA_ver_1_3_0.c,279 :: 		next_state = s7;
0x0364	0x0E07      	MOVLW       7
0x0366	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,280 :: 		}
0x0368	0xD00F      	BRA         L_FSM69
L_FSM68:
;FIRMWARE_SYA_ver_1_3_0.c,281 :: 		else if((1 == sn_PosEdge_3) && (1 == clock0)){
0x036A	0x0E00      	MOVLW       0
0x036C	0x181D      	XORWF       _sn_PosEdge_3+1, 0 
0x036E	0xE102      	BNZ         L__FSM188
0x0370	0x501C      	MOVF        _sn_PosEdge_3, 0 
0x0372	0x0A01      	XORLW       1
L__FSM188:
0x0374	0xE109      	BNZ         L_FSM72
0x0376	0x0E00      	MOVLW       0
0x0378	0x1823      	XORWF       _clock0+1, 0 
0x037A	0xE102      	BNZ         L__FSM189
0x037C	0x5022      	MOVF        _clock0, 0 
0x037E	0x0A01      	XORLW       1
L__FSM189:
0x0380	0xE103      	BNZ         L_FSM72
L__FSM138:
;FIRMWARE_SYA_ver_1_3_0.c,282 :: 		next_state = s5;
0x0382	0x0E05      	MOVLW       5
0x0384	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,283 :: 		}
0x0386	0xD000      	BRA         L_FSM73
L_FSM72:
;FIRMWARE_SYA_ver_1_3_0.c,285 :: 		}
L_FSM73:
L_FSM69:
L_FSM65:
;FIRMWARE_SYA_ver_1_3_0.c,286 :: 		break;
0x0388	0xD0F2      	BRA         L_FSM17
;FIRMWARE_SYA_ver_1_3_0.c,287 :: 		case s5:
L_FSM74:
;FIRMWARE_SYA_ver_1_3_0.c,288 :: 		M1On();
0x038A	0xDE74      	RCALL       _M1On
;FIRMWARE_SYA_ver_1_3_0.c,289 :: 		M2On();
0x038C	0xDE6F      	RCALL       _M2On
;FIRMWARE_SYA_ver_1_3_0.c,290 :: 		M3On();
0x038E	0xDE70      	RCALL       _M3On
;FIRMWARE_SYA_ver_1_3_0.c,291 :: 		if(((1 == sn_NegEdge_1) || (1 == sn_NegEdge_2)) && (1 == clock0)){
0x0390	0x0E00      	MOVLW       0
0x0392	0x1819      	XORWF       _sn_NegEdge_1+1, 0 
0x0394	0xE102      	BNZ         L__FSM190
0x0396	0x5018      	MOVF        _sn_NegEdge_1, 0 
0x0398	0x0A01      	XORLW       1
L__FSM190:
0x039A	0xE007      	BZ          L__FSM137
0x039C	0x0E00      	MOVLW       0
0x039E	0x181F      	XORWF       _sn_NegEdge_2+1, 0 
0x03A0	0xE102      	BNZ         L__FSM191
0x03A2	0x501E      	MOVF        _sn_NegEdge_2, 0 
0x03A4	0x0A01      	XORLW       1
L__FSM191:
0x03A6	0xE001      	BZ          L__FSM137
0x03A8	0xD008      	BRA         L_FSM79
L__FSM137:
0x03AA	0x0E00      	MOVLW       0
0x03AC	0x1823      	XORWF       _clock0+1, 0 
0x03AE	0xE102      	BNZ         L__FSM192
0x03B0	0x5022      	MOVF        _clock0, 0 
0x03B2	0x0A01      	XORLW       1
L__FSM192:
0x03B4	0xE102      	BNZ         L_FSM79
L__FSM136:
;FIRMWARE_SYA_ver_1_3_0.c,292 :: 		next_state = s0;
0x03B6	0x6A25      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,293 :: 		}
0x03B8	0xD013      	BRA         L_FSM80
L_FSM79:
;FIRMWARE_SYA_ver_1_3_0.c,294 :: 		else if((1 == sn_NegEdge_3) && (1 == clock0)){
0x03BA	0x0E00      	MOVLW       0
0x03BC	0x1833      	XORWF       _sn_NegEdge_3+1, 0 
0x03BE	0xE102      	BNZ         L__FSM193
0x03C0	0x5032      	MOVF        _sn_NegEdge_3, 0 
0x03C2	0x0A01      	XORLW       1
L__FSM193:
0x03C4	0xE10D      	BNZ         L_FSM83
0x03C6	0x0E00      	MOVLW       0
0x03C8	0x1823      	XORWF       _clock0+1, 0 
0x03CA	0xE102      	BNZ         L__FSM194
0x03CC	0x5022      	MOVF        _clock0, 0 
0x03CE	0x0A01      	XORLW       1
L__FSM194:
0x03D0	0xE107      	BNZ         L_FSM83
L__FSM135:
;FIRMWARE_SYA_ver_1_3_0.c,295 :: 		sn_GoTo = 1;
0x03D2	0x0E01      	MOVLW       1
0x03D4	0x6E2A      	MOVWF       _sn_GoTo 
0x03D6	0x0E00      	MOVLW       0
0x03D8	0x6E2B      	MOVWF       _sn_GoTo+1 
;FIRMWARE_SYA_ver_1_3_0.c,296 :: 		next_state = s6;
0x03DA	0x0E06      	MOVLW       6
0x03DC	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,297 :: 		}
0x03DE	0xD000      	BRA         L_FSM84
L_FSM83:
;FIRMWARE_SYA_ver_1_3_0.c,299 :: 		}
L_FSM84:
L_FSM80:
;FIRMWARE_SYA_ver_1_3_0.c,300 :: 		break;
0x03E0	0xD0C6      	BRA         L_FSM17
;FIRMWARE_SYA_ver_1_3_0.c,301 :: 		case s6:
L_FSM85:
;FIRMWARE_SYA_ver_1_3_0.c,302 :: 		if((1 == sn_GoTo) && (1 == GT1) && (1 == clock0)){
0x03E2	0x0E00      	MOVLW       0
0x03E4	0x182B      	XORWF       _sn_GoTo+1, 0 
0x03E6	0xE102      	BNZ         L__FSM195
0x03E8	0x502A      	MOVF        _sn_GoTo, 0 
0x03EA	0x0A01      	XORLW       1
L__FSM195:
0x03EC	0xE117      	BNZ         L_FSM88
0x03EE	0x0E00      	MOVLW       0
0x03F0	0x1827      	XORWF       _GT1+1, 0 
0x03F2	0xE102      	BNZ         L__FSM196
0x03F4	0x5026      	MOVF        _GT1, 0 
0x03F6	0x0A01      	XORLW       1
L__FSM196:
0x03F8	0xE111      	BNZ         L_FSM88
0x03FA	0x0E00      	MOVLW       0
0x03FC	0x1823      	XORWF       _clock0+1, 0 
0x03FE	0xE102      	BNZ         L__FSM197
0x0400	0x5022      	MOVF        _clock0, 0 
0x0402	0x0A01      	XORLW       1
L__FSM197:
0x0404	0xE10B      	BNZ         L_FSM88
L__FSM134:
;FIRMWARE_SYA_ver_1_3_0.c,303 :: 		GT2 = 1;
0x0406	0x0E01      	MOVLW       1
0x0408	0x6E1A      	MOVWF       _GT2 
0x040A	0x0E00      	MOVLW       0
0x040C	0x6E1B      	MOVWF       _GT2+1 
;FIRMWARE_SYA_ver_1_3_0.c,304 :: 		GT3 = 0;
0x040E	0x6A16      	CLRF        _GT3 
0x0410	0x6A17      	CLRF        _GT3+1 
;FIRMWARE_SYA_ver_1_3_0.c,305 :: 		GT1 = 0;
0x0412	0x6A26      	CLRF        _GT1 
0x0414	0x6A27      	CLRF        _GT1+1 
;FIRMWARE_SYA_ver_1_3_0.c,306 :: 		next_state = s4;
0x0416	0x0E04      	MOVLW       4
0x0418	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,307 :: 		}
0x041A	0xD03A      	BRA         L_FSM89
L_FSM88:
;FIRMWARE_SYA_ver_1_3_0.c,308 :: 		else if((1 == sn_GoTo) && (1 == GT2) && (1 == clock0)){
0x041C	0x0E00      	MOVLW       0
0x041E	0x182B      	XORWF       _sn_GoTo+1, 0 
0x0420	0xE102      	BNZ         L__FSM198
0x0422	0x502A      	MOVF        _sn_GoTo, 0 
0x0424	0x0A01      	XORLW       1
L__FSM198:
0x0426	0xE117      	BNZ         L_FSM92
0x0428	0x0E00      	MOVLW       0
0x042A	0x181B      	XORWF       _GT2+1, 0 
0x042C	0xE102      	BNZ         L__FSM199
0x042E	0x501A      	MOVF        _GT2, 0 
0x0430	0x0A01      	XORLW       1
L__FSM199:
0x0432	0xE111      	BNZ         L_FSM92
0x0434	0x0E00      	MOVLW       0
0x0436	0x1823      	XORWF       _clock0+1, 0 
0x0438	0xE102      	BNZ         L__FSM200
0x043A	0x5022      	MOVF        _clock0, 0 
0x043C	0x0A01      	XORLW       1
L__FSM200:
0x043E	0xE10B      	BNZ         L_FSM92
L__FSM133:
;FIRMWARE_SYA_ver_1_3_0.c,309 :: 		GT2 = 0;
0x0440	0x6A1A      	CLRF        _GT2 
0x0442	0x6A1B      	CLRF        _GT2+1 
;FIRMWARE_SYA_ver_1_3_0.c,310 :: 		GT1 = 0;
0x0444	0x6A26      	CLRF        _GT1 
0x0446	0x6A27      	CLRF        _GT1+1 
;FIRMWARE_SYA_ver_1_3_0.c,311 :: 		GT3 = 1;
0x0448	0x0E01      	MOVLW       1
0x044A	0x6E16      	MOVWF       _GT3 
0x044C	0x0E00      	MOVLW       0
0x044E	0x6E17      	MOVWF       _GT3+1 
;FIRMWARE_SYA_ver_1_3_0.c,312 :: 		next_state = s4;
0x0450	0x0E04      	MOVLW       4
0x0452	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,313 :: 		}
0x0454	0xD01D      	BRA         L_FSM93
L_FSM92:
;FIRMWARE_SYA_ver_1_3_0.c,314 :: 		else if((1 == sn_GoTo) && (1 == GT3) && (1 == clock0)){
0x0456	0x0E00      	MOVLW       0
0x0458	0x182B      	XORWF       _sn_GoTo+1, 0 
0x045A	0xE102      	BNZ         L__FSM201
0x045C	0x502A      	MOVF        _sn_GoTo, 0 
0x045E	0x0A01      	XORLW       1
L__FSM201:
0x0460	0xE117      	BNZ         L_FSM96
0x0462	0x0E00      	MOVLW       0
0x0464	0x1817      	XORWF       _GT3+1, 0 
0x0466	0xE102      	BNZ         L__FSM202
0x0468	0x5016      	MOVF        _GT3, 0 
0x046A	0x0A01      	XORLW       1
L__FSM202:
0x046C	0xE111      	BNZ         L_FSM96
0x046E	0x0E00      	MOVLW       0
0x0470	0x1823      	XORWF       _clock0+1, 0 
0x0472	0xE102      	BNZ         L__FSM203
0x0474	0x5022      	MOVF        _clock0, 0 
0x0476	0x0A01      	XORLW       1
L__FSM203:
0x0478	0xE10B      	BNZ         L_FSM96
L__FSM132:
;FIRMWARE_SYA_ver_1_3_0.c,315 :: 		GT1 = 1;
0x047A	0x0E01      	MOVLW       1
0x047C	0x6E26      	MOVWF       _GT1 
0x047E	0x0E00      	MOVLW       0
0x0480	0x6E27      	MOVWF       _GT1+1 
;FIRMWARE_SYA_ver_1_3_0.c,316 :: 		GT2 = 0;
0x0482	0x6A1A      	CLRF        _GT2 
0x0484	0x6A1B      	CLRF        _GT2+1 
;FIRMWARE_SYA_ver_1_3_0.c,317 :: 		GT3 = 0;
0x0486	0x6A16      	CLRF        _GT3 
0x0488	0x6A17      	CLRF        _GT3+1 
;FIRMWARE_SYA_ver_1_3_0.c,318 :: 		next_state = s4;
0x048A	0x0E04      	MOVLW       4
0x048C	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,319 :: 		}
0x048E	0xD000      	BRA         L_FSM97
L_FSM96:
;FIRMWARE_SYA_ver_1_3_0.c,321 :: 		}
L_FSM97:
L_FSM93:
L_FSM89:
;FIRMWARE_SYA_ver_1_3_0.c,322 :: 		break;
0x0490	0xD06E      	BRA         L_FSM17
;FIRMWARE_SYA_ver_1_3_0.c,323 :: 		case s7:
L_FSM98:
;FIRMWARE_SYA_ver_1_3_0.c,324 :: 		if(1 == sn_PosEdge_1){
0x0492	0x0E00      	MOVLW       0
0x0494	0x1829      	XORWF       _sn_PosEdge_1+1, 0 
0x0496	0xE102      	BNZ         L__FSM204
0x0498	0x5028      	MOVF        _sn_PosEdge_1, 0 
0x049A	0x0A01      	XORLW       1
L__FSM204:
0x049C	0xE139      	BNZ         L_FSM99
;FIRMWARE_SYA_ver_1_3_0.c,325 :: 		if((1 == GT1) && (1 == clock0)){
0x049E	0x0E00      	MOVLW       0
0x04A0	0x1827      	XORWF       _GT1+1, 0 
0x04A2	0xE102      	BNZ         L__FSM205
0x04A4	0x5026      	MOVF        _GT1, 0 
0x04A6	0x0A01      	XORLW       1
L__FSM205:
0x04A8	0xE10D      	BNZ         L_FSM102
0x04AA	0x0E00      	MOVLW       0
0x04AC	0x1823      	XORWF       _clock0+1, 0 
0x04AE	0xE102      	BNZ         L__FSM206
0x04B0	0x5022      	MOVF        _clock0, 0 
0x04B2	0x0A01      	XORLW       1
L__FSM206:
0x04B4	0xE107      	BNZ         L_FSM102
L__FSM131:
;FIRMWARE_SYA_ver_1_3_0.c,326 :: 		next_state = s2;
0x04B6	0x0E02      	MOVLW       2
0x04B8	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,327 :: 		GT2 = 0;
0x04BA	0x6A1A      	CLRF        _GT2 
0x04BC	0x6A1B      	CLRF        _GT2+1 
;FIRMWARE_SYA_ver_1_3_0.c,328 :: 		GT3 = 0;
0x04BE	0x6A16      	CLRF        _GT3 
0x04C0	0x6A17      	CLRF        _GT3+1 
;FIRMWARE_SYA_ver_1_3_0.c,329 :: 		}
0x04C2	0xD026      	BRA         L_FSM103
L_FSM102:
;FIRMWARE_SYA_ver_1_3_0.c,330 :: 		else if((1 == GT2) && (1 == clock0)){
0x04C4	0x0E00      	MOVLW       0
0x04C6	0x181B      	XORWF       _GT2+1, 0 
0x04C8	0xE102      	BNZ         L__FSM207
0x04CA	0x501A      	MOVF        _GT2, 0 
0x04CC	0x0A01      	XORLW       1
L__FSM207:
0x04CE	0xE10D      	BNZ         L_FSM106
0x04D0	0x0E00      	MOVLW       0
0x04D2	0x1823      	XORWF       _clock0+1, 0 
0x04D4	0xE102      	BNZ         L__FSM208
0x04D6	0x5022      	MOVF        _clock0, 0 
0x04D8	0x0A01      	XORLW       1
L__FSM208:
0x04DA	0xE107      	BNZ         L_FSM106
L__FSM130:
;FIRMWARE_SYA_ver_1_3_0.c,331 :: 		next_state = s3;
0x04DC	0x0E03      	MOVLW       3
0x04DE	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,332 :: 		GT1 = 0;
0x04E0	0x6A26      	CLRF        _GT1 
0x04E2	0x6A27      	CLRF        _GT1+1 
;FIRMWARE_SYA_ver_1_3_0.c,333 :: 		GT3 = 0;
0x04E4	0x6A16      	CLRF        _GT3 
0x04E6	0x6A17      	CLRF        _GT3+1 
;FIRMWARE_SYA_ver_1_3_0.c,334 :: 		}
0x04E8	0xD013      	BRA         L_FSM107
L_FSM106:
;FIRMWARE_SYA_ver_1_3_0.c,335 :: 		else if((1 == GT3) && (1 == clock0)){
0x04EA	0x0E00      	MOVLW       0
0x04EC	0x1817      	XORWF       _GT3+1, 0 
0x04EE	0xE102      	BNZ         L__FSM209
0x04F0	0x5016      	MOVF        _GT3, 0 
0x04F2	0x0A01      	XORLW       1
L__FSM209:
0x04F4	0xE10D      	BNZ         L_FSM110
0x04F6	0x0E00      	MOVLW       0
0x04F8	0x1823      	XORWF       _clock0+1, 0 
0x04FA	0xE102      	BNZ         L__FSM210
0x04FC	0x5022      	MOVF        _clock0, 0 
0x04FE	0x0A01      	XORLW       1
L__FSM210:
0x0500	0xE107      	BNZ         L_FSM110
L__FSM129:
;FIRMWARE_SYA_ver_1_3_0.c,336 :: 		next_state = s1;
0x0502	0x0E01      	MOVLW       1
0x0504	0x6E25      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,337 :: 		GT1 = 0;
0x0506	0x6A26      	CLRF        _GT1 
0x0508	0x6A27      	CLRF        _GT1+1 
;FIRMWARE_SYA_ver_1_3_0.c,338 :: 		GT2 = 0;
0x050A	0x6A1A      	CLRF        _GT2 
0x050C	0x6A1B      	CLRF        _GT2+1 
;FIRMWARE_SYA_ver_1_3_0.c,339 :: 		}
0x050E	0xD000      	BRA         L_FSM111
L_FSM110:
;FIRMWARE_SYA_ver_1_3_0.c,341 :: 		}
L_FSM111:
L_FSM107:
L_FSM103:
;FIRMWARE_SYA_ver_1_3_0.c,342 :: 		}
L_FSM99:
;FIRMWARE_SYA_ver_1_3_0.c,343 :: 		break;
0x0510	0xD02E      	BRA         L_FSM17
;FIRMWARE_SYA_ver_1_3_0.c,344 :: 		default:
L_FSM112:
;FIRMWARE_SYA_ver_1_3_0.c,345 :: 		GT1 = 0;
0x0512	0x6A26      	CLRF        _GT1 
0x0514	0x6A27      	CLRF        _GT1+1 
;FIRMWARE_SYA_ver_1_3_0.c,346 :: 		GT2 = 0;
0x0516	0x6A1A      	CLRF        _GT2 
0x0518	0x6A1B      	CLRF        _GT2+1 
;FIRMWARE_SYA_ver_1_3_0.c,347 :: 		GT3 = 1;
0x051A	0x0E01      	MOVLW       1
0x051C	0x6E16      	MOVWF       _GT3 
0x051E	0x0E00      	MOVLW       0
0x0520	0x6E17      	MOVWF       _GT3+1 
;FIRMWARE_SYA_ver_1_3_0.c,348 :: 		M1 = 0;
0x0522	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,349 :: 		M2 = 0;
0x0524	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,350 :: 		M3 = 0;
0x0526	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,351 :: 		current_state = s0;
0x0528	0x6A24      	CLRF        _current_state 
;FIRMWARE_SYA_ver_1_3_0.c,352 :: 		next_state = s0;
0x052A	0x6A25      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,353 :: 		break;
0x052C	0xD020      	BRA         L_FSM17
;FIRMWARE_SYA_ver_1_3_0.c,354 :: 		}
L_FSM16:
0x052E	0x5024      	MOVF        _current_state, 0 
0x0530	0x0A00      	XORLW       0
0x0532	0xB4D8      	BTFSC       STATUS, 2 
0x0534	0xD62C      	BRA         L_FSM18
0x0536	0x5024      	MOVF        _current_state, 0 
0x0538	0x0A01      	XORLW       1
0x053A	0xB4D8      	BTFSC       STATUS, 2 
0x053C	0xD63D      	BRA         L_FSM23
0x053E	0x5024      	MOVF        _current_state, 0 
0x0540	0x0A02      	XORLW       2
0x0542	0xB4D8      	BTFSC       STATUS, 2 
0x0544	0xD662      	BRA         L_FSM32
0x0546	0x5024      	MOVF        _current_state, 0 
0x0548	0x0A03      	XORLW       3
0x054A	0xB4D8      	BTFSC       STATUS, 2 
0x054C	0xD687      	BRA         L_FSM41
0x054E	0x5024      	MOVF        _current_state, 0 
0x0550	0x0A04      	XORLW       4
0x0552	0xB4D8      	BTFSC       STATUS, 2 
0x0554	0xD6AC      	BRA         L_FSM50
0x0556	0x5024      	MOVF        _current_state, 0 
0x0558	0x0A05      	XORLW       5
0x055A	0xB4D8      	BTFSC       STATUS, 2 
0x055C	0xD716      	BRA         L_FSM74
0x055E	0x5024      	MOVF        _current_state, 0 
0x0560	0x0A06      	XORLW       6
0x0562	0xB4D8      	BTFSC       STATUS, 2 
0x0564	0xD73E      	BRA         L_FSM85
0x0566	0x5024      	MOVF        _current_state, 0 
0x0568	0x0A07      	XORLW       7
0x056A	0xE093      	BZ          L_FSM98
0x056C	0xD7D2      	BRA         L_FSM112
L_FSM17:
;FIRMWARE_SYA_ver_1_3_0.c,356 :: 		}
L_end_FSM:
0x056E	0x0012      	RETURN      0
; end of _FSM
_InitSystems:
;FIRMWARE_SYA_ver_1_3_0.c,419 :: 		void InitSystems(){
;FIRMWARE_SYA_ver_1_3_0.c,420 :: 		InitMCU();
0x0570	0xDD83      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_1_3_0.c,421 :: 		InitInterrupt();
0x0572	0xDDA1      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_1_3_0.c,422 :: 		}
L_end_InitSystems:
0x0574	0x0012      	RETURN      0
; end of _InitSystems
_main:
0x0576	0x0E01      	MOVLW       1
0x0578	0x6E16      	MOVWF       _GT3 
0x057A	0x6A17      	CLRF        23 
;FIRMWARE_SYA_ver_1_3_0.c,176 :: 		void main(){
;FIRMWARE_SYA_ver_1_3_0.c,178 :: 		InitSystems();
0x057C	0xDFF9      	RCALL       _InitSystems
;FIRMWARE_SYA_ver_1_3_0.c,180 :: 		do{
L_main9:
;FIRMWARE_SYA_ver_1_3_0.c,181 :: 		}while((1 == IOCCF.B0) || (1 == IOCCF.B1) || (1 == IOCCF.B2));
0x057E	0x010F      	MOVLB       15
0x0580	0xB11A      	BTFSC       IOCCF, 0, 1
0x0582	0xD7FD      	BRA         L_main9
0x0584	0xB31A      	BTFSC       IOCCF, 1, 1
0x0586	0xD7FB      	BRA         L_main9
0x0588	0xB51A      	BTFSC       IOCCF, 2, 1
0x058A	0xD7F9      	BRA         L_main9
L__main128:
;FIRMWARE_SYA_ver_1_3_0.c,183 :: 		while(1){
L_main14:
;FIRMWARE_SYA_ver_1_3_0.c,185 :: 		current_state = next_state; // Maybe move this with Events
0x058C	0xF024C025  	MOVFF       _next_state, _current_state
;FIRMWARE_SYA_ver_1_3_0.c,186 :: 		FSM();
0x0590	0xDDF9      	RCALL       _FSM
;FIRMWARE_SYA_ver_1_3_0.c,187 :: 		}
0x0592	0xD7FC      	BRA         L_main14
;FIRMWARE_SYA_ver_1_3_0.c,189 :: 		}
L_end_main:
0x0594	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [88]    _interrupt
0x0060       [4]    _M3Off
0x0064       [4]    _M2Off
0x0068       [4]    _M1Off
0x006C       [4]    _M2On
0x0070       [4]    _M3On
0x0074       [4]    _M1On
0x0078      [62]    _InitMCU
0x00B6      [30]    _InitInterrupt
0x00D4      [18]    ___CC2DW
0x00E6     [158]    _Events
0x0184    [1004]    _FSM
0x0570       [6]    _InitSystems
0x0576      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [2]    _GT3
0x0018       [2]    _sn_NegEdge_1
0x001A       [2]    _GT2
0x001C       [2]    _sn_PosEdge_3
0x001E       [2]    _sn_NegEdge_2
0x0020       [2]    _sn_PosEdge_2
0x0022       [2]    _clock0
0x0024       [1]    _current_state
0x0025       [1]    _next_state
0x0026       [2]    _GT1
0x0028       [2]    _sn_PosEdge_1
0x002A       [2]    _sn_GoTo
0x002C       [2]    _interruptC2
0x002E       [2]    _interruptC1
0x0030       [2]    _interruptC0
0x0032       [2]    _sn_NegEdge_3
0x0EC2       [0]    IOCIE_bit
0x0EC2       [1]    PIE0
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F21       [1]    ANSELC
0x0F22       [1]    INLVLD
0x0F25       [1]    WPUD
0x0F26       [1]    ANSELD
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F60       [1]    ADCON0
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F86       [1]    LATD
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8B       [1]    TRISD
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F90       [1]    PORTD
0x0F91       [1]    PORTE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
