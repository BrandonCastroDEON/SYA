;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/24/2024 05:59:38 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EF16  	GOTO        1068
_interrupt:
;FIRMWARE_SYA_ver_1_3_0.c,98 :: 		void interrupt(){
0x0008	0xF019C000  	MOVFF       R0, 25
0x000C	0xF018C001  	MOVFF       R1, 24
0x0010	0xF017C00B  	MOVFF       R11, 23
0x0014	0xF016C00C  	MOVFF       R12, 22
0x0018	0xF015C00D  	MOVFF       R13, 21
;FIRMWARE_SYA_ver_1_3_0.c,100 :: 		if(PIR0.TMR0IF){
0x001C	0x010E      	MOVLB       14
0x001E	0xABCA      	BTFSS       PIR0, 5, 1
0x0020	0xD01C      	BRA         L_interrupt0
;FIRMWARE_SYA_ver_1_3_0.c,101 :: 		TMR0H = 0x3C;      // Timer para cada segundo y medio?
0x0022	0x0E3C      	MOVLW       60
0x0024	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_1_3_0.c,102 :: 		TMR0L = 0xB0;      //
0x0026	0x0EB0      	MOVLW       176
0x0028	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_1_3_0.c,103 :: 		PIR0.TMR0IF = 0;
0x002A	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_3_0.c,104 :: 		counter++;
0x002C	0x0E01      	MOVLW       1
0x002E	0x241A      	ADDWF       _counter, 0 
0x0030	0x6E00      	MOVWF       R0 
0x0032	0x0E00      	MOVLW       0
0x0034	0x201B      	ADDWFC      _counter+1, 0 
0x0036	0x6E01      	MOVWF       R1 
0x0038	0xF01AC000  	MOVFF       R0, _counter
0x003C	0xF01BC001  	MOVFF       R1, _counter+1
;FIRMWARE_SYA_ver_1_3_0.c,105 :: 		if(counter >= 100){
0x0040	0x0E80      	MOVLW       128
0x0042	0x181B      	XORWF       _counter+1, 0 
0x0044	0x6E00      	MOVWF       R0 
0x0046	0x0E80      	MOVLW       128
0x0048	0x5C00      	SUBWF       R0, 0 
0x004A	0xE102      	BNZ         L__interrupt136
0x004C	0x0E64      	MOVLW       100
0x004E	0x5C1A      	SUBWF       _counter, 0 
L__interrupt136:
0x0050	0xE304      	BNC         L_interrupt1
;FIRMWARE_SYA_ver_1_3_0.c,106 :: 		LED = ~LED;
0x0052	0x7883      	BTG         LATA, 4 
;FIRMWARE_SYA_ver_1_3_0.c,107 :: 		Events();
0x0054	0xD879      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,108 :: 		counter = 0;
0x0056	0x6A1A      	CLRF        _counter 
0x0058	0x6A1B      	CLRF        _counter+1 
;FIRMWARE_SYA_ver_1_3_0.c,109 :: 		}
L_interrupt1:
;FIRMWARE_SYA_ver_1_3_0.c,110 :: 		}
L_interrupt0:
;FIRMWARE_SYA_ver_1_3_0.c,111 :: 		if((1 == IOCCF.B0) && (1 == IOCIE_bit)){
0x005A	0x010F      	MOVLB       15
0x005C	0xA11A      	BTFSS       IOCCF, 0, 1
0x005E	0xD00A      	BRA         L_interrupt4
0x0060	0x010E      	MOVLB       14
0x0062	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0064	0xD007      	BRA         L_interrupt4
L__interrupt108:
;FIRMWARE_SYA_ver_1_3_0.c,112 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0066	0x010F      	MOVLB       15
0x0068	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_1_3_0.c,113 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x006A	0x0E01      	MOVLW       1
0x006C	0x6E23      	MOVWF       _interruptC0 
0x006E	0x0E00      	MOVLW       0
0x0070	0x6E24      	MOVWF       _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,114 :: 		Events();
0x0072	0xD86A      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,130 :: 		}
L_interrupt4:
;FIRMWARE_SYA_ver_1_3_0.c,132 :: 		if((1 == IOCCF.B1) && (1 == IOCIE_bit)){
0x0074	0x010F      	MOVLB       15
0x0076	0xA31A      	BTFSS       IOCCF, 1, 1
0x0078	0xD00A      	BRA         L_interrupt7
0x007A	0x010E      	MOVLB       14
0x007C	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x007E	0xD007      	BRA         L_interrupt7
L__interrupt107:
;FIRMWARE_SYA_ver_1_3_0.c,133 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x0080	0x010F      	MOVLB       15
0x0082	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_1_3_0.c,134 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0084	0x0E01      	MOVLW       1
0x0086	0x6E25      	MOVWF       _interruptC1 
0x0088	0x0E00      	MOVLW       0
0x008A	0x6E26      	MOVWF       _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,135 :: 		Events();
0x008C	0xD85D      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,152 :: 		}
L_interrupt7:
;FIRMWARE_SYA_ver_1_3_0.c,154 :: 		if((1 == IOCCF.B2) && (1 == IOCIE_bit)){
0x008E	0x010F      	MOVLB       15
0x0090	0xA51A      	BTFSS       IOCCF, 2, 1
0x0092	0xD00A      	BRA         L_interrupt10
0x0094	0x010E      	MOVLB       14
0x0096	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0098	0xD007      	BRA         L_interrupt10
L__interrupt106:
;FIRMWARE_SYA_ver_1_3_0.c,155 :: 		IOCCF.B2 = 0; // Limpiamos la bandera de IOC
0x009A	0x010F      	MOVLB       15
0x009C	0x951A      	BCF         IOCCF, 2, 1
;FIRMWARE_SYA_ver_1_3_0.c,156 :: 		interruptC2 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x009E	0x0E01      	MOVLW       1
0x00A0	0x6E27      	MOVWF       _interruptC2 
0x00A2	0x0E00      	MOVLW       0
0x00A4	0x6E28      	MOVWF       _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,157 :: 		Events();
0x00A6	0xD850      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,169 :: 		}
L_interrupt10:
;FIRMWARE_SYA_ver_1_3_0.c,174 :: 		}
L_end_interrupt:
L__interrupt135:
0x00A8	0xF000C019  	MOVFF       25, R0
0x00AC	0xF001C018  	MOVFF       24, R1
0x00B0	0xF00BC017  	MOVFF       23, R11
0x00B4	0xF00CC016  	MOVFF       22, R12
0x00B8	0xF00DC015  	MOVFF       21, R13
0x00BC	0x0011      	RETFIE      1
; end of _interrupt
_InitInterrupt:
;FIRMWARE_SYA_ver_1_3_0.c,410 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_1_3_0.c,412 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x00BE	0x0E30      	MOVLW       48
0x00C0	0x010E      	MOVLB       14
0x00C2	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_1_3_0.c,413 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x00C4	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_1_3_0.c,414 :: 		T0CON0 = 0x90;
0x00C6	0x0E90      	MOVLW       144
0x00C8	0x6ED5      	MOVWF       T0CON0 
;FIRMWARE_SYA_ver_1_3_0.c,415 :: 		T0CON1 = 0x40;
0x00CA	0x0E40      	MOVLW       64
0x00CC	0x6ED6      	MOVWF       T0CON1 
;FIRMWARE_SYA_ver_1_3_0.c,416 :: 		TMR0H = 0x3C;
0x00CE	0x0E3C      	MOVLW       60
0x00D0	0x6ED4      	MOVWF       TMR0H 
;FIRMWARE_SYA_ver_1_3_0.c,417 :: 		TMR0L = 0xB0;
0x00D2	0x0EB0      	MOVLW       176
0x00D4	0x6ED3      	MOVWF       TMR0L 
;FIRMWARE_SYA_ver_1_3_0.c,418 :: 		IOCCN = 0x07;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x00D6	0x0E07      	MOVLW       7
0x00D8	0x010F      	MOVLB       15
0x00DA	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_1_3_0.c,419 :: 		IOCCP = 0x07;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x00DC	0x0E07      	MOVLW       7
0x00DE	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_1_3_0.c,420 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x00E0	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_1_3_0.c,421 :: 		PIR0.TMR0IF = 0;
0x00E2	0x010E      	MOVLB       14
0x00E4	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_3_0.c,422 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x00E6	0x0EC0      	MOVLW       192
0x00E8	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_1_3_0.c,424 :: 		}
L_end_InitInterrupt:
0x00EA	0x0012      	RETURN      0
; end of _InitInterrupt
_InitMCU:
;FIRMWARE_SYA_ver_1_3_0.c,430 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_1_3_0.c,432 :: 		ADCON0 = 0x08; // Desactivamos ADC
0x00EC	0x0E08      	MOVLW       8
0x00EE	0x6E60      	MOVWF       ADCON0 
;FIRMWARE_SYA_ver_1_3_0.c,433 :: 		ANSELC = 0x00;    // Ponemos en modo digital al puerto C
0x00F0	0x010F      	MOVLB       15
0x00F2	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_1_3_0.c,434 :: 		ANSELE = 0x00;    //                ''                 E
0x00F4	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_1_3_0.c,435 :: 		ANSELA = 0x00;    //                ''                 A
0x00F6	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_1_3_0.c,436 :: 		ANSELD = 0x00;
0x00F8	0x6B26      	CLRF        ANSELD, 1
;FIRMWARE_SYA_ver_1_3_0.c,438 :: 		TRISC = 0x0F;  // Ponemos en modo de entrada a C0, C1, c2 Y c3, los demas como salida
0x00FA	0x0E0F      	MOVLW       15
0x00FC	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_1_3_0.c,439 :: 		TRISD = 0x07;  // Ponemos en modo de entrada a D0 y D1
0x00FE	0x0E07      	MOVLW       7
0x0100	0x6E8B      	MOVWF       TRISD 
;FIRMWARE_SYA_ver_1_3_0.c,440 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x0102	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_1_3_0.c,441 :: 		TRISA = 0x80;  //                ''                A
0x0104	0x0E80      	MOVLW       128
0x0106	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_1_3_0.c,443 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x0108	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_1_3_0.c,444 :: 		PORTD = 0x00;
0x010A	0x6A90      	CLRF        PORTD 
;FIRMWARE_SYA_ver_1_3_0.c,445 :: 		PORTE = 0x00;  //                ''             E
0x010C	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_1_3_0.c,446 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x010E	0x0E10      	MOVLW       16
0x0110	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_1_3_0.c,448 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x0112	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_1_3_0.c,449 :: 		LATD = 0x00;
0x0114	0x6A86      	CLRF        LATD 
;FIRMWARE_SYA_ver_1_3_0.c,450 :: 		LATE = 0x00;   //                ''                      E
0x0116	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_1_3_0.c,451 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x0118	0x0E10      	MOVLW       16
0x011A	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_1_3_0.c,455 :: 		WPUD = 0x07;   // Activamos el pull-up interno de C0 y C1
0x011C	0x0E07      	MOVLW       7
0x011E	0x6F25      	MOVWF       WPUD, 1
;FIRMWARE_SYA_ver_1_3_0.c,456 :: 		INLVLD = 0x07; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x0120	0x0E07      	MOVLW       7
0x0122	0x6F22      	MOVWF       INLVLD, 1
;FIRMWARE_SYA_ver_1_3_0.c,457 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x0124	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,458 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x0126	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,459 :: 		GT3 = 1;
0x0128	0x881C      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,460 :: 		Delay_ms(200);
0x012A	0x0E06      	MOVLW       6
0x012C	0x6E0B      	MOVWF       R11, 0
0x012E	0x0E13      	MOVLW       19
0x0130	0x6E0C      	MOVWF       R12, 0
0x0132	0x0EAD      	MOVLW       173
0x0134	0x6E0D      	MOVWF       R13, 0
L_InitMCU105:
0x0136	0x2E0D      	DECFSZ      R13, 1, 0
0x0138	0xD7FE      	BRA         L_InitMCU105
0x013A	0x2E0C      	DECFSZ      R12, 1, 0
0x013C	0xD7FC      	BRA         L_InitMCU105
0x013E	0x2E0B      	DECFSZ      R11, 1, 0
0x0140	0xD7FA      	BRA         L_InitMCU105
0x0142	0x0000      	NOP
0x0144	0x0000      	NOP
;FIRMWARE_SYA_ver_1_3_0.c,462 :: 		}
L_end_InitMCU:
0x0146	0x0012      	RETURN      0
; end of _InitMCU
_Events:
;FIRMWARE_SYA_ver_1_3_0.c,351 :: 		void Events(){
;FIRMWARE_SYA_ver_1_3_0.c,352 :: 		Delay_ms(100);
0x0148	0x0E03      	MOVLW       3
0x014A	0x6E0B      	MOVWF       R11, 0
0x014C	0x0E8A      	MOVLW       138
0x014E	0x6E0C      	MOVWF       R12, 0
0x0150	0x0E55      	MOVLW       85
0x0152	0x6E0D      	MOVWF       R13, 0
L_Events98:
0x0154	0x2E0D      	DECFSZ      R13, 1, 0
0x0156	0xD7FE      	BRA         L_Events98
0x0158	0x2E0C      	DECFSZ      R12, 1, 0
0x015A	0xD7FC      	BRA         L_Events98
0x015C	0x2E0B      	DECFSZ      R11, 1, 0
0x015E	0xD7FA      	BRA         L_Events98
0x0160	0x0000      	NOP
0x0162	0x0000      	NOP
;FIRMWARE_SYA_ver_1_3_0.c,354 :: 		if(1 == SWITCH1){
0x0164	0xA08F      	BTFSS       PORTC, 0 
0x0166	0xD005      	BRA         L_Events99
;FIRMWARE_SYA_ver_1_3_0.c,356 :: 		sn_PosEdge_1 = 0;
0x0168	0x961C      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,357 :: 		sn_NegEdge_1 = 1;
0x016A	0x821C      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,358 :: 		interruptC0 = 0; // Limpiamos la bandera de interrupcion en C0
0x016C	0x6A23      	CLRF        _interruptC0 
0x016E	0x6A24      	CLRF        _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,359 :: 		}
0x0170	0xD004      	BRA         L_Events100
L_Events99:
;FIRMWARE_SYA_ver_1_3_0.c,363 :: 		sn_PosEdge_1 = 1;
0x0172	0x861C      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,364 :: 		sn_NegEdge_1 = 0;
0x0174	0x921C      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,365 :: 		interruptC0 = 0; // Limpiamos la bandera de interrupcion en C0
0x0176	0x6A23      	CLRF        _interruptC0 
0x0178	0x6A24      	CLRF        _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,366 :: 		}
L_Events100:
;FIRMWARE_SYA_ver_1_3_0.c,368 :: 		if(1 == SWITCH2){
0x017A	0xA28F      	BTFSS       PORTC, 1 
0x017C	0xD005      	BRA         L_Events101
;FIRMWARE_SYA_ver_1_3_0.c,370 :: 		sn_PosEdge_2 = 0;
0x017E	0x9E1C      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,371 :: 		sn_NegEdge_2 = 1;
0x0180	0x8029      	BSF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,372 :: 		interruptC1 = 0; // Limpiamos la bandera de interrupcion en C1
0x0182	0x6A25      	CLRF        _interruptC1 
0x0184	0x6A26      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,373 :: 		}
0x0186	0xD006      	BRA         L_Events102
L_Events101:
;FIRMWARE_SYA_ver_1_3_0.c,377 :: 		sn_PosEdge_2 = 1;
0x0188	0x8E1C      	BSF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,378 :: 		sn_NegEdge_2 = 0;
0x018A	0x9029      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,379 :: 		next_state = s4;
0x018C	0x0E04      	MOVLW       4
0x018E	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,380 :: 		interruptC1 = 0; // Limpiamos la bandera de interrupcion en C1
0x0190	0x6A25      	CLRF        _interruptC1 
0x0192	0x6A26      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,381 :: 		}
L_Events102:
;FIRMWARE_SYA_ver_1_3_0.c,382 :: 		if(1 == SWITCH3){
0x0194	0xA48F      	BTFSS       PORTC, 2 
0x0196	0xD005      	BRA         L_Events103
;FIRMWARE_SYA_ver_1_3_0.c,383 :: 		sn_PosEdge_3 = 0;
0x0198	0x9C1C      	BCF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,384 :: 		sn_NegEdge_3 = 1;
0x019A	0x8A1C      	BSF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,385 :: 		interruptC2 = 0;
0x019C	0x6A27      	CLRF        _interruptC2 
0x019E	0x6A28      	CLRF        _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,386 :: 		}
0x01A0	0xD006      	BRA         L_Events104
L_Events103:
;FIRMWARE_SYA_ver_1_3_0.c,388 :: 		sn_PosEdge_3 = 1;
0x01A2	0x8C1C      	BSF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,389 :: 		sn_NegEdge_3 = 0;
0x01A4	0x9A1C      	BCF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,390 :: 		next_state = s5;
0x01A6	0x0E05      	MOVLW       5
0x01A8	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,391 :: 		interruptC2 = 0;
0x01AA	0x6A27      	CLRF        _interruptC2 
0x01AC	0x6A28      	CLRF        _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,392 :: 		}
L_Events104:
;FIRMWARE_SYA_ver_1_3_0.c,393 :: 		return;
;FIRMWARE_SYA_ver_1_3_0.c,395 :: 		}
L_end_Events:
0x01AE	0x0012      	RETURN      0
; end of _Events
_FSM:
;FIRMWARE_SYA_ver_1_3_0.c,200 :: 		void FSM(){
;FIRMWARE_SYA_ver_1_3_0.c,201 :: 		clock0 = 1;
0x01B0	0x0E01      	MOVLW       1
0x01B2	0x6E1E      	MOVWF       _clock0 
0x01B4	0x0E00      	MOVLW       0
0x01B6	0x6E1F      	MOVWF       _clock0+1 
;FIRMWARE_SYA_ver_1_3_0.c,202 :: 		switch(current_state){
0x01B8	0xD10D      	BRA         L_FSM13
;FIRMWARE_SYA_ver_1_3_0.c,203 :: 		case s0:
L_FSM15:
;FIRMWARE_SYA_ver_1_3_0.c,204 :: 		M1 = 0;
0x01BA	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,205 :: 		M2 = 0;
0x01BC	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,206 :: 		M3 = 0;
0x01BE	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,207 :: 		sn_GoTo = 0;
0x01C0	0x6A20      	CLRF        _sn_GoTo 
0x01C2	0x6A21      	CLRF        _sn_GoTo+1 
;FIRMWARE_SYA_ver_1_3_0.c,208 :: 		if((1 == sn_PosEdge_1) && (1 == clock0)){
0x01C4	0xA61C      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x01C6	0xD009      	BRA         L_FSM18
0x01C8	0x0E00      	MOVLW       0
0x01CA	0x181F      	XORWF       _clock0+1, 0 
0x01CC	0xE102      	BNZ         L__FSM139
0x01CE	0x501E      	MOVF        _clock0, 0 
0x01D0	0x0A01      	XORLW       1
L__FSM139:
0x01D2	0xE103      	BNZ         L_FSM18
L__FSM127:
;FIRMWARE_SYA_ver_1_3_0.c,209 :: 		next_state = s7;
0x01D4	0x0E07      	MOVLW       7
0x01D6	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,210 :: 		}
0x01D8	0xD000      	BRA         L_FSM19
L_FSM18:
;FIRMWARE_SYA_ver_1_3_0.c,212 :: 		}
L_FSM19:
;FIRMWARE_SYA_ver_1_3_0.c,213 :: 		break;
0x01DA	0xD11B      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_3_0.c,214 :: 		case s1:
L_FSM20:
;FIRMWARE_SYA_ver_1_3_0.c,215 :: 		M1 = 1;
0x01DC	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,216 :: 		M2 = 0;
0x01DE	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,217 :: 		M3 = 0;
0x01E0	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,218 :: 		GT1 = 1;
0x01E2	0x801C      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,219 :: 		GT2 = 0;
0x01E4	0x941C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,220 :: 		GT3 = 0;
0x01E6	0x981C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,222 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x01E8	0xA21C      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x01EA	0xD008      	BRA         L_FSM23
0x01EC	0x0E00      	MOVLW       0
0x01EE	0x181F      	XORWF       _clock0+1, 0 
0x01F0	0xE102      	BNZ         L__FSM140
0x01F2	0x501E      	MOVF        _clock0, 0 
0x01F4	0x0A01      	XORLW       1
L__FSM140:
0x01F6	0xE102      	BNZ         L_FSM23
L__FSM126:
;FIRMWARE_SYA_ver_1_3_0.c,224 :: 		next_state = s0;
0x01F8	0x6A1D      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,225 :: 		}
0x01FA	0xD00B      	BRA         L_FSM24
L_FSM23:
;FIRMWARE_SYA_ver_1_3_0.c,226 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x01FC	0xAE1C      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x01FE	0xD009      	BRA         L_FSM27
0x0200	0x0E00      	MOVLW       0
0x0202	0x181F      	XORWF       _clock0+1, 0 
0x0204	0xE102      	BNZ         L__FSM141
0x0206	0x501E      	MOVF        _clock0, 0 
0x0208	0x0A01      	XORLW       1
L__FSM141:
0x020A	0xE103      	BNZ         L_FSM27
L__FSM125:
;FIRMWARE_SYA_ver_1_3_0.c,227 :: 		next_state = s4;
0x020C	0x0E04      	MOVLW       4
0x020E	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,228 :: 		}
0x0210	0xD000      	BRA         L_FSM28
L_FSM27:
;FIRMWARE_SYA_ver_1_3_0.c,230 :: 		}
L_FSM28:
L_FSM24:
;FIRMWARE_SYA_ver_1_3_0.c,231 :: 		break;
0x0212	0xD0FF      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_3_0.c,232 :: 		case s2:
L_FSM29:
;FIRMWARE_SYA_ver_1_3_0.c,233 :: 		M1 = 0;
0x0214	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,234 :: 		M2 = 1;
0x0216	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,235 :: 		M3 = 0;
0x0218	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,236 :: 		GT1 = 0;
0x021A	0x901C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,237 :: 		GT2 = 1;
0x021C	0x841C      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,238 :: 		GT3 = 0;
0x021E	0x981C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,239 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x0220	0xA21C      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0222	0xD008      	BRA         L_FSM32
0x0224	0x0E00      	MOVLW       0
0x0226	0x181F      	XORWF       _clock0+1, 0 
0x0228	0xE102      	BNZ         L__FSM142
0x022A	0x501E      	MOVF        _clock0, 0 
0x022C	0x0A01      	XORLW       1
L__FSM142:
0x022E	0xE102      	BNZ         L_FSM32
L__FSM124:
;FIRMWARE_SYA_ver_1_3_0.c,240 :: 		next_state = s0;
0x0230	0x6A1D      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,241 :: 		}
0x0232	0xD00B      	BRA         L_FSM33
L_FSM32:
;FIRMWARE_SYA_ver_1_3_0.c,242 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x0234	0xAE1C      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0236	0xD009      	BRA         L_FSM36
0x0238	0x0E00      	MOVLW       0
0x023A	0x181F      	XORWF       _clock0+1, 0 
0x023C	0xE102      	BNZ         L__FSM143
0x023E	0x501E      	MOVF        _clock0, 0 
0x0240	0x0A01      	XORLW       1
L__FSM143:
0x0242	0xE103      	BNZ         L_FSM36
L__FSM123:
;FIRMWARE_SYA_ver_1_3_0.c,243 :: 		next_state = s4;
0x0244	0x0E04      	MOVLW       4
0x0246	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,244 :: 		}
0x0248	0xD000      	BRA         L_FSM37
L_FSM36:
;FIRMWARE_SYA_ver_1_3_0.c,246 :: 		}
L_FSM37:
L_FSM33:
;FIRMWARE_SYA_ver_1_3_0.c,247 :: 		break;
0x024A	0xD0E3      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_3_0.c,248 :: 		case s3:
L_FSM38:
;FIRMWARE_SYA_ver_1_3_0.c,249 :: 		M1 = 0;
0x024C	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,250 :: 		M2 = 0;
0x024E	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,251 :: 		M3 = 1;
0x0250	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,252 :: 		GT1 = 0;
0x0252	0x901C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,253 :: 		GT2 = 0;
0x0254	0x941C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,254 :: 		GT3 = 1;
0x0256	0x881C      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,255 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x0258	0xA21C      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x025A	0xD008      	BRA         L_FSM41
0x025C	0x0E00      	MOVLW       0
0x025E	0x181F      	XORWF       _clock0+1, 0 
0x0260	0xE102      	BNZ         L__FSM144
0x0262	0x501E      	MOVF        _clock0, 0 
0x0264	0x0A01      	XORLW       1
L__FSM144:
0x0266	0xE102      	BNZ         L_FSM41
L__FSM122:
;FIRMWARE_SYA_ver_1_3_0.c,256 :: 		next_state = s0;
0x0268	0x6A1D      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,257 :: 		}
0x026A	0xD00B      	BRA         L_FSM42
L_FSM41:
;FIRMWARE_SYA_ver_1_3_0.c,258 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x026C	0xAE1C      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x026E	0xD009      	BRA         L_FSM45
0x0270	0x0E00      	MOVLW       0
0x0272	0x181F      	XORWF       _clock0+1, 0 
0x0274	0xE102      	BNZ         L__FSM145
0x0276	0x501E      	MOVF        _clock0, 0 
0x0278	0x0A01      	XORLW       1
L__FSM145:
0x027A	0xE103      	BNZ         L_FSM45
L__FSM121:
;FIRMWARE_SYA_ver_1_3_0.c,259 :: 		next_state = s4;
0x027C	0x0E04      	MOVLW       4
0x027E	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,260 :: 		}
0x0280	0xD000      	BRA         L_FSM46
L_FSM45:
;FIRMWARE_SYA_ver_1_3_0.c,262 :: 		}
L_FSM46:
L_FSM42:
;FIRMWARE_SYA_ver_1_3_0.c,263 :: 		break;
0x0282	0xD0C7      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_3_0.c,264 :: 		case s4:
L_FSM47:
;FIRMWARE_SYA_ver_1_3_0.c,265 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x0284	0xA01C      	BTFSS       _GT1, BitPos(_GT1+0) 
0x0286	0xD008      	BRA         L_FSM50
0x0288	0xB41C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x028A	0xD006      	BRA         L_FSM50
0x028C	0xB81C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x028E	0xD004      	BRA         L_FSM50
L__FSM120:
;FIRMWARE_SYA_ver_1_3_0.c,266 :: 		M1 = 1;
0x0290	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,267 :: 		M2 = 1;
0x0292	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,268 :: 		M3 = 0;
0x0294	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,269 :: 		}
0x0296	0xD013      	BRA         L_FSM51
L_FSM50:
;FIRMWARE_SYA_ver_1_3_0.c,270 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x0298	0xA41C      	BTFSS       _GT2, BitPos(_GT2+0) 
0x029A	0xD008      	BRA         L_FSM54
0x029C	0xB01C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x029E	0xD006      	BRA         L_FSM54
0x02A0	0xB81C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x02A2	0xD004      	BRA         L_FSM54
L__FSM119:
;FIRMWARE_SYA_ver_1_3_0.c,271 :: 		M1 = 0;
0x02A4	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,272 :: 		M2 = 1;
0x02A6	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,273 :: 		M3 = 1;
0x02A8	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,274 :: 		}
0x02AA	0xD009      	BRA         L_FSM55
L_FSM54:
;FIRMWARE_SYA_ver_1_3_0.c,275 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x02AC	0xA81C      	BTFSS       _GT3, BitPos(_GT3+0) 
0x02AE	0xD007      	BRA         L_FSM58
0x02B0	0xB01C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x02B2	0xD005      	BRA         L_FSM58
0x02B4	0xB41C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x02B6	0xD003      	BRA         L_FSM58
L__FSM118:
;FIRMWARE_SYA_ver_1_3_0.c,276 :: 		M1 = 1;
0x02B8	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,277 :: 		M2 = 0;
0x02BA	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,278 :: 		M3 = 1;
0x02BC	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,279 :: 		}
L_FSM58:
L_FSM55:
L_FSM51:
;FIRMWARE_SYA_ver_1_3_0.c,280 :: 		if((1 == sn_NegEdge_2) && (1 == clock0)){
0x02BE	0xA029      	BTFSS       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x02C0	0xD009      	BRA         L_FSM61
0x02C2	0x0E00      	MOVLW       0
0x02C4	0x181F      	XORWF       _clock0+1, 0 
0x02C6	0xE102      	BNZ         L__FSM146
0x02C8	0x501E      	MOVF        _clock0, 0 
0x02CA	0x0A01      	XORLW       1
L__FSM146:
0x02CC	0xE103      	BNZ         L_FSM61
L__FSM117:
;FIRMWARE_SYA_ver_1_3_0.c,281 :: 		next_state = s7;
0x02CE	0x0E07      	MOVLW       7
0x02D0	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,282 :: 		}
0x02D2	0xD00B      	BRA         L_FSM62
L_FSM61:
;FIRMWARE_SYA_ver_1_3_0.c,283 :: 		else if((1 == sn_PosEdge_3) && (1 == clock0)){
0x02D4	0xAC1C      	BTFSS       _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
0x02D6	0xD009      	BRA         L_FSM65
0x02D8	0x0E00      	MOVLW       0
0x02DA	0x181F      	XORWF       _clock0+1, 0 
0x02DC	0xE102      	BNZ         L__FSM147
0x02DE	0x501E      	MOVF        _clock0, 0 
0x02E0	0x0A01      	XORLW       1
L__FSM147:
0x02E2	0xE103      	BNZ         L_FSM65
L__FSM116:
;FIRMWARE_SYA_ver_1_3_0.c,284 :: 		next_state = s5;
0x02E4	0x0E05      	MOVLW       5
0x02E6	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,285 :: 		}
0x02E8	0xD000      	BRA         L_FSM66
L_FSM65:
;FIRMWARE_SYA_ver_1_3_0.c,287 :: 		}
L_FSM66:
L_FSM62:
;FIRMWARE_SYA_ver_1_3_0.c,288 :: 		break;
0x02EA	0xD093      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_3_0.c,289 :: 		case s5:
L_FSM67:
;FIRMWARE_SYA_ver_1_3_0.c,290 :: 		M1 = 1;
0x02EC	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,291 :: 		M2 = 1;
0x02EE	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,292 :: 		M3 = 1;
0x02F0	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,293 :: 		if((1 == sn_NegEdge_3) && (1 == clock0)){
0x02F2	0xAA1C      	BTFSS       _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
0x02F4	0xD00D      	BRA         L_FSM70
0x02F6	0x0E00      	MOVLW       0
0x02F8	0x181F      	XORWF       _clock0+1, 0 
0x02FA	0xE102      	BNZ         L__FSM148
0x02FC	0x501E      	MOVF        _clock0, 0 
0x02FE	0x0A01      	XORLW       1
L__FSM148:
0x0300	0xE107      	BNZ         L_FSM70
L__FSM115:
;FIRMWARE_SYA_ver_1_3_0.c,294 :: 		sn_GoTo = 1;
0x0302	0x0E01      	MOVLW       1
0x0304	0x6E20      	MOVWF       _sn_GoTo 
0x0306	0x0E00      	MOVLW       0
0x0308	0x6E21      	MOVWF       _sn_GoTo+1 
;FIRMWARE_SYA_ver_1_3_0.c,295 :: 		next_state = s6;
0x030A	0x0E06      	MOVLW       6
0x030C	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,296 :: 		}
0x030E	0xD000      	BRA         L_FSM71
L_FSM70:
;FIRMWARE_SYA_ver_1_3_0.c,298 :: 		}
L_FSM71:
;FIRMWARE_SYA_ver_1_3_0.c,299 :: 		break;
0x0310	0xD080      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_3_0.c,300 :: 		case s6:
L_FSM72:
;FIRMWARE_SYA_ver_1_3_0.c,301 :: 		if((1 == sn_GoTo) && (1 == GT1) && (1 == clock0)){
0x0312	0x0E00      	MOVLW       0
0x0314	0x1821      	XORWF       _sn_GoTo+1, 0 
0x0316	0xE102      	BNZ         L__FSM149
0x0318	0x5020      	MOVF        _sn_GoTo, 0 
0x031A	0x0A01      	XORLW       1
L__FSM149:
0x031C	0xE10E      	BNZ         L_FSM75
0x031E	0xA01C      	BTFSS       _GT1, BitPos(_GT1+0) 
0x0320	0xD00C      	BRA         L_FSM75
0x0322	0x0E00      	MOVLW       0
0x0324	0x181F      	XORWF       _clock0+1, 0 
0x0326	0xE102      	BNZ         L__FSM150
0x0328	0x501E      	MOVF        _clock0, 0 
0x032A	0x0A01      	XORLW       1
L__FSM150:
0x032C	0xE106      	BNZ         L_FSM75
L__FSM114:
;FIRMWARE_SYA_ver_1_3_0.c,302 :: 		GT2 = 1;
0x032E	0x841C      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,303 :: 		GT3 = 0;
0x0330	0x981C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,304 :: 		GT1 = 0;
0x0332	0x901C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,305 :: 		next_state = s4;
0x0334	0x0E04      	MOVLW       4
0x0336	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,306 :: 		}
0x0338	0xD028      	BRA         L_FSM76
L_FSM75:
;FIRMWARE_SYA_ver_1_3_0.c,307 :: 		else if((1 == sn_GoTo) && (1 == GT2) && (1 == clock0)){
0x033A	0x0E00      	MOVLW       0
0x033C	0x1821      	XORWF       _sn_GoTo+1, 0 
0x033E	0xE102      	BNZ         L__FSM151
0x0340	0x5020      	MOVF        _sn_GoTo, 0 
0x0342	0x0A01      	XORLW       1
L__FSM151:
0x0344	0xE10E      	BNZ         L_FSM79
0x0346	0xA41C      	BTFSS       _GT2, BitPos(_GT2+0) 
0x0348	0xD00C      	BRA         L_FSM79
0x034A	0x0E00      	MOVLW       0
0x034C	0x181F      	XORWF       _clock0+1, 0 
0x034E	0xE102      	BNZ         L__FSM152
0x0350	0x501E      	MOVF        _clock0, 0 
0x0352	0x0A01      	XORLW       1
L__FSM152:
0x0354	0xE106      	BNZ         L_FSM79
L__FSM113:
;FIRMWARE_SYA_ver_1_3_0.c,308 :: 		GT2 = 0;
0x0356	0x941C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,309 :: 		GT1 = 0;
0x0358	0x901C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,310 :: 		GT3 = 1;
0x035A	0x881C      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,311 :: 		next_state = s4;
0x035C	0x0E04      	MOVLW       4
0x035E	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,312 :: 		}
0x0360	0xD014      	BRA         L_FSM80
L_FSM79:
;FIRMWARE_SYA_ver_1_3_0.c,313 :: 		else if((1 == sn_GoTo) && (1 == GT3) && (1 == clock0)){
0x0362	0x0E00      	MOVLW       0
0x0364	0x1821      	XORWF       _sn_GoTo+1, 0 
0x0366	0xE102      	BNZ         L__FSM153
0x0368	0x5020      	MOVF        _sn_GoTo, 0 
0x036A	0x0A01      	XORLW       1
L__FSM153:
0x036C	0xE10E      	BNZ         L_FSM83
0x036E	0xA81C      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0370	0xD00C      	BRA         L_FSM83
0x0372	0x0E00      	MOVLW       0
0x0374	0x181F      	XORWF       _clock0+1, 0 
0x0376	0xE102      	BNZ         L__FSM154
0x0378	0x501E      	MOVF        _clock0, 0 
0x037A	0x0A01      	XORLW       1
L__FSM154:
0x037C	0xE106      	BNZ         L_FSM83
L__FSM112:
;FIRMWARE_SYA_ver_1_3_0.c,314 :: 		GT1 = 1;
0x037E	0x801C      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,315 :: 		GT2 = 0;
0x0380	0x941C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,316 :: 		GT3 = 0;
0x0382	0x981C      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,317 :: 		next_state = s4;
0x0384	0x0E04      	MOVLW       4
0x0386	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,318 :: 		}
0x0388	0xD000      	BRA         L_FSM84
L_FSM83:
;FIRMWARE_SYA_ver_1_3_0.c,320 :: 		}
L_FSM84:
L_FSM80:
L_FSM76:
;FIRMWARE_SYA_ver_1_3_0.c,321 :: 		break;
0x038A	0xD043      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_3_0.c,322 :: 		case s7:
L_FSM85:
;FIRMWARE_SYA_ver_1_3_0.c,323 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x038C	0xA01C      	BTFSS       _GT1, BitPos(_GT1+0) 
0x038E	0xD007      	BRA         L_FSM88
0x0390	0xB41C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0392	0xD005      	BRA         L_FSM88
0x0394	0xB81C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x0396	0xD003      	BRA         L_FSM88
L__FSM111:
;FIRMWARE_SYA_ver_1_3_0.c,324 :: 		next_state = s2;
0x0398	0x0E02      	MOVLW       2
0x039A	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,325 :: 		}
0x039C	0xD011      	BRA         L_FSM89
L_FSM88:
;FIRMWARE_SYA_ver_1_3_0.c,326 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x039E	0xA41C      	BTFSS       _GT2, BitPos(_GT2+0) 
0x03A0	0xD007      	BRA         L_FSM92
0x03A2	0xB01C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x03A4	0xD005      	BRA         L_FSM92
0x03A6	0xB81C      	BTFSC       _GT3, BitPos(_GT3+0) 
0x03A8	0xD003      	BRA         L_FSM92
L__FSM110:
;FIRMWARE_SYA_ver_1_3_0.c,327 :: 		next_state = s3;
0x03AA	0x0E03      	MOVLW       3
0x03AC	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,328 :: 		}
0x03AE	0xD008      	BRA         L_FSM93
L_FSM92:
;FIRMWARE_SYA_ver_1_3_0.c,329 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x03B0	0xA81C      	BTFSS       _GT3, BitPos(_GT3+0) 
0x03B2	0xD006      	BRA         L_FSM96
0x03B4	0xB01C      	BTFSC       _GT1, BitPos(_GT1+0) 
0x03B6	0xD004      	BRA         L_FSM96
0x03B8	0xB41C      	BTFSC       _GT2, BitPos(_GT2+0) 
0x03BA	0xD002      	BRA         L_FSM96
L__FSM109:
;FIRMWARE_SYA_ver_1_3_0.c,330 :: 		next_state = s1;
0x03BC	0x0E01      	MOVLW       1
0x03BE	0x6E1D      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,331 :: 		}
L_FSM96:
L_FSM93:
L_FSM89:
;FIRMWARE_SYA_ver_1_3_0.c,332 :: 		break;
0x03C0	0xD028      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_3_0.c,333 :: 		default:
L_FSM97:
;FIRMWARE_SYA_ver_1_3_0.c,334 :: 		GT1 = 0;
0x03C2	0x901C      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,335 :: 		GT2 = 0;
0x03C4	0x941C      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,336 :: 		GT3 = 1;
0x03C6	0x881C      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,337 :: 		M1 = 0;
0x03C8	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,338 :: 		M2 = 0;
0x03CA	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,339 :: 		M3 = 0;
0x03CC	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,340 :: 		current_state = s0;
0x03CE	0x6A22      	CLRF        _current_state 
;FIRMWARE_SYA_ver_1_3_0.c,341 :: 		next_state = s0;
0x03D0	0x6A1D      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,342 :: 		break;
0x03D2	0xD01F      	BRA         L_FSM14
;FIRMWARE_SYA_ver_1_3_0.c,343 :: 		}
L_FSM13:
0x03D4	0x5022      	MOVF        _current_state, 0 
0x03D6	0x0A00      	XORLW       0
0x03D8	0xB4D8      	BTFSC       STATUS, 2 
0x03DA	0xD6EF      	BRA         L_FSM15
0x03DC	0x5022      	MOVF        _current_state, 0 
0x03DE	0x0A01      	XORLW       1
0x03E0	0xB4D8      	BTFSC       STATUS, 2 
0x03E2	0xD6FC      	BRA         L_FSM20
0x03E4	0x5022      	MOVF        _current_state, 0 
0x03E6	0x0A02      	XORLW       2
0x03E8	0xB4D8      	BTFSC       STATUS, 2 
0x03EA	0xD714      	BRA         L_FSM29
0x03EC	0x5022      	MOVF        _current_state, 0 
0x03EE	0x0A03      	XORLW       3
0x03F0	0xB4D8      	BTFSC       STATUS, 2 
0x03F2	0xD72C      	BRA         L_FSM38
0x03F4	0x5022      	MOVF        _current_state, 0 
0x03F6	0x0A04      	XORLW       4
0x03F8	0xB4D8      	BTFSC       STATUS, 2 
0x03FA	0xD744      	BRA         L_FSM47
0x03FC	0x5022      	MOVF        _current_state, 0 
0x03FE	0x0A05      	XORLW       5
0x0400	0xB4D8      	BTFSC       STATUS, 2 
0x0402	0xD774      	BRA         L_FSM67
0x0404	0x5022      	MOVF        _current_state, 0 
0x0406	0x0A06      	XORLW       6
0x0408	0xE084      	BZ          L_FSM72
0x040A	0x5022      	MOVF        _current_state, 0 
0x040C	0x0A07      	XORLW       7
0x040E	0xE0BE      	BZ          L_FSM85
0x0410	0xD7D8      	BRA         L_FSM97
L_FSM14:
;FIRMWARE_SYA_ver_1_3_0.c,345 :: 		}
L_end_FSM:
0x0412	0x0012      	RETURN      0
; end of _FSM
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x0414	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x0416	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x0418	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x041C	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x041E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x0420	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x0422	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x0424	0x0012      	RETURN      0
; end of ___CC2DW
_InitSystems:
;FIRMWARE_SYA_ver_1_3_0.c,401 :: 		void InitSystems(){
;FIRMWARE_SYA_ver_1_3_0.c,402 :: 		InitInterrupt();
0x0426	0xDE4B      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_1_3_0.c,403 :: 		InitMCU();
0x0428	0xDE61      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_1_3_0.c,404 :: 		}
L_end_InitSystems:
0x042A	0x0012      	RETURN      0
; end of _InitSystems
_main:
0x042C	0x6A1A      	CLRF        _counter 
0x042E	0x6A1B      	CLRF        27 
;FIRMWARE_SYA_ver_1_3_0.c,180 :: 		void main(){
;FIRMWARE_SYA_ver_1_3_0.c,182 :: 		InitSystems();
0x0430	0xDFFA      	RCALL       _InitSystems
;FIRMWARE_SYA_ver_1_3_0.c,188 :: 		while(1){
L_main11:
;FIRMWARE_SYA_ver_1_3_0.c,190 :: 		current_state = next_state; // Maybe move this with Events
0x0432	0xF022C01D  	MOVFF       _next_state, _current_state
;FIRMWARE_SYA_ver_1_3_0.c,191 :: 		FSM();
0x0436	0xDEBC      	RCALL       _FSM
;FIRMWARE_SYA_ver_1_3_0.c,192 :: 		}
0x0438	0xD7FC      	BRA         L_main11
;FIRMWARE_SYA_ver_1_3_0.c,194 :: 		}
L_end_main:
0x043A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [182]    _interrupt
0x00BE      [46]    _InitInterrupt
0x00EC      [92]    _InitMCU
0x0148     [104]    _Events
0x01B0     [612]    _FSM
0x0414      [18]    ___CC2DW
0x0426       [6]    _InitSystems
0x042C      [16]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001A       [2]    _counter
0x001C       [0]    _sn_NegEdge_1
0x001C       [0]    _sn_NegEdge_3
0x001C       [0]    _GT1
0x001C       [0]    _sn_PosEdge_1
0x001C       [0]    _sn_PosEdge_2
0x001C       [0]    _sn_PosEdge_3
0x001C       [0]    _GT2
0x001C       [0]    _GT3
0x001D       [1]    _next_state
0x001E       [2]    _clock0
0x0020       [2]    _sn_GoTo
0x0022       [1]    _current_state
0x0023       [2]    _interruptC0
0x0025       [2]    _interruptC1
0x0027       [2]    _interruptC2
0x0029       [0]    _sn_NegEdge_2
0x0EC2       [0]    IOCIE_bit
0x0EC2       [1]    PIE0
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F21       [1]    ANSELC
0x0F22       [1]    INLVLD
0x0F25       [1]    WPUD
0x0F26       [1]    ANSELD
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F60       [1]    ADCON0
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F86       [1]    LATD
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8B       [1]    TRISD
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F90       [1]    PORTD
0x0F91       [1]    PORTE
0x0FD3       [1]    TMR0L
0x0FD4       [1]    TMR0H
0x0FD5       [1]    T0CON0
0x0FD6       [1]    T0CON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
