;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/24/2024 11:02:46 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EFE9  	GOTO        978
_interrupt:
;FIRMWARE_SYA_ver_1_3_0.c,98 :: 		void interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;FIRMWARE_SYA_ver_1_3_0.c,111 :: 		if((1 == IOCCF.B0) && (1 == IOCIE_bit)){
0x000C	0x010F      	MOVLB       15
0x000E	0xA11A      	BTFSS       IOCCF, 0, 1
0x0010	0xD00A      	BRA         L_interrupt2
0x0012	0x010E      	MOVLB       14
0x0014	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0016	0xD007      	BRA         L_interrupt2
L__interrupt113:
;FIRMWARE_SYA_ver_1_3_0.c,112 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0018	0x010F      	MOVLB       15
0x001A	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_1_3_0.c,113 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x001C	0x0E01      	MOVLW       1
0x001E	0x6E1F      	MOVWF       _interruptC0 
0x0020	0x0E00      	MOVLW       0
0x0022	0x6E20      	MOVWF       _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,114 :: 		Events();
0x0024	0xD84C      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,130 :: 		}
L_interrupt2:
;FIRMWARE_SYA_ver_1_3_0.c,132 :: 		if((1 == IOCCF.B1) && (1 == IOCIE_bit)){
0x0026	0x010F      	MOVLB       15
0x0028	0xA31A      	BTFSS       IOCCF, 1, 1
0x002A	0xD00A      	BRA         L_interrupt5
0x002C	0x010E      	MOVLB       14
0x002E	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0030	0xD007      	BRA         L_interrupt5
L__interrupt112:
;FIRMWARE_SYA_ver_1_3_0.c,133 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x0032	0x010F      	MOVLB       15
0x0034	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_1_3_0.c,134 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0036	0x0E01      	MOVLW       1
0x0038	0x6E21      	MOVWF       _interruptC1 
0x003A	0x0E00      	MOVLW       0
0x003C	0x6E22      	MOVWF       _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,135 :: 		Events();
0x003E	0xD83F      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,152 :: 		}
L_interrupt5:
;FIRMWARE_SYA_ver_1_3_0.c,153 :: 		if((1 == IOCCF.B2) && (1 == IOCIE_bit)){
0x0040	0x010F      	MOVLB       15
0x0042	0xA51A      	BTFSS       IOCCF, 2, 1
0x0044	0xD00A      	BRA         L_interrupt8
0x0046	0x010E      	MOVLB       14
0x0048	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x004A	0xD007      	BRA         L_interrupt8
L__interrupt111:
;FIRMWARE_SYA_ver_1_3_0.c,154 :: 		IOCCF.B2 = 0; // Limpiamos la bandera de IOC
0x004C	0x010F      	MOVLB       15
0x004E	0x951A      	BCF         IOCCF, 2, 1
;FIRMWARE_SYA_ver_1_3_0.c,155 :: 		interruptC2 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0050	0x0E01      	MOVLW       1
0x0052	0x6E1D      	MOVWF       _interruptC2 
0x0054	0x0E00      	MOVLW       0
0x0056	0x6E1E      	MOVWF       _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,156 :: 		Events();
0x0058	0xD832      	RCALL       _Events
;FIRMWARE_SYA_ver_1_3_0.c,168 :: 		}
L_interrupt8:
;FIRMWARE_SYA_ver_1_3_0.c,173 :: 		}
L_end_interrupt:
L__interrupt141:
0x005A	0xF000C015  	MOVFF       21, R0
0x005E	0x0011      	RETFIE      1
; end of _interrupt
_InitInterrupt:
;FIRMWARE_SYA_ver_1_3_0.c,419 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_1_3_0.c,421 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x0060	0x0E30      	MOVLW       48
0x0062	0x010E      	MOVLB       14
0x0064	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_1_3_0.c,422 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x0066	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_1_3_0.c,427 :: 		IOCCN = 0x07;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x0068	0x0E07      	MOVLW       7
0x006A	0x010F      	MOVLB       15
0x006C	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_1_3_0.c,428 :: 		IOCCP = 0x07;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x006E	0x0E07      	MOVLW       7
0x0070	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_1_3_0.c,429 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x0072	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_1_3_0.c,430 :: 		PIR0.TMR0IF = 0;
0x0074	0x010E      	MOVLB       14
0x0076	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_3_0.c,431 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x0078	0x0EC0      	MOVLW       192
0x007A	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_1_3_0.c,433 :: 		}
L_end_InitInterrupt:
0x007C	0x0012      	RETURN      0
; end of _InitInterrupt
_InitMCU:
;FIRMWARE_SYA_ver_1_3_0.c,439 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_1_3_0.c,441 :: 		ADCON0 = 0x08; // Desactivamos ADC
0x007E	0x0E08      	MOVLW       8
0x0080	0x6E60      	MOVWF       ADCON0 
;FIRMWARE_SYA_ver_1_3_0.c,442 :: 		ANSELC = 0x00;    // Ponemos en modo digital al puerto C
0x0082	0x010F      	MOVLB       15
0x0084	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_1_3_0.c,443 :: 		ANSELE = 0x00;    //                ''                 E
0x0086	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_1_3_0.c,444 :: 		ANSELA = 0x00;    //                ''                 A
0x0088	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_1_3_0.c,445 :: 		ANSELD = 0x00;
0x008A	0x6B26      	CLRF        ANSELD, 1
;FIRMWARE_SYA_ver_1_3_0.c,447 :: 		TRISC = 0x0F;  // Ponemos en modo de entrada a C0, C1, c2 Y c3, los demas como salida
0x008C	0x0E0F      	MOVLW       15
0x008E	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_1_3_0.c,448 :: 		TRISD = 0x07;  // Ponemos en modo de entrada a D0 y D1
0x0090	0x0E07      	MOVLW       7
0x0092	0x6E8B      	MOVWF       TRISD 
;FIRMWARE_SYA_ver_1_3_0.c,449 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x0094	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_1_3_0.c,450 :: 		TRISA = 0x80;  //                ''                A
0x0096	0x0E80      	MOVLW       128
0x0098	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_1_3_0.c,452 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x009A	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_1_3_0.c,453 :: 		PORTD = 0x00;
0x009C	0x6A90      	CLRF        PORTD 
;FIRMWARE_SYA_ver_1_3_0.c,454 :: 		PORTE = 0x00;  //                ''             E
0x009E	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_1_3_0.c,455 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x00A0	0x0E10      	MOVLW       16
0x00A2	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_1_3_0.c,457 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x00A4	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_1_3_0.c,458 :: 		LATD = 0x00;
0x00A6	0x6A86      	CLRF        LATD 
;FIRMWARE_SYA_ver_1_3_0.c,459 :: 		LATE = 0x00;   //                ''                      E
0x00A8	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_1_3_0.c,460 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x00AA	0x0E10      	MOVLW       16
0x00AC	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_1_3_0.c,464 :: 		WPUD = 0x07;   // Activamos el pull-up interno de C0 y C1
0x00AE	0x0E07      	MOVLW       7
0x00B0	0x6F25      	MOVWF       WPUD, 1
;FIRMWARE_SYA_ver_1_3_0.c,465 :: 		INLVLD = 0x07; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x00B2	0x0E07      	MOVLW       7
0x00B4	0x6F22      	MOVWF       INLVLD, 1
;FIRMWARE_SYA_ver_1_3_0.c,466 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x00B6	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,467 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x00B8	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,468 :: 		GT3 = 1;
0x00BA	0x8A16      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,470 :: 		}
L_end_InitMCU:
0x00BC	0x0012      	RETURN      0
; end of _InitMCU
_Events:
;FIRMWARE_SYA_ver_1_3_0.c,350 :: 		void Events(){
;FIRMWARE_SYA_ver_1_3_0.c,351 :: 		Delay_ms(100);
0x00BE	0x0E03      	MOVLW       3
0x00C0	0x6E0B      	MOVWF       R11, 0
0x00C2	0x0E8A      	MOVLW       138
0x00C4	0x6E0C      	MOVWF       R12, 0
0x00C6	0x0E55      	MOVLW       85
0x00C8	0x6E0D      	MOVWF       R13, 0
L_Events96:
0x00CA	0x2E0D      	DECFSZ      R13, 1, 0
0x00CC	0xD7FE      	BRA         L_Events96
0x00CE	0x2E0C      	DECFSZ      R12, 1, 0
0x00D0	0xD7FC      	BRA         L_Events96
0x00D2	0x2E0B      	DECFSZ      R11, 1, 0
0x00D4	0xD7FA      	BRA         L_Events96
0x00D6	0x0000      	NOP
0x00D8	0x0000      	NOP
;FIRMWARE_SYA_ver_1_3_0.c,353 :: 		if(1 == interruptC0){
0x00DA	0x0E00      	MOVLW       0
0x00DC	0x1820      	XORWF       _interruptC0+1, 0 
0x00DE	0xE102      	BNZ         L__Events161
0x00E0	0x501F      	MOVF        _interruptC0, 0 
0x00E2	0x0A01      	XORLW       1
L__Events161:
0x00E4	0xE10A      	BNZ         L_Events97
;FIRMWARE_SYA_ver_1_3_0.c,355 :: 		if(1 == SWITCH1){
0x00E6	0xA08F      	BTFSS       PORTC, 0 
0x00E8	0xD003      	BRA         L_Events98
;FIRMWARE_SYA_ver_1_3_0.c,357 :: 		sn_PosEdge_1 = 0;
0x00EA	0x9C16      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,358 :: 		sn_NegEdge_1 = 1;
0x00EC	0x8416      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,359 :: 		}
0x00EE	0xD002      	BRA         L_Events99
L_Events98:
;FIRMWARE_SYA_ver_1_3_0.c,363 :: 		sn_PosEdge_1 = 1;
0x00F0	0x8C16      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,364 :: 		sn_NegEdge_1 = 0;
0x00F2	0x9416      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,365 :: 		}
L_Events99:
;FIRMWARE_SYA_ver_1_3_0.c,366 :: 		interruptC0 = 0; // Limpiamos la bandera de interrupcion en C0
0x00F4	0x6A1F      	CLRF        _interruptC0 
0x00F6	0x6A20      	CLRF        _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,367 :: 		}
0x00F8	0xD02D      	BRA         L_Events100
L_Events97:
;FIRMWARE_SYA_ver_1_3_0.c,369 :: 		else if(1 == interruptC1){
0x00FA	0x0E00      	MOVLW       0
0x00FC	0x1822      	XORWF       _interruptC1+1, 0 
0x00FE	0xE102      	BNZ         L__Events162
0x0100	0x5021      	MOVF        _interruptC1, 0 
0x0102	0x0A01      	XORLW       1
L__Events162:
0x0104	0xE10C      	BNZ         L_Events101
;FIRMWARE_SYA_ver_1_3_0.c,371 :: 		if(1 == SWITCH2){
0x0106	0xA28F      	BTFSS       PORTC, 1 
0x0108	0xD003      	BRA         L_Events102
;FIRMWARE_SYA_ver_1_3_0.c,373 :: 		sn_PosEdge_2 = 0;
0x010A	0x9816      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,374 :: 		sn_NegEdge_2 = 1;
0x010C	0x8616      	BSF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,375 :: 		}
0x010E	0xD004      	BRA         L_Events103
L_Events102:
;FIRMWARE_SYA_ver_1_3_0.c,379 :: 		sn_PosEdge_2 = 1;
0x0110	0x8816      	BSF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,380 :: 		sn_NegEdge_2 = 0;
0x0112	0x9616      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,381 :: 		next_state = s4;
0x0114	0x0E04      	MOVLW       4
0x0116	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,382 :: 		}
L_Events103:
;FIRMWARE_SYA_ver_1_3_0.c,383 :: 		interruptC1 = 0; // Limpiamos la bandera de interrupcion en C1
0x0118	0x6A21      	CLRF        _interruptC1 
0x011A	0x6A22      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,384 :: 		}
0x011C	0xD01B      	BRA         L_Events104
L_Events101:
;FIRMWARE_SYA_ver_1_3_0.c,385 :: 		else if((1 == interruptC2) || (0 == SWITCH3)){
0x011E	0x0E00      	MOVLW       0
0x0120	0x181E      	XORWF       _interruptC2+1, 0 
0x0122	0xE102      	BNZ         L__Events163
0x0124	0x501D      	MOVF        _interruptC2, 0 
0x0126	0x0A01      	XORLW       1
L__Events163:
0x0128	0xE003      	BZ          L__Events133
0x012A	0xA48F      	BTFSS       PORTC, 2 
0x012C	0xD001      	BRA         L__Events133
0x012E	0xD00C      	BRA         L_Events107
L__Events133:
;FIRMWARE_SYA_ver_1_3_0.c,386 :: 		if(1 == SWITCH3){
0x0130	0xA48F      	BTFSS       PORTC, 2 
0x0132	0xD003      	BRA         L_Events108
;FIRMWARE_SYA_ver_1_3_0.c,387 :: 		sn_PosEdge_3 = 0;
0x0134	0x9023      	BCF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,388 :: 		sn_NegEdge_3 = 1;
0x0136	0x8E16      	BSF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,389 :: 		}
0x0138	0xD004      	BRA         L_Events109
L_Events108:
;FIRMWARE_SYA_ver_1_3_0.c,391 :: 		sn_PosEdge_3 = 1;
0x013A	0x8023      	BSF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,392 :: 		sn_NegEdge_3 = 0;
0x013C	0x9E16      	BCF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,393 :: 		next_state = s5;
0x013E	0x0E05      	MOVLW       5
0x0140	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,394 :: 		}
L_Events109:
;FIRMWARE_SYA_ver_1_3_0.c,395 :: 		interruptC2 = 0;
0x0142	0x6A1D      	CLRF        _interruptC2 
0x0144	0x6A1E      	CLRF        _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,396 :: 		}
0x0146	0xD006      	BRA         L_Events110
L_Events107:
;FIRMWARE_SYA_ver_1_3_0.c,398 :: 		interruptC0 = 0;
0x0148	0x6A1F      	CLRF        _interruptC0 
0x014A	0x6A20      	CLRF        _interruptC0+1 
;FIRMWARE_SYA_ver_1_3_0.c,399 :: 		interruptC1 = 0;
0x014C	0x6A21      	CLRF        _interruptC1 
0x014E	0x6A22      	CLRF        _interruptC1+1 
;FIRMWARE_SYA_ver_1_3_0.c,400 :: 		interruptC2 = 0;
0x0150	0x6A1D      	CLRF        _interruptC2 
0x0152	0x6A1E      	CLRF        _interruptC2+1 
;FIRMWARE_SYA_ver_1_3_0.c,401 :: 		}
L_Events110:
L_Events104:
L_Events100:
;FIRMWARE_SYA_ver_1_3_0.c,402 :: 		return;
;FIRMWARE_SYA_ver_1_3_0.c,404 :: 		}
L_end_Events:
0x0154	0x0012      	RETURN      0
; end of _Events
_FSM:
;FIRMWARE_SYA_ver_1_3_0.c,199 :: 		void FSM(){
;FIRMWARE_SYA_ver_1_3_0.c,200 :: 		clock0 = 1;
0x0156	0x0E01      	MOVLW       1
0x0158	0x6E18      	MOVWF       _clock0 
0x015A	0x0E00      	MOVLW       0
0x015C	0x6E19      	MOVWF       _clock0+1 
;FIRMWARE_SYA_ver_1_3_0.c,201 :: 		switch(current_state){
0x015E	0xD10D      	BRA         L_FSM11
;FIRMWARE_SYA_ver_1_3_0.c,202 :: 		case s0:
L_FSM13:
;FIRMWARE_SYA_ver_1_3_0.c,203 :: 		M1 = 0;
0x0160	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,204 :: 		M2 = 0;
0x0162	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,205 :: 		M3 = 0;
0x0164	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,206 :: 		sn_GoTo = 0;
0x0166	0x6A1B      	CLRF        _sn_GoTo 
0x0168	0x6A1C      	CLRF        _sn_GoTo+1 
;FIRMWARE_SYA_ver_1_3_0.c,207 :: 		if((1 == sn_PosEdge_1) && (1 == clock0)){
0x016A	0xAC16      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x016C	0xD009      	BRA         L_FSM16
0x016E	0x0E00      	MOVLW       0
0x0170	0x1819      	XORWF       _clock0+1, 0 
0x0172	0xE102      	BNZ         L__FSM144
0x0174	0x5018      	MOVF        _clock0, 0 
0x0176	0x0A01      	XORLW       1
L__FSM144:
0x0178	0xE103      	BNZ         L_FSM16
L__FSM132:
;FIRMWARE_SYA_ver_1_3_0.c,208 :: 		next_state = s7;
0x017A	0x0E07      	MOVLW       7
0x017C	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,209 :: 		}
0x017E	0xD000      	BRA         L_FSM17
L_FSM16:
;FIRMWARE_SYA_ver_1_3_0.c,211 :: 		}
L_FSM17:
;FIRMWARE_SYA_ver_1_3_0.c,212 :: 		break;
0x0180	0xD11B      	BRA         L_FSM12
;FIRMWARE_SYA_ver_1_3_0.c,213 :: 		case s1:
L_FSM18:
;FIRMWARE_SYA_ver_1_3_0.c,214 :: 		M1 = 1;
0x0182	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,215 :: 		M2 = 0;
0x0184	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,216 :: 		M3 = 0;
0x0186	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,217 :: 		GT1 = 1;
0x0188	0x8216      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,218 :: 		GT2 = 0;
0x018A	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,219 :: 		GT3 = 0;
0x018C	0x9A16      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,221 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x018E	0xA416      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0190	0xD008      	BRA         L_FSM21
0x0192	0x0E00      	MOVLW       0
0x0194	0x1819      	XORWF       _clock0+1, 0 
0x0196	0xE102      	BNZ         L__FSM145
0x0198	0x5018      	MOVF        _clock0, 0 
0x019A	0x0A01      	XORLW       1
L__FSM145:
0x019C	0xE102      	BNZ         L_FSM21
L__FSM131:
;FIRMWARE_SYA_ver_1_3_0.c,223 :: 		next_state = s0;
0x019E	0x6A17      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,224 :: 		}
0x01A0	0xD00B      	BRA         L_FSM22
L_FSM21:
;FIRMWARE_SYA_ver_1_3_0.c,225 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x01A2	0xA816      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x01A4	0xD009      	BRA         L_FSM25
0x01A6	0x0E00      	MOVLW       0
0x01A8	0x1819      	XORWF       _clock0+1, 0 
0x01AA	0xE102      	BNZ         L__FSM146
0x01AC	0x5018      	MOVF        _clock0, 0 
0x01AE	0x0A01      	XORLW       1
L__FSM146:
0x01B0	0xE103      	BNZ         L_FSM25
L__FSM130:
;FIRMWARE_SYA_ver_1_3_0.c,226 :: 		next_state = s4;
0x01B2	0x0E04      	MOVLW       4
0x01B4	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,227 :: 		}
0x01B6	0xD000      	BRA         L_FSM26
L_FSM25:
;FIRMWARE_SYA_ver_1_3_0.c,229 :: 		}
L_FSM26:
L_FSM22:
;FIRMWARE_SYA_ver_1_3_0.c,230 :: 		break;
0x01B8	0xD0FF      	BRA         L_FSM12
;FIRMWARE_SYA_ver_1_3_0.c,231 :: 		case s2:
L_FSM27:
;FIRMWARE_SYA_ver_1_3_0.c,232 :: 		M1 = 0;
0x01BA	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,233 :: 		M2 = 1;
0x01BC	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,234 :: 		M3 = 0;
0x01BE	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,235 :: 		GT1 = 0;
0x01C0	0x9216      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,236 :: 		GT2 = 1;
0x01C2	0x8016      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,237 :: 		GT3 = 0;
0x01C4	0x9A16      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,238 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x01C6	0xA416      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x01C8	0xD008      	BRA         L_FSM30
0x01CA	0x0E00      	MOVLW       0
0x01CC	0x1819      	XORWF       _clock0+1, 0 
0x01CE	0xE102      	BNZ         L__FSM147
0x01D0	0x5018      	MOVF        _clock0, 0 
0x01D2	0x0A01      	XORLW       1
L__FSM147:
0x01D4	0xE102      	BNZ         L_FSM30
L__FSM129:
;FIRMWARE_SYA_ver_1_3_0.c,239 :: 		next_state = s0;
0x01D6	0x6A17      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,240 :: 		}
0x01D8	0xD00B      	BRA         L_FSM31
L_FSM30:
;FIRMWARE_SYA_ver_1_3_0.c,241 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x01DA	0xA816      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x01DC	0xD009      	BRA         L_FSM34
0x01DE	0x0E00      	MOVLW       0
0x01E0	0x1819      	XORWF       _clock0+1, 0 
0x01E2	0xE102      	BNZ         L__FSM148
0x01E4	0x5018      	MOVF        _clock0, 0 
0x01E6	0x0A01      	XORLW       1
L__FSM148:
0x01E8	0xE103      	BNZ         L_FSM34
L__FSM128:
;FIRMWARE_SYA_ver_1_3_0.c,242 :: 		next_state = s4;
0x01EA	0x0E04      	MOVLW       4
0x01EC	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,243 :: 		}
0x01EE	0xD000      	BRA         L_FSM35
L_FSM34:
;FIRMWARE_SYA_ver_1_3_0.c,245 :: 		}
L_FSM35:
L_FSM31:
;FIRMWARE_SYA_ver_1_3_0.c,246 :: 		break;
0x01F0	0xD0E3      	BRA         L_FSM12
;FIRMWARE_SYA_ver_1_3_0.c,247 :: 		case s3:
L_FSM36:
;FIRMWARE_SYA_ver_1_3_0.c,248 :: 		M1 = 0;
0x01F2	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,249 :: 		M2 = 0;
0x01F4	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,250 :: 		M3 = 1;
0x01F6	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,251 :: 		GT1 = 0;
0x01F8	0x9216      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,252 :: 		GT2 = 0;
0x01FA	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,253 :: 		GT3 = 1;
0x01FC	0x8A16      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,254 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x01FE	0xA416      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0200	0xD008      	BRA         L_FSM39
0x0202	0x0E00      	MOVLW       0
0x0204	0x1819      	XORWF       _clock0+1, 0 
0x0206	0xE102      	BNZ         L__FSM149
0x0208	0x5018      	MOVF        _clock0, 0 
0x020A	0x0A01      	XORLW       1
L__FSM149:
0x020C	0xE102      	BNZ         L_FSM39
L__FSM127:
;FIRMWARE_SYA_ver_1_3_0.c,255 :: 		next_state = s0;
0x020E	0x6A17      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,256 :: 		}
0x0210	0xD00B      	BRA         L_FSM40
L_FSM39:
;FIRMWARE_SYA_ver_1_3_0.c,257 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x0212	0xA816      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0214	0xD009      	BRA         L_FSM43
0x0216	0x0E00      	MOVLW       0
0x0218	0x1819      	XORWF       _clock0+1, 0 
0x021A	0xE102      	BNZ         L__FSM150
0x021C	0x5018      	MOVF        _clock0, 0 
0x021E	0x0A01      	XORLW       1
L__FSM150:
0x0220	0xE103      	BNZ         L_FSM43
L__FSM126:
;FIRMWARE_SYA_ver_1_3_0.c,258 :: 		next_state = s4;
0x0222	0x0E04      	MOVLW       4
0x0224	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,259 :: 		}
0x0226	0xD000      	BRA         L_FSM44
L_FSM43:
;FIRMWARE_SYA_ver_1_3_0.c,261 :: 		}
L_FSM44:
L_FSM40:
;FIRMWARE_SYA_ver_1_3_0.c,262 :: 		break;
0x0228	0xD0C7      	BRA         L_FSM12
;FIRMWARE_SYA_ver_1_3_0.c,263 :: 		case s4:
L_FSM45:
;FIRMWARE_SYA_ver_1_3_0.c,264 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x022A	0xA216      	BTFSS       _GT1, BitPos(_GT1+0) 
0x022C	0xD008      	BRA         L_FSM48
0x022E	0xB016      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0230	0xD006      	BRA         L_FSM48
0x0232	0xBA16      	BTFSC       _GT3, BitPos(_GT3+0) 
0x0234	0xD004      	BRA         L_FSM48
L__FSM125:
;FIRMWARE_SYA_ver_1_3_0.c,265 :: 		M1 = 1;
0x0236	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,266 :: 		M2 = 1;
0x0238	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,267 :: 		M3 = 0;
0x023A	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,268 :: 		}
0x023C	0xD013      	BRA         L_FSM49
L_FSM48:
;FIRMWARE_SYA_ver_1_3_0.c,269 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x023E	0xA016      	BTFSS       _GT2, BitPos(_GT2+0) 
0x0240	0xD008      	BRA         L_FSM52
0x0242	0xB216      	BTFSC       _GT1, BitPos(_GT1+0) 
0x0244	0xD006      	BRA         L_FSM52
0x0246	0xBA16      	BTFSC       _GT3, BitPos(_GT3+0) 
0x0248	0xD004      	BRA         L_FSM52
L__FSM124:
;FIRMWARE_SYA_ver_1_3_0.c,270 :: 		M1 = 0;
0x024A	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,271 :: 		M2 = 1;
0x024C	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,272 :: 		M3 = 1;
0x024E	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,273 :: 		}
0x0250	0xD009      	BRA         L_FSM53
L_FSM52:
;FIRMWARE_SYA_ver_1_3_0.c,274 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x0252	0xAA16      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0254	0xD007      	BRA         L_FSM56
0x0256	0xB216      	BTFSC       _GT1, BitPos(_GT1+0) 
0x0258	0xD005      	BRA         L_FSM56
0x025A	0xB016      	BTFSC       _GT2, BitPos(_GT2+0) 
0x025C	0xD003      	BRA         L_FSM56
L__FSM123:
;FIRMWARE_SYA_ver_1_3_0.c,275 :: 		M1 = 1;
0x025E	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,276 :: 		M2 = 0;
0x0260	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,277 :: 		M3 = 1;
0x0262	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,278 :: 		}
L_FSM56:
L_FSM53:
L_FSM49:
;FIRMWARE_SYA_ver_1_3_0.c,279 :: 		if((1 == sn_NegEdge_2) && (1 == clock0)){
0x0264	0xA616      	BTFSS       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x0266	0xD009      	BRA         L_FSM59
0x0268	0x0E00      	MOVLW       0
0x026A	0x1819      	XORWF       _clock0+1, 0 
0x026C	0xE102      	BNZ         L__FSM151
0x026E	0x5018      	MOVF        _clock0, 0 
0x0270	0x0A01      	XORLW       1
L__FSM151:
0x0272	0xE103      	BNZ         L_FSM59
L__FSM122:
;FIRMWARE_SYA_ver_1_3_0.c,280 :: 		next_state = s7;
0x0274	0x0E07      	MOVLW       7
0x0276	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,281 :: 		}
0x0278	0xD00B      	BRA         L_FSM60
L_FSM59:
;FIRMWARE_SYA_ver_1_3_0.c,282 :: 		else if((1 == sn_PosEdge_3) && (1 == clock0)){
0x027A	0xA023      	BTFSS       _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
0x027C	0xD009      	BRA         L_FSM63
0x027E	0x0E00      	MOVLW       0
0x0280	0x1819      	XORWF       _clock0+1, 0 
0x0282	0xE102      	BNZ         L__FSM152
0x0284	0x5018      	MOVF        _clock0, 0 
0x0286	0x0A01      	XORLW       1
L__FSM152:
0x0288	0xE103      	BNZ         L_FSM63
L__FSM121:
;FIRMWARE_SYA_ver_1_3_0.c,283 :: 		next_state = s5;
0x028A	0x0E05      	MOVLW       5
0x028C	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,284 :: 		}
0x028E	0xD000      	BRA         L_FSM64
L_FSM63:
;FIRMWARE_SYA_ver_1_3_0.c,286 :: 		}
L_FSM64:
L_FSM60:
;FIRMWARE_SYA_ver_1_3_0.c,287 :: 		break;
0x0290	0xD093      	BRA         L_FSM12
;FIRMWARE_SYA_ver_1_3_0.c,288 :: 		case s5:
L_FSM65:
;FIRMWARE_SYA_ver_1_3_0.c,289 :: 		M1 = 1;
0x0292	0x8A83      	BSF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,290 :: 		M2 = 1;
0x0294	0x8087      	BSF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,291 :: 		M3 = 1;
0x0296	0x8287      	BSF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,292 :: 		if((1 == sn_NegEdge_3) && (1 == clock0)){
0x0298	0xAE16      	BTFSS       _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
0x029A	0xD00D      	BRA         L_FSM68
0x029C	0x0E00      	MOVLW       0
0x029E	0x1819      	XORWF       _clock0+1, 0 
0x02A0	0xE102      	BNZ         L__FSM153
0x02A2	0x5018      	MOVF        _clock0, 0 
0x02A4	0x0A01      	XORLW       1
L__FSM153:
0x02A6	0xE107      	BNZ         L_FSM68
L__FSM120:
;FIRMWARE_SYA_ver_1_3_0.c,293 :: 		sn_GoTo = 1;
0x02A8	0x0E01      	MOVLW       1
0x02AA	0x6E1B      	MOVWF       _sn_GoTo 
0x02AC	0x0E00      	MOVLW       0
0x02AE	0x6E1C      	MOVWF       _sn_GoTo+1 
;FIRMWARE_SYA_ver_1_3_0.c,294 :: 		next_state = s6;
0x02B0	0x0E06      	MOVLW       6
0x02B2	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,295 :: 		}
0x02B4	0xD000      	BRA         L_FSM69
L_FSM68:
;FIRMWARE_SYA_ver_1_3_0.c,297 :: 		}
L_FSM69:
;FIRMWARE_SYA_ver_1_3_0.c,298 :: 		break;
0x02B6	0xD080      	BRA         L_FSM12
;FIRMWARE_SYA_ver_1_3_0.c,299 :: 		case s6:
L_FSM70:
;FIRMWARE_SYA_ver_1_3_0.c,300 :: 		if((1 == sn_GoTo) && (1 == GT1) && (1 == clock0)){
0x02B8	0x0E00      	MOVLW       0
0x02BA	0x181C      	XORWF       _sn_GoTo+1, 0 
0x02BC	0xE102      	BNZ         L__FSM154
0x02BE	0x501B      	MOVF        _sn_GoTo, 0 
0x02C0	0x0A01      	XORLW       1
L__FSM154:
0x02C2	0xE10E      	BNZ         L_FSM73
0x02C4	0xA216      	BTFSS       _GT1, BitPos(_GT1+0) 
0x02C6	0xD00C      	BRA         L_FSM73
0x02C8	0x0E00      	MOVLW       0
0x02CA	0x1819      	XORWF       _clock0+1, 0 
0x02CC	0xE102      	BNZ         L__FSM155
0x02CE	0x5018      	MOVF        _clock0, 0 
0x02D0	0x0A01      	XORLW       1
L__FSM155:
0x02D2	0xE106      	BNZ         L_FSM73
L__FSM119:
;FIRMWARE_SYA_ver_1_3_0.c,301 :: 		GT2 = 1;
0x02D4	0x8016      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,302 :: 		GT3 = 0;
0x02D6	0x9A16      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,303 :: 		GT1 = 0;
0x02D8	0x9216      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,304 :: 		next_state = s4;
0x02DA	0x0E04      	MOVLW       4
0x02DC	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,305 :: 		}
0x02DE	0xD028      	BRA         L_FSM74
L_FSM73:
;FIRMWARE_SYA_ver_1_3_0.c,306 :: 		else if((1 == sn_GoTo) && (1 == GT2) && (1 == clock0)){
0x02E0	0x0E00      	MOVLW       0
0x02E2	0x181C      	XORWF       _sn_GoTo+1, 0 
0x02E4	0xE102      	BNZ         L__FSM156
0x02E6	0x501B      	MOVF        _sn_GoTo, 0 
0x02E8	0x0A01      	XORLW       1
L__FSM156:
0x02EA	0xE10E      	BNZ         L_FSM77
0x02EC	0xA016      	BTFSS       _GT2, BitPos(_GT2+0) 
0x02EE	0xD00C      	BRA         L_FSM77
0x02F0	0x0E00      	MOVLW       0
0x02F2	0x1819      	XORWF       _clock0+1, 0 
0x02F4	0xE102      	BNZ         L__FSM157
0x02F6	0x5018      	MOVF        _clock0, 0 
0x02F8	0x0A01      	XORLW       1
L__FSM157:
0x02FA	0xE106      	BNZ         L_FSM77
L__FSM118:
;FIRMWARE_SYA_ver_1_3_0.c,307 :: 		GT2 = 0;
0x02FC	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,308 :: 		GT1 = 0;
0x02FE	0x9216      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,309 :: 		GT3 = 1;
0x0300	0x8A16      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,310 :: 		next_state = s4;
0x0302	0x0E04      	MOVLW       4
0x0304	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,311 :: 		}
0x0306	0xD014      	BRA         L_FSM78
L_FSM77:
;FIRMWARE_SYA_ver_1_3_0.c,312 :: 		else if((1 == sn_GoTo) && (1 == GT3) && (1 == clock0)){
0x0308	0x0E00      	MOVLW       0
0x030A	0x181C      	XORWF       _sn_GoTo+1, 0 
0x030C	0xE102      	BNZ         L__FSM158
0x030E	0x501B      	MOVF        _sn_GoTo, 0 
0x0310	0x0A01      	XORLW       1
L__FSM158:
0x0312	0xE10E      	BNZ         L_FSM81
0x0314	0xAA16      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0316	0xD00C      	BRA         L_FSM81
0x0318	0x0E00      	MOVLW       0
0x031A	0x1819      	XORWF       _clock0+1, 0 
0x031C	0xE102      	BNZ         L__FSM159
0x031E	0x5018      	MOVF        _clock0, 0 
0x0320	0x0A01      	XORLW       1
L__FSM159:
0x0322	0xE106      	BNZ         L_FSM81
L__FSM117:
;FIRMWARE_SYA_ver_1_3_0.c,313 :: 		GT1 = 1;
0x0324	0x8216      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,314 :: 		GT2 = 0;
0x0326	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,315 :: 		GT3 = 0;
0x0328	0x9A16      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,316 :: 		next_state = s4;
0x032A	0x0E04      	MOVLW       4
0x032C	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,317 :: 		}
0x032E	0xD000      	BRA         L_FSM82
L_FSM81:
;FIRMWARE_SYA_ver_1_3_0.c,319 :: 		}
L_FSM82:
L_FSM78:
L_FSM74:
;FIRMWARE_SYA_ver_1_3_0.c,320 :: 		break;
0x0330	0xD043      	BRA         L_FSM12
;FIRMWARE_SYA_ver_1_3_0.c,321 :: 		case s7:
L_FSM83:
;FIRMWARE_SYA_ver_1_3_0.c,322 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x0332	0xA216      	BTFSS       _GT1, BitPos(_GT1+0) 
0x0334	0xD007      	BRA         L_FSM86
0x0336	0xB016      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0338	0xD005      	BRA         L_FSM86
0x033A	0xBA16      	BTFSC       _GT3, BitPos(_GT3+0) 
0x033C	0xD003      	BRA         L_FSM86
L__FSM116:
;FIRMWARE_SYA_ver_1_3_0.c,323 :: 		next_state = s2;
0x033E	0x0E02      	MOVLW       2
0x0340	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,324 :: 		}
0x0342	0xD011      	BRA         L_FSM87
L_FSM86:
;FIRMWARE_SYA_ver_1_3_0.c,325 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x0344	0xA016      	BTFSS       _GT2, BitPos(_GT2+0) 
0x0346	0xD007      	BRA         L_FSM90
0x0348	0xB216      	BTFSC       _GT1, BitPos(_GT1+0) 
0x034A	0xD005      	BRA         L_FSM90
0x034C	0xBA16      	BTFSC       _GT3, BitPos(_GT3+0) 
0x034E	0xD003      	BRA         L_FSM90
L__FSM115:
;FIRMWARE_SYA_ver_1_3_0.c,326 :: 		next_state = s3;
0x0350	0x0E03      	MOVLW       3
0x0352	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,327 :: 		}
0x0354	0xD008      	BRA         L_FSM91
L_FSM90:
;FIRMWARE_SYA_ver_1_3_0.c,328 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x0356	0xAA16      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0358	0xD006      	BRA         L_FSM94
0x035A	0xB216      	BTFSC       _GT1, BitPos(_GT1+0) 
0x035C	0xD004      	BRA         L_FSM94
0x035E	0xB016      	BTFSC       _GT2, BitPos(_GT2+0) 
0x0360	0xD002      	BRA         L_FSM94
L__FSM114:
;FIRMWARE_SYA_ver_1_3_0.c,329 :: 		next_state = s1;
0x0362	0x0E01      	MOVLW       1
0x0364	0x6E17      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,330 :: 		}
L_FSM94:
L_FSM91:
L_FSM87:
;FIRMWARE_SYA_ver_1_3_0.c,331 :: 		break;
0x0366	0xD028      	BRA         L_FSM12
;FIRMWARE_SYA_ver_1_3_0.c,332 :: 		default:
L_FSM95:
;FIRMWARE_SYA_ver_1_3_0.c,333 :: 		GT1 = 0;
0x0368	0x9216      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,334 :: 		GT2 = 0;
0x036A	0x9016      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,335 :: 		GT3 = 1;
0x036C	0x8A16      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,336 :: 		M1 = 0;
0x036E	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,337 :: 		M2 = 0;
0x0370	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,338 :: 		M3 = 0;
0x0372	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,339 :: 		current_state = s0;
0x0374	0x6A1A      	CLRF        _current_state 
;FIRMWARE_SYA_ver_1_3_0.c,340 :: 		next_state = s0;
0x0376	0x6A17      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,341 :: 		break;
0x0378	0xD01F      	BRA         L_FSM12
;FIRMWARE_SYA_ver_1_3_0.c,342 :: 		}
L_FSM11:
0x037A	0x501A      	MOVF        _current_state, 0 
0x037C	0x0A00      	XORLW       0
0x037E	0xB4D8      	BTFSC       STATUS, 2 
0x0380	0xD6EF      	BRA         L_FSM13
0x0382	0x501A      	MOVF        _current_state, 0 
0x0384	0x0A01      	XORLW       1
0x0386	0xB4D8      	BTFSC       STATUS, 2 
0x0388	0xD6FC      	BRA         L_FSM18
0x038A	0x501A      	MOVF        _current_state, 0 
0x038C	0x0A02      	XORLW       2
0x038E	0xB4D8      	BTFSC       STATUS, 2 
0x0390	0xD714      	BRA         L_FSM27
0x0392	0x501A      	MOVF        _current_state, 0 
0x0394	0x0A03      	XORLW       3
0x0396	0xB4D8      	BTFSC       STATUS, 2 
0x0398	0xD72C      	BRA         L_FSM36
0x039A	0x501A      	MOVF        _current_state, 0 
0x039C	0x0A04      	XORLW       4
0x039E	0xB4D8      	BTFSC       STATUS, 2 
0x03A0	0xD744      	BRA         L_FSM45
0x03A2	0x501A      	MOVF        _current_state, 0 
0x03A4	0x0A05      	XORLW       5
0x03A6	0xB4D8      	BTFSC       STATUS, 2 
0x03A8	0xD774      	BRA         L_FSM65
0x03AA	0x501A      	MOVF        _current_state, 0 
0x03AC	0x0A06      	XORLW       6
0x03AE	0xE084      	BZ          L_FSM70
0x03B0	0x501A      	MOVF        _current_state, 0 
0x03B2	0x0A07      	XORLW       7
0x03B4	0xE0BE      	BZ          L_FSM83
0x03B6	0xD7D8      	BRA         L_FSM95
L_FSM12:
;FIRMWARE_SYA_ver_1_3_0.c,344 :: 		}
L_end_FSM:
0x03B8	0x0012      	RETURN      0
; end of _FSM
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x03BA	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x03BC	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x03BE	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x03C2	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x03C4	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x03C6	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x03C8	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x03CA	0x0012      	RETURN      0
; end of ___CC2DW
_InitSystems:
;FIRMWARE_SYA_ver_1_3_0.c,410 :: 		void InitSystems(){
;FIRMWARE_SYA_ver_1_3_0.c,411 :: 		InitInterrupt();
0x03CC	0xDE49      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_1_3_0.c,412 :: 		InitMCU();
0x03CE	0xDE57      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_1_3_0.c,413 :: 		}
L_end_InitSystems:
0x03D0	0x0012      	RETURN      0
; end of _InitSystems
_main:
;FIRMWARE_SYA_ver_1_3_0.c,179 :: 		void main(){
;FIRMWARE_SYA_ver_1_3_0.c,181 :: 		InitSystems();
0x03D2	0xDFFC      	RCALL       _InitSystems
;FIRMWARE_SYA_ver_1_3_0.c,187 :: 		while(1){
L_main9:
;FIRMWARE_SYA_ver_1_3_0.c,189 :: 		current_state = next_state; // Maybe move this with Events
0x03D4	0xF01AC017  	MOVFF       _next_state, _current_state
;FIRMWARE_SYA_ver_1_3_0.c,190 :: 		FSM();
0x03D8	0xDEBE      	RCALL       _FSM
;FIRMWARE_SYA_ver_1_3_0.c,191 :: 		}
0x03DA	0xD7FC      	BRA         L_main9
;FIRMWARE_SYA_ver_1_3_0.c,193 :: 		}
L_end_main:
0x03DC	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [88]    _interrupt
0x0060      [30]    _InitInterrupt
0x007E      [64]    _InitMCU
0x00BE     [152]    _Events
0x0156     [612]    _FSM
0x03BA      [18]    ___CC2DW
0x03CC       [6]    _InitSystems
0x03D2      [12]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [0]    _sn_NegEdge_1
0x0016       [0]    _sn_NegEdge_2
0x0016       [0]    _sn_PosEdge_2
0x0016       [0]    _GT2
0x0016       [0]    _GT3
0x0016       [0]    _GT1
0x0016       [0]    _sn_PosEdge_1
0x0016       [0]    _sn_NegEdge_3
0x0017       [1]    _next_state
0x0018       [2]    _clock0
0x001A       [1]    _current_state
0x001B       [2]    _sn_GoTo
0x001D       [2]    _interruptC2
0x001F       [2]    _interruptC0
0x0021       [2]    _interruptC1
0x0023       [0]    _sn_PosEdge_3
0x0EC2       [1]    PIE0
0x0EC2       [0]    IOCIE_bit
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F21       [1]    ANSELC
0x0F22       [1]    INLVLD
0x0F25       [1]    WPUD
0x0F26       [1]    ANSELD
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F60       [1]    ADCON0
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F86       [1]    LATD
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8B       [1]    TRISD
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F90       [1]    PORTD
0x0F91       [1]    PORTE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
