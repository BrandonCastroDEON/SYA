;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/22/2024 11:09:52 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF80  	GOTO        768
_interrupt:
;FIRMWARE_SYA_ver_1_3_0.c,98 :: 		void interrupt(){
;FIRMWARE_SYA_ver_1_3_0.c,111 :: 		if((1 == IOCCF.B0) && (1 == IOCIE_bit)){
0x0008	0x010F      	MOVLB       15
0x000A	0xA11A      	BTFSS       IOCCF, 0, 1
0x000C	0xD010      	BRA         L_interrupt2
0x000E	0x010E      	MOVLB       14
0x0010	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0012	0xD00D      	BRA         L_interrupt2
L__interrupt136:
;FIRMWARE_SYA_ver_1_3_0.c,112 :: 		IOCCF.B0 = 0; // Limpiamos la bandera de IOC
0x0014	0x010F      	MOVLB       15
0x0016	0x911A      	BCF         IOCCF, 0, 1
;FIRMWARE_SYA_ver_1_3_0.c,113 :: 		interruptC0 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0018	0x8C15      	BSF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_1_3_0.c,114 :: 		if(1 == interruptC0){
0x001A	0xAC15      	BTFSS       _interruptC0, BitPos(_interruptC0+0) 
0x001C	0xD008      	BRA         L_interrupt3
;FIRMWARE_SYA_ver_1_3_0.c,116 :: 		if(1 == SWITCH1){
0x001E	0xA08F      	BTFSS       PORTC, 0 
0x0020	0xD003      	BRA         L_interrupt4
;FIRMWARE_SYA_ver_1_3_0.c,118 :: 		sn_PosEdge_1 = 0;
0x0022	0x9215      	BCF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,119 :: 		sn_NegEdge_1 = 1;
0x0024	0x8618      	BSF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,120 :: 		}
0x0026	0xD002      	BRA         L_interrupt5
L_interrupt4:
;FIRMWARE_SYA_ver_1_3_0.c,124 :: 		sn_PosEdge_1 = 1;
0x0028	0x8215      	BSF         _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,125 :: 		sn_NegEdge_1 = 0;
0x002A	0x9618      	BCF         _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,126 :: 		}
L_interrupt5:
;FIRMWARE_SYA_ver_1_3_0.c,127 :: 		interruptC0 = 0; // Limpiamos la bandera de interrupcion en C0
0x002C	0x9C15      	BCF         _interruptC0, BitPos(_interruptC0+0) 
;FIRMWARE_SYA_ver_1_3_0.c,128 :: 		}
L_interrupt3:
;FIRMWARE_SYA_ver_1_3_0.c,129 :: 		}
L_interrupt2:
0x002E	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_1_3_0.c,131 :: 		if((1 == IOCCF.B1) && (1 == IOCIE_bit)){
0x0030	0xA31A      	BTFSS       IOCCF, 1, 1
0x0032	0xD010      	BRA         L_interrupt8
0x0034	0x010E      	MOVLB       14
0x0036	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x0038	0xD00D      	BRA         L_interrupt8
L__interrupt135:
;FIRMWARE_SYA_ver_1_3_0.c,132 :: 		IOCCF.B1 = 0; // Limpiamos la bandera de IOC
0x003A	0x010F      	MOVLB       15
0x003C	0x931A      	BCF         IOCCF, 1, 1
;FIRMWARE_SYA_ver_1_3_0.c,133 :: 		interruptC1 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x003E	0x8218      	BSF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,135 :: 		if(1 == interruptC1){
0x0040	0xA218      	BTFSS       _interruptC1, BitPos(_interruptC1+0) 
0x0042	0xD008      	BRA         L_interrupt9
;FIRMWARE_SYA_ver_1_3_0.c,137 :: 		if(1 == SWITCH2){
0x0044	0xA28F      	BTFSS       PORTC, 1 
0x0046	0xD003      	BRA         L_interrupt10
;FIRMWARE_SYA_ver_1_3_0.c,139 :: 		sn_PosEdge_2 = 0;
0x0048	0x9418      	BCF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,140 :: 		sn_NegEdge_2 = 1;
0x004A	0x8A18      	BSF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,141 :: 		}
0x004C	0xD002      	BRA         L_interrupt11
L_interrupt10:
;FIRMWARE_SYA_ver_1_3_0.c,145 :: 		sn_PosEdge_2 = 1;
0x004E	0x8418      	BSF         _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,146 :: 		sn_NegEdge_2 = 0;
0x0050	0x9A18      	BCF         _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,147 :: 		}
L_interrupt11:
;FIRMWARE_SYA_ver_1_3_0.c,148 :: 		interruptC1 = 0; // Limpiamos la bandera de interrupcion en C1
0x0052	0x9218      	BCF         _interruptC1, BitPos(_interruptC1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,149 :: 		}
L_interrupt9:
;FIRMWARE_SYA_ver_1_3_0.c,150 :: 		}
L_interrupt8:
0x0054	0x010F      	MOVLB       15
;FIRMWARE_SYA_ver_1_3_0.c,151 :: 		if((1 == IOCCF.B2) && (1 == IOCIE_bit)){
0x0056	0xA51A      	BTFSS       IOCCF, 2, 1
0x0058	0xD010      	BRA         L_interrupt14
0x005A	0x010E      	MOVLB       14
0x005C	0xA9C2      	BTFSS       IOCIE_bit, BitPos(IOCIE_bit+0), 1
0x005E	0xD00D      	BRA         L_interrupt14
L__interrupt134:
;FIRMWARE_SYA_ver_1_3_0.c,152 :: 		IOCCF.B2 = 0; // Limpiamos la bandera de IOC
0x0060	0x010F      	MOVLB       15
0x0062	0x951A      	BCF         IOCCF, 2, 1
;FIRMWARE_SYA_ver_1_3_0.c,153 :: 		interruptC2 = 1; // Ponemos en 1 la bandera de interrupcion en C0
0x0064	0x8018      	BSF         _interruptC2, BitPos(_interruptC2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,154 :: 		if(1 == interruptC2){
0x0066	0xA018      	BTFSS       _interruptC2, BitPos(_interruptC2+0) 
0x0068	0xD008      	BRA         L_interrupt15
;FIRMWARE_SYA_ver_1_3_0.c,155 :: 		if(1 == SWITCH3){
0x006A	0xA48F      	BTFSS       PORTC, 2 
0x006C	0xD003      	BRA         L_interrupt16
;FIRMWARE_SYA_ver_1_3_0.c,156 :: 		sn_PosEdge_3 = 0;
0x006E	0x9818      	BCF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,157 :: 		sn_NegEdge_3 = 1;
0x0070	0x8E15      	BSF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,158 :: 		}
0x0072	0xD002      	BRA         L_interrupt17
L_interrupt16:
;FIRMWARE_SYA_ver_1_3_0.c,160 :: 		sn_PosEdge_3 = 1;
0x0074	0x8818      	BSF         _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,161 :: 		sn_NegEdge_3 = 0;
0x0076	0x9E15      	BCF         _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,162 :: 		}
L_interrupt17:
;FIRMWARE_SYA_ver_1_3_0.c,163 :: 		interruptC2 = 0;
0x0078	0x9018      	BCF         _interruptC2, BitPos(_interruptC2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,164 :: 		}
L_interrupt15:
;FIRMWARE_SYA_ver_1_3_0.c,165 :: 		}
L_interrupt14:
;FIRMWARE_SYA_ver_1_3_0.c,167 :: 		}
L_end_interrupt:
L__interrupt167:
0x007A	0x0011      	RETFIE      1
; end of _interrupt
_M3Off:
;FIRMWARE_SYA_ver_1_3_0.c,92 :: 		void M3Off(){M3 = 0;}
0x007C	0x9287      	BCF         LATE, 1 
L_end_M3Off:
0x007E	0x0012      	RETURN      0
; end of _M3Off
_M2Off:
;FIRMWARE_SYA_ver_1_3_0.c,90 :: 		void M2Off(){M2 = 0;}
0x0080	0x9087      	BCF         LATE, 0 
L_end_M2Off:
0x0082	0x0012      	RETURN      0
; end of _M2Off
_M1Off:
;FIRMWARE_SYA_ver_1_3_0.c,88 :: 		void M1Off(){M1 = 0;}
0x0084	0x9A83      	BCF         LATA, 5 
L_end_M1Off:
0x0086	0x0012      	RETURN      0
; end of _M1Off
_M2On:
;FIRMWARE_SYA_ver_1_3_0.c,89 :: 		void M2On(){M2 = 1;}
0x0088	0x8087      	BSF         LATE, 0 
L_end_M2On:
0x008A	0x0012      	RETURN      0
; end of _M2On
_M3On:
;FIRMWARE_SYA_ver_1_3_0.c,91 :: 		void M3On(){M3 = 1;}
0x008C	0x8287      	BSF         LATE, 1 
L_end_M3On:
0x008E	0x0012      	RETURN      0
; end of _M3On
_M1On:
;FIRMWARE_SYA_ver_1_3_0.c,87 :: 		void M1On(){M1 = 1;}
0x0090	0x8A83      	BSF         LATA, 5 
L_end_M1On:
0x0092	0x0012      	RETURN      0
; end of _M1On
_InitInterrupt:
;FIRMWARE_SYA_ver_1_3_0.c,427 :: 		void InitInterrupt(){
;FIRMWARE_SYA_ver_1_3_0.c,429 :: 		PIE0 = 0x30;    // Enable bit de IOC (Interrupt on Change)
0x0094	0x0E30      	MOVLW       48
0x0096	0x010E      	MOVLB       14
0x0098	0x6FC2      	MOVWF       PIE0, 1
;FIRMWARE_SYA_ver_1_3_0.c,430 :: 		PIR0 = 0x00;    // Limpiamos la bandera de IOC
0x009A	0x6BCA      	CLRF        PIR0, 1
;FIRMWARE_SYA_ver_1_3_0.c,435 :: 		IOCCN = 0x07;   // Activamos las banderas de IOC en Transicion negativa para C0 y C1
0x009C	0x0E07      	MOVLW       7
0x009E	0x010F      	MOVLB       15
0x00A0	0x6F1B      	MOVWF       IOCCN, 1
;FIRMWARE_SYA_ver_1_3_0.c,436 :: 		IOCCP = 0x07;   // Activamos las banderas de IOC en Transicion positiva para C0 y C1
0x00A2	0x0E07      	MOVLW       7
0x00A4	0x6F1C      	MOVWF       IOCCP, 1
;FIRMWARE_SYA_ver_1_3_0.c,437 :: 		IOCCF = 0x00;   // Limpiamos la bandera de IOC
0x00A6	0x6B1A      	CLRF        IOCCF, 1
;FIRMWARE_SYA_ver_1_3_0.c,438 :: 		PIR0.TMR0IF = 0;
0x00A8	0x010E      	MOVLB       14
0x00AA	0x9BCA      	BCF         PIR0, 5, 1
;FIRMWARE_SYA_ver_1_3_0.c,439 :: 		INTCON = 0xC0;  // Activamos bits de interrupt globales (GIE) y por perifericos (PIE)
0x00AC	0x0EC0      	MOVLW       192
0x00AE	0x6EF2      	MOVWF       INTCON 
;FIRMWARE_SYA_ver_1_3_0.c,441 :: 		}
L_end_InitInterrupt:
0x00B0	0x0012      	RETURN      0
; end of _InitInterrupt
_InitMCU:
;FIRMWARE_SYA_ver_1_3_0.c,447 :: 		void InitMCU(){
;FIRMWARE_SYA_ver_1_3_0.c,449 :: 		ADCON0 = 0x08; // Desactivamos ADC
0x00B2	0x0E08      	MOVLW       8
0x00B4	0x6E60      	MOVWF       ADCON0 
;FIRMWARE_SYA_ver_1_3_0.c,450 :: 		ANSELC = 0x00;    // Ponemos en modo digital al puerto C
0x00B6	0x010F      	MOVLB       15
0x00B8	0x6B21      	CLRF        ANSELC, 1
;FIRMWARE_SYA_ver_1_3_0.c,451 :: 		ANSELE = 0x00;    //                ''                 E
0x00BA	0x6B2E      	CLRF        ANSELE, 1
;FIRMWARE_SYA_ver_1_3_0.c,452 :: 		ANSELA = 0x00;    //                ''                 A
0x00BC	0x6B11      	CLRF        ANSELA, 1
;FIRMWARE_SYA_ver_1_3_0.c,453 :: 		ANSELD = 0x00;
0x00BE	0x6B26      	CLRF        ANSELD, 1
;FIRMWARE_SYA_ver_1_3_0.c,455 :: 		TRISC = 0x0F;  // Ponemos en modo de entrada a C0, C1, c2 Y c3, los demas como salida
0x00C0	0x0E0F      	MOVLW       15
0x00C2	0x6E8A      	MOVWF       TRISC 
;FIRMWARE_SYA_ver_1_3_0.c,456 :: 		TRISD = 0x07;  // Ponemos en modo de entrada a D0 y D1
0x00C4	0x0E07      	MOVLW       7
0x00C6	0x6E8B      	MOVWF       TRISD 
;FIRMWARE_SYA_ver_1_3_0.c,457 :: 		TRISE = 0x00;  // Ponemos en modo salida al puerto E
0x00C8	0x6A8C      	CLRF        TRISE 
;FIRMWARE_SYA_ver_1_3_0.c,458 :: 		TRISA = 0x80;  //                ''                A
0x00CA	0x0E80      	MOVLW       128
0x00CC	0x6E88      	MOVWF       TRISA 
;FIRMWARE_SYA_ver_1_3_0.c,460 :: 		PORTC = 0x00;  // Ponemos en linea baja en puerto C
0x00CE	0x6A8F      	CLRF        PORTC 
;FIRMWARE_SYA_ver_1_3_0.c,461 :: 		PORTD = 0x00;
0x00D0	0x6A90      	CLRF        PORTD 
;FIRMWARE_SYA_ver_1_3_0.c,462 :: 		PORTE = 0x00;  //                ''             E
0x00D2	0x6A91      	CLRF        PORTE 
;FIRMWARE_SYA_ver_1_3_0.c,463 :: 		PORTA = 0x10;  // Ponemos en linea alta en A4
0x00D4	0x0E10      	MOVLW       16
0x00D6	0x6E8D      	MOVWF       PORTA 
;FIRMWARE_SYA_ver_1_3_0.c,465 :: 		LATC = 0x00;   // Dejamos en cero el registro del puerto C
0x00D8	0x6A85      	CLRF        LATC 
;FIRMWARE_SYA_ver_1_3_0.c,466 :: 		LATD = 0x00;
0x00DA	0x6A86      	CLRF        LATD 
;FIRMWARE_SYA_ver_1_3_0.c,467 :: 		LATE = 0x00;   //                ''                      E
0x00DC	0x6A87      	CLRF        LATE 
;FIRMWARE_SYA_ver_1_3_0.c,468 :: 		LATA = 0x10;   // Dejamos en 1 al pin A4
0x00DE	0x0E10      	MOVLW       16
0x00E0	0x6E83      	MOVWF       LATA 
;FIRMWARE_SYA_ver_1_3_0.c,472 :: 		WPUD = 0x07;   // Activamos el pull-up interno de C0 y C1
0x00E2	0x0E07      	MOVLW       7
0x00E4	0x6F25      	MOVWF       WPUD, 1
;FIRMWARE_SYA_ver_1_3_0.c,473 :: 		INLVLD = 0x07; // Desactivamos valores TTL para C0 y C1 asumiento valores CMOS
0x00E6	0x0E07      	MOVLW       7
0x00E8	0x6F22      	MOVWF       INLVLD, 1
;FIRMWARE_SYA_ver_1_3_0.c,474 :: 		CM1CON0 = 0x00; // Desactivamos el comparador 1
0x00EA	0x6B39      	CLRF        CM1CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,475 :: 		CM2CON0 = 0x00; // Desactivamos el comparador 2
0x00EC	0x6B35      	CLRF        CM2CON0, 1
;FIRMWARE_SYA_ver_1_3_0.c,477 :: 		}
L_end_InitMCU:
0x00EE	0x0012      	RETURN      0
; end of _InitMCU
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x00F0	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x00F2	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x00F4	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x00F8	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x00FA	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x00FC	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x00FE	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x0100	0x0012      	RETURN      0
; end of ___CC2DW
_InitSystems:
;FIRMWARE_SYA_ver_1_3_0.c,418 :: 		void InitSystems(){
;FIRMWARE_SYA_ver_1_3_0.c,419 :: 		InitInterrupt();
0x0102	0xDFC8      	RCALL       _InitInterrupt
;FIRMWARE_SYA_ver_1_3_0.c,420 :: 		InitMCU();
0x0104	0xDFD6      	RCALL       _InitMCU
;FIRMWARE_SYA_ver_1_3_0.c,421 :: 		}
L_end_InitSystems:
0x0106	0x0012      	RETURN      0
; end of _InitSystems
_FSM:
;FIRMWARE_SYA_ver_1_3_0.c,194 :: 		void FSM(){
;FIRMWARE_SYA_ver_1_3_0.c,195 :: 		clock0 = 1;
0x0108	0x8A15      	BSF         _clock0, BitPos(_clock0+0) 
;FIRMWARE_SYA_ver_1_3_0.c,196 :: 		switch(current_state){
0x010A	0xD0DB      	BRA         L_FSM25
;FIRMWARE_SYA_ver_1_3_0.c,197 :: 		case s0:
L_FSM27:
;FIRMWARE_SYA_ver_1_3_0.c,198 :: 		M1Off();
0x010C	0xDFBB      	RCALL       _M1Off
;FIRMWARE_SYA_ver_1_3_0.c,199 :: 		M2Off();
0x010E	0xDFB8      	RCALL       _M2Off
;FIRMWARE_SYA_ver_1_3_0.c,200 :: 		M3Off();
0x0110	0xDFB5      	RCALL       _M3Off
;FIRMWARE_SYA_ver_1_3_0.c,201 :: 		sn_GoTo = 0;
0x0112	0x9815      	BCF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_1_3_0.c,202 :: 		if((1 == sn_PosEdge_1) && (1 == clock0)){
0x0114	0xA215      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x0116	0xD005      	BRA         L_FSM30
0x0118	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x011A	0xD003      	BRA         L_FSM30
L__FSM159:
;FIRMWARE_SYA_ver_1_3_0.c,203 :: 		next_state = s7;
0x011C	0x0E07      	MOVLW       7
0x011E	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,204 :: 		}
0x0120	0xD000      	BRA         L_FSM31
L_FSM30:
;FIRMWARE_SYA_ver_1_3_0.c,206 :: 		}
L_FSM31:
;FIRMWARE_SYA_ver_1_3_0.c,207 :: 		break;
0x0122	0xD0ED      	BRA         L_FSM26
;FIRMWARE_SYA_ver_1_3_0.c,208 :: 		case s1:
L_FSM32:
;FIRMWARE_SYA_ver_1_3_0.c,209 :: 		M1On();
0x0124	0xDFB5      	RCALL       _M1On
;FIRMWARE_SYA_ver_1_3_0.c,210 :: 		M2Off();
0x0126	0xDFAC      	RCALL       _M2Off
;FIRMWARE_SYA_ver_1_3_0.c,211 :: 		M3Off();
0x0128	0xDFA9      	RCALL       _M3Off
;FIRMWARE_SYA_ver_1_3_0.c,212 :: 		GT1 = 1;
0x012A	0x8015      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,213 :: 		GT2 = 0;
0x012C	0x9615      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,214 :: 		GT3 = 0;
0x012E	0x9415      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,216 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x0130	0xA618      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0132	0xD004      	BRA         L_FSM35
0x0134	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0136	0xD002      	BRA         L_FSM35
L__FSM158:
;FIRMWARE_SYA_ver_1_3_0.c,218 :: 		next_state = s0;
0x0138	0x6A16      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,219 :: 		}
0x013A	0xD007      	BRA         L_FSM36
L_FSM35:
;FIRMWARE_SYA_ver_1_3_0.c,220 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x013C	0xA418      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x013E	0xD005      	BRA         L_FSM39
0x0140	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0142	0xD003      	BRA         L_FSM39
L__FSM157:
;FIRMWARE_SYA_ver_1_3_0.c,221 :: 		next_state = s4;
0x0144	0x0E04      	MOVLW       4
0x0146	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,222 :: 		}
0x0148	0xD000      	BRA         L_FSM40
L_FSM39:
;FIRMWARE_SYA_ver_1_3_0.c,224 :: 		}
L_FSM40:
L_FSM36:
;FIRMWARE_SYA_ver_1_3_0.c,225 :: 		break;
0x014A	0xD0D9      	BRA         L_FSM26
;FIRMWARE_SYA_ver_1_3_0.c,226 :: 		case s2:
L_FSM41:
;FIRMWARE_SYA_ver_1_3_0.c,227 :: 		M1Off();
0x014C	0xDF9B      	RCALL       _M1Off
;FIRMWARE_SYA_ver_1_3_0.c,228 :: 		M2On();
0x014E	0xDF9C      	RCALL       _M2On
;FIRMWARE_SYA_ver_1_3_0.c,229 :: 		M3Off();
0x0150	0xDF95      	RCALL       _M3Off
;FIRMWARE_SYA_ver_1_3_0.c,230 :: 		GT1 = 0;
0x0152	0x9015      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,231 :: 		GT2 = 1;
0x0154	0x8615      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,232 :: 		GT3 = 0;
0x0156	0x9415      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,233 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x0158	0xA618      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x015A	0xD004      	BRA         L_FSM44
0x015C	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x015E	0xD002      	BRA         L_FSM44
L__FSM156:
;FIRMWARE_SYA_ver_1_3_0.c,234 :: 		next_state = s0;
0x0160	0x6A16      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,235 :: 		}
0x0162	0xD007      	BRA         L_FSM45
L_FSM44:
;FIRMWARE_SYA_ver_1_3_0.c,236 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x0164	0xA418      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x0166	0xD005      	BRA         L_FSM48
0x0168	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x016A	0xD003      	BRA         L_FSM48
L__FSM155:
;FIRMWARE_SYA_ver_1_3_0.c,237 :: 		next_state = s4;
0x016C	0x0E04      	MOVLW       4
0x016E	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,238 :: 		}
0x0170	0xD000      	BRA         L_FSM49
L_FSM48:
;FIRMWARE_SYA_ver_1_3_0.c,240 :: 		}
L_FSM49:
L_FSM45:
;FIRMWARE_SYA_ver_1_3_0.c,241 :: 		break;
0x0172	0xD0C5      	BRA         L_FSM26
;FIRMWARE_SYA_ver_1_3_0.c,242 :: 		case s3:
L_FSM50:
;FIRMWARE_SYA_ver_1_3_0.c,243 :: 		M1Off();
0x0174	0xDF87      	RCALL       _M1Off
;FIRMWARE_SYA_ver_1_3_0.c,244 :: 		M2Off();
0x0176	0xDF84      	RCALL       _M2Off
;FIRMWARE_SYA_ver_1_3_0.c,245 :: 		M3On();
0x0178	0xDF89      	RCALL       _M3On
;FIRMWARE_SYA_ver_1_3_0.c,246 :: 		GT1 = 0;
0x017A	0x9015      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,247 :: 		GT2 = 0;
0x017C	0x9615      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,248 :: 		GT3 = 1;
0x017E	0x8415      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,249 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x0180	0xA618      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0182	0xD004      	BRA         L_FSM53
0x0184	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0186	0xD002      	BRA         L_FSM53
L__FSM154:
;FIRMWARE_SYA_ver_1_3_0.c,250 :: 		next_state = s0;
0x0188	0x6A16      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,251 :: 		}
0x018A	0xD007      	BRA         L_FSM54
L_FSM53:
;FIRMWARE_SYA_ver_1_3_0.c,252 :: 		else if((1 == sn_PosEdge_2) && (1 == clock0)){
0x018C	0xA418      	BTFSS       _sn_PosEdge_2, BitPos(_sn_PosEdge_2+0) 
0x018E	0xD005      	BRA         L_FSM57
0x0190	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0192	0xD003      	BRA         L_FSM57
L__FSM153:
;FIRMWARE_SYA_ver_1_3_0.c,253 :: 		next_state = s4;
0x0194	0x0E04      	MOVLW       4
0x0196	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,254 :: 		}
0x0198	0xD000      	BRA         L_FSM58
L_FSM57:
;FIRMWARE_SYA_ver_1_3_0.c,256 :: 		}
L_FSM58:
L_FSM54:
;FIRMWARE_SYA_ver_1_3_0.c,257 :: 		break;
0x019A	0xD0B1      	BRA         L_FSM26
;FIRMWARE_SYA_ver_1_3_0.c,258 :: 		case s4:
L_FSM59:
;FIRMWARE_SYA_ver_1_3_0.c,259 :: 		if((1 == GT1) && (0 == GT2) && (0 == GT3)){
0x019C	0xA015      	BTFSS       _GT1, BitPos(_GT1+0) 
0x019E	0xD008      	BRA         L_FSM62
0x01A0	0xB615      	BTFSC       _GT2, BitPos(_GT2+0) 
0x01A2	0xD006      	BRA         L_FSM62
0x01A4	0xB415      	BTFSC       _GT3, BitPos(_GT3+0) 
0x01A6	0xD004      	BRA         L_FSM62
L__FSM152:
;FIRMWARE_SYA_ver_1_3_0.c,260 :: 		M1On();
0x01A8	0xDF73      	RCALL       _M1On
;FIRMWARE_SYA_ver_1_3_0.c,261 :: 		M2On();
0x01AA	0xDF6E      	RCALL       _M2On
;FIRMWARE_SYA_ver_1_3_0.c,262 :: 		M3Off();
0x01AC	0xDF67      	RCALL       _M3Off
;FIRMWARE_SYA_ver_1_3_0.c,263 :: 		}
0x01AE	0xD013      	BRA         L_FSM63
L_FSM62:
;FIRMWARE_SYA_ver_1_3_0.c,264 :: 		else if((1 == GT2) && (0 == GT1) && (0 == GT3)){
0x01B0	0xA615      	BTFSS       _GT2, BitPos(_GT2+0) 
0x01B2	0xD008      	BRA         L_FSM66
0x01B4	0xB015      	BTFSC       _GT1, BitPos(_GT1+0) 
0x01B6	0xD006      	BRA         L_FSM66
0x01B8	0xB415      	BTFSC       _GT3, BitPos(_GT3+0) 
0x01BA	0xD004      	BRA         L_FSM66
L__FSM151:
;FIRMWARE_SYA_ver_1_3_0.c,265 :: 		M1Off();
0x01BC	0xDF63      	RCALL       _M1Off
;FIRMWARE_SYA_ver_1_3_0.c,266 :: 		M2On();
0x01BE	0xDF64      	RCALL       _M2On
;FIRMWARE_SYA_ver_1_3_0.c,267 :: 		M3On();
0x01C0	0xDF65      	RCALL       _M3On
;FIRMWARE_SYA_ver_1_3_0.c,268 :: 		}
0x01C2	0xD009      	BRA         L_FSM67
L_FSM66:
;FIRMWARE_SYA_ver_1_3_0.c,269 :: 		else if((1 == GT3) && (0 == GT1) && (0 == GT2)){
0x01C4	0xA415      	BTFSS       _GT3, BitPos(_GT3+0) 
0x01C6	0xD007      	BRA         L_FSM70
0x01C8	0xB015      	BTFSC       _GT1, BitPos(_GT1+0) 
0x01CA	0xD005      	BRA         L_FSM70
0x01CC	0xB615      	BTFSC       _GT2, BitPos(_GT2+0) 
0x01CE	0xD003      	BRA         L_FSM70
L__FSM150:
;FIRMWARE_SYA_ver_1_3_0.c,270 :: 		M1On();
0x01D0	0xDF5F      	RCALL       _M1On
;FIRMWARE_SYA_ver_1_3_0.c,271 :: 		M2Off();
0x01D2	0xDF56      	RCALL       _M2Off
;FIRMWARE_SYA_ver_1_3_0.c,272 :: 		M3On();
0x01D4	0xDF5B      	RCALL       _M3On
;FIRMWARE_SYA_ver_1_3_0.c,273 :: 		}
L_FSM70:
L_FSM67:
L_FSM63:
;FIRMWARE_SYA_ver_1_3_0.c,274 :: 		if((1 == sn_NegEdge_1) && (1 == clock0)){
0x01D6	0xA618      	BTFSS       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x01D8	0xD004      	BRA         L_FSM73
0x01DA	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01DC	0xD002      	BRA         L_FSM73
L__FSM149:
;FIRMWARE_SYA_ver_1_3_0.c,275 :: 		next_state = s0;
0x01DE	0x6A16      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,276 :: 		}
0x01E0	0xD00E      	BRA         L_FSM74
L_FSM73:
;FIRMWARE_SYA_ver_1_3_0.c,277 :: 		else if((1 == sn_NegEdge_2) && (1 == clock0)){
0x01E2	0xAA18      	BTFSS       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x01E4	0xD005      	BRA         L_FSM77
0x01E6	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01E8	0xD003      	BRA         L_FSM77
L__FSM148:
;FIRMWARE_SYA_ver_1_3_0.c,278 :: 		next_state = s7;
0x01EA	0x0E07      	MOVLW       7
0x01EC	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,279 :: 		}
0x01EE	0xD007      	BRA         L_FSM78
L_FSM77:
;FIRMWARE_SYA_ver_1_3_0.c,280 :: 		else if((1 == sn_PosEdge_3) && (1 == clock0)){
0x01F0	0xA818      	BTFSS       _sn_PosEdge_3, BitPos(_sn_PosEdge_3+0) 
0x01F2	0xD005      	BRA         L_FSM81
0x01F4	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x01F6	0xD003      	BRA         L_FSM81
L__FSM147:
;FIRMWARE_SYA_ver_1_3_0.c,281 :: 		next_state = s5;
0x01F8	0x0E05      	MOVLW       5
0x01FA	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,282 :: 		}
0x01FC	0xD000      	BRA         L_FSM82
L_FSM81:
;FIRMWARE_SYA_ver_1_3_0.c,284 :: 		}
L_FSM82:
L_FSM78:
L_FSM74:
;FIRMWARE_SYA_ver_1_3_0.c,285 :: 		break;
0x01FE	0xD07F      	BRA         L_FSM26
;FIRMWARE_SYA_ver_1_3_0.c,286 :: 		case s5:
L_FSM83:
;FIRMWARE_SYA_ver_1_3_0.c,287 :: 		M1On();
0x0200	0xDF47      	RCALL       _M1On
;FIRMWARE_SYA_ver_1_3_0.c,288 :: 		M2On();
0x0202	0xDF42      	RCALL       _M2On
;FIRMWARE_SYA_ver_1_3_0.c,289 :: 		M3On();
0x0204	0xDF43      	RCALL       _M3On
;FIRMWARE_SYA_ver_1_3_0.c,290 :: 		if(((1 == sn_NegEdge_1) || (1 == sn_NegEdge_2)) && (1 == clock0)){
0x0206	0xB618      	BTFSC       _sn_NegEdge_1, BitPos(_sn_NegEdge_1+0) 
0x0208	0xD003      	BRA         L__FSM146
0x020A	0xBA18      	BTFSC       _sn_NegEdge_2, BitPos(_sn_NegEdge_2+0) 
0x020C	0xD001      	BRA         L__FSM146
0x020E	0xD004      	BRA         L_FSM88
L__FSM146:
0x0210	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0212	0xD002      	BRA         L_FSM88
L__FSM145:
;FIRMWARE_SYA_ver_1_3_0.c,291 :: 		next_state = s0;
0x0214	0x6A16      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,292 :: 		}
0x0216	0xD008      	BRA         L_FSM89
L_FSM88:
;FIRMWARE_SYA_ver_1_3_0.c,293 :: 		else if((1 == sn_NegEdge_3) && (1 == clock0)){
0x0218	0xAE15      	BTFSS       _sn_NegEdge_3, BitPos(_sn_NegEdge_3+0) 
0x021A	0xD006      	BRA         L_FSM92
0x021C	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x021E	0xD004      	BRA         L_FSM92
L__FSM144:
;FIRMWARE_SYA_ver_1_3_0.c,294 :: 		sn_GoTo = 1;
0x0220	0x8815      	BSF         _sn_GoTo, BitPos(_sn_GoTo+0) 
;FIRMWARE_SYA_ver_1_3_0.c,295 :: 		next_state = s6;
0x0222	0x0E06      	MOVLW       6
0x0224	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,296 :: 		}
0x0226	0xD000      	BRA         L_FSM93
L_FSM92:
;FIRMWARE_SYA_ver_1_3_0.c,298 :: 		}
L_FSM93:
L_FSM89:
;FIRMWARE_SYA_ver_1_3_0.c,299 :: 		break;
0x0228	0xD06A      	BRA         L_FSM26
;FIRMWARE_SYA_ver_1_3_0.c,300 :: 		case s6:
L_FSM94:
;FIRMWARE_SYA_ver_1_3_0.c,301 :: 		if((1 == sn_GoTo) && (1 == GT1) && (1 == clock0)){
0x022A	0xA815      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x022C	0xD00A      	BRA         L_FSM97
0x022E	0xA015      	BTFSS       _GT1, BitPos(_GT1+0) 
0x0230	0xD008      	BRA         L_FSM97
0x0232	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0234	0xD006      	BRA         L_FSM97
L__FSM143:
;FIRMWARE_SYA_ver_1_3_0.c,302 :: 		GT2 = 1;
0x0236	0x8615      	BSF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,303 :: 		GT3 = 0;
0x0238	0x9415      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,304 :: 		GT1 = 0;
0x023A	0x9015      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,305 :: 		next_state = s4;
0x023C	0x0E04      	MOVLW       4
0x023E	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,306 :: 		}
0x0240	0xD018      	BRA         L_FSM98
L_FSM97:
;FIRMWARE_SYA_ver_1_3_0.c,307 :: 		else if((1 == sn_GoTo) && (1 == GT2) && (1 == clock0)){
0x0242	0xA815      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x0244	0xD00A      	BRA         L_FSM101
0x0246	0xA615      	BTFSS       _GT2, BitPos(_GT2+0) 
0x0248	0xD008      	BRA         L_FSM101
0x024A	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x024C	0xD006      	BRA         L_FSM101
L__FSM142:
;FIRMWARE_SYA_ver_1_3_0.c,308 :: 		GT2 = 0;
0x024E	0x9615      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,309 :: 		GT1 = 0;
0x0250	0x9015      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,310 :: 		GT3 = 1;
0x0252	0x8415      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,311 :: 		next_state = s4;
0x0254	0x0E04      	MOVLW       4
0x0256	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,312 :: 		}
0x0258	0xD00C      	BRA         L_FSM102
L_FSM101:
;FIRMWARE_SYA_ver_1_3_0.c,313 :: 		else if((1 == sn_GoTo) && (1 == GT3) && (1 == clock0)){
0x025A	0xA815      	BTFSS       _sn_GoTo, BitPos(_sn_GoTo+0) 
0x025C	0xD00A      	BRA         L_FSM105
0x025E	0xA415      	BTFSS       _GT3, BitPos(_GT3+0) 
0x0260	0xD008      	BRA         L_FSM105
0x0262	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0264	0xD006      	BRA         L_FSM105
L__FSM141:
;FIRMWARE_SYA_ver_1_3_0.c,314 :: 		GT1 = 1;
0x0266	0x8015      	BSF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,315 :: 		GT2 = 0;
0x0268	0x9615      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,316 :: 		GT3 = 0;
0x026A	0x9415      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,317 :: 		next_state = s4;
0x026C	0x0E04      	MOVLW       4
0x026E	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,318 :: 		}
0x0270	0xD000      	BRA         L_FSM106
L_FSM105:
;FIRMWARE_SYA_ver_1_3_0.c,320 :: 		}
L_FSM106:
L_FSM102:
L_FSM98:
;FIRMWARE_SYA_ver_1_3_0.c,321 :: 		break;
0x0272	0xD045      	BRA         L_FSM26
;FIRMWARE_SYA_ver_1_3_0.c,322 :: 		case s7:
L_FSM107:
;FIRMWARE_SYA_ver_1_3_0.c,323 :: 		if(1 == sn_PosEdge_1){
0x0274	0xA215      	BTFSS       _sn_PosEdge_1, BitPos(_sn_PosEdge_1+0) 
0x0276	0xD01B      	BRA         L_FSM108
;FIRMWARE_SYA_ver_1_3_0.c,324 :: 		if((1 == GT1) && (1 == clock0)){
0x0278	0xA015      	BTFSS       _GT1, BitPos(_GT1+0) 
0x027A	0xD007      	BRA         L_FSM111
0x027C	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x027E	0xD005      	BRA         L_FSM111
L__FSM140:
;FIRMWARE_SYA_ver_1_3_0.c,325 :: 		next_state = s2;
0x0280	0x0E02      	MOVLW       2
0x0282	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,326 :: 		GT2 = 0;
0x0284	0x9615      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,327 :: 		GT3 = 0;
0x0286	0x9415      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,328 :: 		}
0x0288	0xD012      	BRA         L_FSM112
L_FSM111:
;FIRMWARE_SYA_ver_1_3_0.c,329 :: 		else if((1 == GT2) && (1 == clock0)){
0x028A	0xA615      	BTFSS       _GT2, BitPos(_GT2+0) 
0x028C	0xD007      	BRA         L_FSM115
0x028E	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x0290	0xD005      	BRA         L_FSM115
L__FSM139:
;FIRMWARE_SYA_ver_1_3_0.c,330 :: 		next_state = s3;
0x0292	0x0E03      	MOVLW       3
0x0294	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,331 :: 		GT1 = 0;
0x0296	0x9015      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,332 :: 		GT3 = 0;
0x0298	0x9415      	BCF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,333 :: 		}
0x029A	0xD009      	BRA         L_FSM116
L_FSM115:
;FIRMWARE_SYA_ver_1_3_0.c,334 :: 		else if((1 == GT3) && (1 == clock0)){
0x029C	0xA415      	BTFSS       _GT3, BitPos(_GT3+0) 
0x029E	0xD007      	BRA         L_FSM119
0x02A0	0xAA15      	BTFSS       _clock0, BitPos(_clock0+0) 
0x02A2	0xD005      	BRA         L_FSM119
L__FSM138:
;FIRMWARE_SYA_ver_1_3_0.c,335 :: 		next_state = s1;
0x02A4	0x0E01      	MOVLW       1
0x02A6	0x6E16      	MOVWF       _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,336 :: 		GT1 = 0;
0x02A8	0x9015      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,337 :: 		GT2 = 0;
0x02AA	0x9615      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,338 :: 		}
0x02AC	0xD000      	BRA         L_FSM120
L_FSM119:
;FIRMWARE_SYA_ver_1_3_0.c,340 :: 		}
L_FSM120:
L_FSM116:
L_FSM112:
;FIRMWARE_SYA_ver_1_3_0.c,341 :: 		}
L_FSM108:
;FIRMWARE_SYA_ver_1_3_0.c,342 :: 		break;
0x02AE	0xD027      	BRA         L_FSM26
;FIRMWARE_SYA_ver_1_3_0.c,343 :: 		default:
L_FSM121:
;FIRMWARE_SYA_ver_1_3_0.c,344 :: 		GT1 = 0;
0x02B0	0x9015      	BCF         _GT1, BitPos(_GT1+0) 
;FIRMWARE_SYA_ver_1_3_0.c,345 :: 		GT2 = 0;
0x02B2	0x9615      	BCF         _GT2, BitPos(_GT2+0) 
;FIRMWARE_SYA_ver_1_3_0.c,346 :: 		GT3 = 1;
0x02B4	0x8415      	BSF         _GT3, BitPos(_GT3+0) 
;FIRMWARE_SYA_ver_1_3_0.c,347 :: 		M1 = 0;
0x02B6	0x9A83      	BCF         LATA, 5 
;FIRMWARE_SYA_ver_1_3_0.c,348 :: 		M2 = 0;
0x02B8	0x9087      	BCF         LATE, 0 
;FIRMWARE_SYA_ver_1_3_0.c,349 :: 		M3 = 0;
0x02BA	0x9287      	BCF         LATE, 1 
;FIRMWARE_SYA_ver_1_3_0.c,350 :: 		current_state = s0;
0x02BC	0x6A17      	CLRF        _current_state 
;FIRMWARE_SYA_ver_1_3_0.c,351 :: 		next_state = s0;
0x02BE	0x6A16      	CLRF        _next_state 
;FIRMWARE_SYA_ver_1_3_0.c,352 :: 		break;
0x02C0	0xD01E      	BRA         L_FSM26
;FIRMWARE_SYA_ver_1_3_0.c,353 :: 		}
L_FSM25:
0x02C2	0x5017      	MOVF        _current_state, 0 
0x02C4	0x0A00      	XORLW       0
0x02C6	0xB4D8      	BTFSC       STATUS, 2 
0x02C8	0xD721      	BRA         L_FSM27
0x02CA	0x5017      	MOVF        _current_state, 0 
0x02CC	0x0A01      	XORLW       1
0x02CE	0xB4D8      	BTFSC       STATUS, 2 
0x02D0	0xD729      	BRA         L_FSM32
0x02D2	0x5017      	MOVF        _current_state, 0 
0x02D4	0x0A02      	XORLW       2
0x02D6	0xB4D8      	BTFSC       STATUS, 2 
0x02D8	0xD739      	BRA         L_FSM41
0x02DA	0x5017      	MOVF        _current_state, 0 
0x02DC	0x0A03      	XORLW       3
0x02DE	0xB4D8      	BTFSC       STATUS, 2 
0x02E0	0xD749      	BRA         L_FSM50
0x02E2	0x5017      	MOVF        _current_state, 0 
0x02E4	0x0A04      	XORLW       4
0x02E6	0xB4D8      	BTFSC       STATUS, 2 
0x02E8	0xD759      	BRA         L_FSM59
0x02EA	0x5017      	MOVF        _current_state, 0 
0x02EC	0x0A05      	XORLW       5
0x02EE	0xE088      	BZ          L_FSM83
0x02F0	0x5017      	MOVF        _current_state, 0 
0x02F2	0x0A06      	XORLW       6
0x02F4	0xE09A      	BZ          L_FSM94
0x02F6	0x5017      	MOVF        _current_state, 0 
0x02F8	0x0A07      	XORLW       7
0x02FA	0xE0BC      	BZ          L_FSM107
0x02FC	0xD7D9      	BRA         L_FSM121
L_FSM26:
;FIRMWARE_SYA_ver_1_3_0.c,355 :: 		}
L_end_FSM:
0x02FE	0x0012      	RETURN      0
; end of _FSM
_main:
;FIRMWARE_SYA_ver_1_3_0.c,173 :: 		void main(){
;FIRMWARE_SYA_ver_1_3_0.c,175 :: 		InitSystems();
0x0300	0xDF00      	RCALL       _InitSystems
;FIRMWARE_SYA_ver_1_3_0.c,177 :: 		LED = ~LED;
0x0302	0x7883      	BTG         LATA, 4 
;FIRMWARE_SYA_ver_1_3_0.c,179 :: 		do{
L_main18:
;FIRMWARE_SYA_ver_1_3_0.c,180 :: 		}while((1 == IOCCF.B0) || (1 == IOCCF.B1) || (1 == IOCCF.B2));
0x0304	0xB11A      	BTFSC       IOCCF, 0, 1
0x0306	0xD7FE      	BRA         L_main18
0x0308	0xB31A      	BTFSC       IOCCF, 1, 1
0x030A	0xD7FC      	BRA         L_main18
0x030C	0xB51A      	BTFSC       IOCCF, 2, 1
0x030E	0xD7FA      	BRA         L_main18
L__main137:
;FIRMWARE_SYA_ver_1_3_0.c,182 :: 		while(1){
L_main23:
;FIRMWARE_SYA_ver_1_3_0.c,184 :: 		current_state = next_state; // Maybe move this with Events
0x0310	0xF017C016  	MOVFF       _next_state, _current_state
;FIRMWARE_SYA_ver_1_3_0.c,185 :: 		FSM();
0x0314	0xDEF9      	RCALL       _FSM
;FIRMWARE_SYA_ver_1_3_0.c,186 :: 		}
0x0316	0xD7FC      	BRA         L_main23
;FIRMWARE_SYA_ver_1_3_0.c,188 :: 		}
L_end_main:
0x0318	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [116]    _interrupt
0x007C       [4]    _M3Off
0x0080       [4]    _M2Off
0x0084       [4]    _M1Off
0x0088       [4]    _M2On
0x008C       [4]    _M3On
0x0090       [4]    _M1On
0x0094      [30]    _InitInterrupt
0x00B2      [62]    _InitMCU
0x00F0      [18]    ___CC2DW
0x0102       [6]    _InitSystems
0x0108     [504]    _FSM
0x0300      [26]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [0]    _sn_PosEdge_1
0x0015       [0]    _sn_NegEdge_3
0x0015       [0]    _clock0
0x0015       [0]    _GT1
0x0015       [0]    _interruptC0
0x0015       [0]    _sn_GoTo
0x0015       [0]    _GT3
0x0015       [0]    _GT2
0x0016       [1]    _next_state
0x0017       [1]    _current_state
0x0018       [0]    _interruptC1
0x0018       [0]    _sn_NegEdge_2
0x0018       [0]    _sn_PosEdge_3
0x0018       [0]    _interruptC2
0x0018       [0]    _sn_PosEdge_2
0x0018       [0]    _sn_NegEdge_1
0x0EC2       [1]    PIE0
0x0EC2       [0]    IOCIE_bit
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F1A       [1]    IOCCF
0x0F1B       [1]    IOCCN
0x0F1C       [1]    IOCCP
0x0F21       [1]    ANSELC
0x0F22       [1]    INLVLD
0x0F25       [1]    WPUD
0x0F26       [1]    ANSELD
0x0F2E       [1]    ANSELE
0x0F35       [1]    CM2CON0
0x0F39       [1]    CM1CON0
0x0F60       [1]    ADCON0
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F86       [1]    LATD
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8B       [1]    TRISD
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F90       [1]    PORTD
0x0F91       [1]    PORTE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
