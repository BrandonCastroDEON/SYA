;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 30/01/2024 04:53:43 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF48  	GOTO        144
_interrupt:
;timer.c,36 :: 		void interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;timer.c,38 :: 		if(PIR0.TMR0IF){
0x000C	0x010E      	MOVLB       14
0x000E	0xABCA      	BTFSS       PIR0, 5, 1
0x0010	0xD015      	BRA         L_interrupt0
;timer.c,39 :: 		TMR0H = 0xE1;
0x0012	0x0EE1      	MOVLW       225
0x0014	0x6ED4      	MOVWF       TMR0H 
;timer.c,40 :: 		TMR0L = 0x7A;
0x0016	0x0E7A      	MOVLW       122
0x0018	0x6ED3      	MOVWF       TMR0L 
;timer.c,42 :: 		if(LATCH){
0x001A	0xA08F      	BTFSS       PORTC, 0 
0x001C	0xD00E      	BRA         L_interrupt1
;timer.c,43 :: 		cuenta++;
0x001E	0x4A16      	INFSNZ      _cuenta, 1 
0x0020	0x2A17      	INCF        _cuenta+1, 1 
;timer.c,44 :: 		if(cuenta >= 50){
0x0022	0x0E80      	MOVLW       128
0x0024	0x1817      	XORWF       _cuenta+1, 0 
0x0026	0x6E00      	MOVWF       R0 
0x0028	0x0E80      	MOVLW       128
0x002A	0x5C00      	SUBWF       R0, 0 
0x002C	0xE102      	BNZ         L__interrupt15
0x002E	0x0E32      	MOVLW       50
0x0030	0x5C16      	SUBWF       _cuenta, 0 
L__interrupt15:
0x0032	0xE303      	BNC         L_interrupt2
;timer.c,45 :: 		flag01 = 1;
0x0034	0x8018      	BSF         _flag01, BitPos(_flag01+0) 
;timer.c,46 :: 		cuenta = 0;
0x0036	0x6A16      	CLRF        _cuenta 
0x0038	0x6A17      	CLRF        _cuenta+1 
;timer.c,47 :: 		}
L_interrupt2:
;timer.c,48 :: 		}
L_interrupt1:
;timer.c,49 :: 		PIR0.TMR0IF = 0;
0x003A	0x9BCA      	BCF         PIR0, 5, 1
;timer.c,50 :: 		}
L_interrupt0:
;timer.c,52 :: 		}
L_end_interrupt:
L__interrupt14:
0x003C	0xF000C015  	MOVFF       21, R0
0x0040	0x0011      	RETFIE      1
; end of _interrupt
_InitMCU:
;timer.c,102 :: 		void InitMCU(){
;timer.c,104 :: 		ADCON1 = 0x0F; // Desactivamos los valores TTL para el PIC
0x0042	0x0E0F      	MOVLW       15
0x0044	0x010F      	MOVLB       15
0x0046	0x6F59      	MOVWF       ADCON1, 1
;timer.c,106 :: 		ANSELC = 0; // Puerto A en digital
0x0048	0x6B21      	CLRF        ANSELC, 1
;timer.c,107 :: 		ANSELE = 0; // Puerto E en digital
0x004A	0x6B2E      	CLRF        ANSELE, 1
;timer.c,108 :: 		ANSELA = 0; // Puerto A en digital
0x004C	0x6B11      	CLRF        ANSELA, 1
;timer.c,110 :: 		TRISC = 0x03; // C0 y C1 quedan como entradas, los demas en salidas
0x004E	0x0E03      	MOVLW       3
0x0050	0x6E8A      	MOVWF       TRISC 
;timer.c,111 :: 		TRISE = 0x00; // Puerto E como salida
0x0052	0x6A8C      	CLRF        TRISE 
;timer.c,112 :: 		TRISA = 0x00; // Puerto A como salida
0x0054	0x6A88      	CLRF        TRISA 
;timer.c,114 :: 		PORTC = 0x00; // Dejamos C0 en linea alta
0x0056	0x6A8F      	CLRF        PORTC 
;timer.c,115 :: 		PORTA = 0x00; // Dejamos A4 en linea alta y los demas en linea baja
0x0058	0x6A8D      	CLRF        PORTA 
;timer.c,116 :: 		PORTE = 0x00; // Puerto E en linea baja
0x005A	0x6A91      	CLRF        PORTE 
;timer.c,118 :: 		LATC = 0x00; // Dejamos el registro de C0 en linea alta
0x005C	0x6A85      	CLRF        LATC 
;timer.c,119 :: 		LATE = 0x00; // Dejamos el registro del puerto E en linea baja
0x005E	0x6A87      	CLRF        LATE 
;timer.c,120 :: 		LATA = 0x00; // Dejamos el registro de A4 en linea alta
0x0060	0x6A83      	CLRF        LATA 
;timer.c,121 :: 		}
L_end_InitMCU:
0x0062	0x0012      	RETURN      0
; end of _InitMCU
_InitInterrupt:
;timer.c,90 :: 		void InitInterrupt(){
;timer.c,92 :: 		T0CON0 = 0x90;
0x0064	0x0E90      	MOVLW       144
0x0066	0x6ED5      	MOVWF       T0CON0 
;timer.c,93 :: 		T0CON1 = 0x46;
0x0068	0x0E46      	MOVLW       70
0x006A	0x6ED6      	MOVWF       T0CON1 
;timer.c,94 :: 		PIE0.TMR0IE = 1;
0x006C	0x010E      	MOVLB       14
0x006E	0x8BC2      	BSF         PIE0, 5, 1
;timer.c,95 :: 		TMR0H = 0xE1;
0x0070	0x0EE1      	MOVLW       225
0x0072	0x6ED4      	MOVWF       TMR0H 
;timer.c,96 :: 		TMR0L = 0x7A;
0x0074	0x0E7A      	MOVLW       122
0x0076	0x6ED3      	MOVWF       TMR0L 
;timer.c,98 :: 		INTCON = 0xC0;
0x0078	0x0EC0      	MOVLW       192
0x007A	0x6EF2      	MOVWF       INTCON 
;timer.c,100 :: 		}
L_end_InitInterrupt:
0x007C	0x0012      	RETURN      0
; end of _InitInterrupt
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x007E	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x0080	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x0082	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x0086	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x0088	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x008A	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x008C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x008E	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0090	0x6A16      	CLRF        _cuenta 
0x0092	0x6A17      	CLRF        23 
;timer.c,54 :: 		void main() {
;timer.c,56 :: 		InitMCU();
0x0094	0xDFD6      	RCALL       _InitMCU
;timer.c,57 :: 		InitInterrupt();
0x0096	0xDFE6      	RCALL       _InitInterrupt
;timer.c,58 :: 		flag01 = 0;
0x0098	0x9018      	BCF         _flag01, BitPos(_flag01+0) 
;timer.c,59 :: 		cuenta = 0;
0x009A	0x6A16      	CLRF        _cuenta 
0x009C	0x6A17      	CLRF        _cuenta+1 
;timer.c,61 :: 		while(1){
L_main3:
;timer.c,62 :: 		estado = 0;
0x009E	0x9218      	BCF         _estado, BitPos(_estado+0) 
;timer.c,63 :: 		if(flag01){
0x00A0	0xA018      	BTFSS       _flag01, BitPos(_flag01+0) 
0x00A2	0xD028      	BRA         L_main5
;timer.c,64 :: 		estado++;
0x00A4	0x6A00      	CLRF        R0 
0x00A6	0xB218      	BTFSC       _estado, BitPos(_estado+0) 
0x00A8	0x2A00      	INCF        R0, 1 
0x00AA	0x0E00      	MOVLW       0
0x00AC	0x6E01      	MOVWF       R1 
0x00AE	0x4A00      	INFSNZ      R0, 1 
0x00B0	0x2A01      	INCF        R1, 1 
0x00B2	0xB000      	BTFSC       R0, 0 
0x00B4	0xD002      	BRA         L__main17
0x00B6	0x9218      	BCF         _estado, BitPos(_estado+0) 
0x00B8	0xD001      	BRA         L__main18
L__main17:
0x00BA	0x8218      	BSF         _estado, BitPos(_estado+0) 
L__main18:
;timer.c,65 :: 		estado = estado << 1;
0x00BC	0x6A02      	CLRF        R2 
0x00BE	0xB218      	BTFSC       _estado, BitPos(_estado+0) 
0x00C0	0x2A02      	INCF        R2, 1 
0x00C2	0x6A00      	CLRF        R0 
0x00C4	0x2A00      	INCF        R0, 1 
0x00C6	0xF001C000  	MOVFF       R0, R1
0x00CA	0xF000C002  	MOVFF       R2, R0
0x00CE	0x5001      	MOVF        R1, 0 
L__main19:
0x00D0	0xE004      	BZ          L__main20
0x00D2	0x3600      	RLCF        R0, 1 
0x00D4	0x9000      	BCF         R0, 0 
0x00D6	0x0FFF      	ADDLW       255
0x00D8	0xD7FB      	BRA         L__main19
L__main20:
0x00DA	0xB000      	BTFSC       R0, 0 
0x00DC	0xD002      	BRA         L__main21
0x00DE	0x9218      	BCF         _estado, BitPos(_estado+0) 
0x00E0	0xD001      	BRA         L__main22
L__main21:
0x00E2	0x8218      	BSF         _estado, BitPos(_estado+0) 
L__main22:
;timer.c,66 :: 		if((estado == 0xf0000) && (LATCH == 1)){
0x00E4	0xB218      	BTFSC       _estado, BitPos(_estado+0) 
0x00E6	0xD005      	BRA         L_main8
0x00E8	0xA08F      	BTFSS       PORTC, 0 
0x00EA	0xD003      	BRA         L_main8
L__main12:
;timer.c,67 :: 		flag02 = 1;
0x00EC	0x8418      	BSF         _flag02, BitPos(_flag02+0) 
;timer.c,68 :: 		LPLACA = ~LPLACA;
0x00EE	0x7883      	BTG         LATA, 4 
;timer.c,69 :: 		}
0x00F0	0xD001      	BRA         L_main9
L_main8:
;timer.c,71 :: 		flag02 = 0;
0x00F2	0x9418      	BCF         _flag02, BitPos(_flag02+0) 
;timer.c,72 :: 		}
L_main9:
;timer.c,73 :: 		}
L_main5:
;timer.c,74 :: 		if(flag02){
0x00F4	0xA418      	BTFSS       _flag02, BitPos(_flag02+0) 
0x00F6	0xD005      	BRA         L_main10
;timer.c,75 :: 		ACT1 = ~ACT1;
0x00F8	0x7A83      	BTG         LATA, 5 
;timer.c,76 :: 		ACT2 = ~ACT2;
0x00FA	0x7087      	BTG         LATE, 0 
;timer.c,77 :: 		ACT3 = ~ACT3;
0x00FC	0x7287      	BTG         LATE, 1 
;timer.c,78 :: 		ACT4 = ~ACT4;
0x00FE	0x7487      	BTG         LATE, 2 
;timer.c,79 :: 		}
0x0100	0xD004      	BRA         L_main11
L_main10:
;timer.c,81 :: 		ACT1 = 0;
0x0102	0x9A83      	BCF         LATA, 5 
;timer.c,82 :: 		ACT2 = 0;
0x0104	0x9087      	BCF         LATE, 0 
;timer.c,83 :: 		ACT3 = 0;
0x0106	0x9287      	BCF         LATE, 1 
;timer.c,84 :: 		ACT4 = 0;
0x0108	0x9487      	BCF         LATE, 2 
;timer.c,85 :: 		}
L_main11:
;timer.c,86 :: 		}
0x010A	0xD7C9      	BRA         L_main3
;timer.c,88 :: 		}
L_end_main:
0x010C	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [58]    _interrupt
0x0042      [34]    _InitMCU
0x0064      [26]    _InitInterrupt
0x007E      [18]    ___CC2DW
0x0090     [126]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [2]    _cuenta
0x0018       [0]    _flag02
0x0018       [0]    _flag01
0x0018       [0]    _estado
0x0EC2       [1]    PIE0
0x0ECA       [1]    PIR0
0x0F11       [1]    ANSELA
0x0F21       [1]    ANSELC
0x0F2E       [1]    ANSELE
0x0F59       [1]    ADCON1
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F91       [1]    PORTE
0x0FD3       [1]    TMR0L
0x0FD4       [1]    TMR0H
0x0FD5       [1]    T0CON0
0x0FD6       [1]    T0CON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
