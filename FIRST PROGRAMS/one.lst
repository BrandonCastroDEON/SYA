;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 24/01/2024 03:18:59 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF52  	GOTO        164
_interrupt:
;one.c,35 :: 		void interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;one.c,38 :: 		IOCIF_bit = 0;
0x000C	0x010E      	MOVLB       14
0x000E	0x99CA      	BCF         IOCIF_bit, BitPos(IOCIF_bit+0), 1
;one.c,39 :: 		RC0_READ = PORTC;
0x0010	0xF017CF8F  	MOVFF       PORTC, _RC0_READ
0x0014	0x0E00      	MOVLW       0
0x0016	0x6E18      	MOVWF       _RC0_READ+1 
;one.c,40 :: 		RC0_READ = RC0_READ >> 7;
0x0018	0x0E07      	MOVLW       7
0x001A	0x6E00      	MOVWF       R0 
0x001C	0x5000      	MOVF        R0, 0 
L__interrupt11:
0x001E	0xE005      	BZ          L__interrupt12
0x0020	0x3218      	RRCF        _RC0_READ+1, 1 
0x0022	0x3217      	RRCF        _RC0_READ, 1 
0x0024	0x9E18      	BCF         _RC0_READ+1, 7 
0x0026	0x0FFF      	ADDLW       255
0x0028	0xD7FA      	BRA         L__interrupt11
L__interrupt12:
;one.c,42 :: 		A1 = 1;
0x002A	0x8A8D      	BSF         PORTA, 5 
;one.c,56 :: 		}
L_end_interrupt:
L__interrupt10:
0x002C	0xF000C015  	MOVFF       21, R0
0x0030	0x0011      	RETFIE      1
; end of _interrupt
_InitInterrupt:
;one.c,82 :: 		void InitInterrupt(){
;one.c,83 :: 		PIE0.IOCIE = 1;
0x0032	0x010E      	MOVLB       14
0x0034	0x89C2      	BSF         PIE0, 4, 1
;one.c,84 :: 		PIR0.IOCIF = 0;
0x0036	0x99CA      	BCF         PIR0, 4, 1
;one.c,85 :: 		IOCCP0_bit = 0;
0x0038	0x010F      	MOVLB       15
0x003A	0x911C      	BCF         IOCCP0_bit, BitPos(IOCCP0_bit+0), 1
;one.c,86 :: 		IOCCF0_bit = 0;
0x003C	0x911A      	BCF         IOCCF0_bit, BitPos(IOCCF0_bit+0), 1
;one.c,87 :: 		GIE_bit = 1;
0x003E	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;one.c,88 :: 		}
L_end_InitInterrupt:
0x0040	0x0012      	RETURN      0
; end of _InitInterrupt
_blink:
;one.c,27 :: 		void blink(){
;one.c,29 :: 		for(i=0;i<4;i++){
0x0042	0x6A01      	CLRF        R1 
L_blink0:
0x0044	0x0E04      	MOVLW       4
0x0046	0x5C01      	SUBWF       R1, 0 
0x0048	0xE20F      	BC          L_blink1
;one.c,30 :: 		LED = ~LED;
0x004A	0x788D      	BTG         PORTA, 4 
;one.c,31 :: 		Delay_ms(80);
0x004C	0x0E03      	MOVLW       3
0x004E	0x6E0B      	MOVWF       R11, 0
0x0050	0x0E08      	MOVLW       8
0x0052	0x6E0C      	MOVWF       R12, 0
0x0054	0x0E77      	MOVLW       119
0x0056	0x6E0D      	MOVWF       R13, 0
L_blink3:
0x0058	0x2E0D      	DECFSZ      R13, 1, 0
0x005A	0xD7FE      	BRA         L_blink3
0x005C	0x2E0C      	DECFSZ      R12, 1, 0
0x005E	0xD7FC      	BRA         L_blink3
0x0060	0x2E0B      	DECFSZ      R11, 1, 0
0x0062	0xD7FA      	BRA         L_blink3
;one.c,29 :: 		for(i=0;i<4;i++){
0x0064	0x2A01      	INCF        R1, 1 
;one.c,32 :: 		}
0x0066	0xD7EE      	BRA         L_blink0
L_blink1:
;one.c,33 :: 		}
L_end_blink:
0x0068	0x0012      	RETURN      0
; end of _blink
_InitMCU:
;one.c,58 :: 		void InitMCU(){
;one.c,60 :: 		ADCON1 = 0x0F;
0x006A	0x0E0F      	MOVLW       15
0x006C	0x010F      	MOVLB       15
0x006E	0x6F59      	MOVWF       ADCON1, 1
;one.c,62 :: 		ANSELC = 0; // Ponemos los pines del puerto C en modo digital
0x0070	0x6B21      	CLRF        ANSELC, 1
;one.c,63 :: 		ANSELE = 0; // Ponemos los pines del puerto E en modo digital
0x0072	0x6B2E      	CLRF        ANSELE, 1
;one.c,64 :: 		ANSELA = 0; // Ponemos los pines del puerto A en modo digital
0x0074	0x6B11      	CLRF        ANSELA, 1
;one.c,66 :: 		TRISC = 0x03; // Indicamos que C0 y C1 en el puerto C quedan en modo entrada, los demas en modo salida
0x0076	0x0E03      	MOVLW       3
0x0078	0x6E8A      	MOVWF       TRISC 
;one.c,67 :: 		TRISE = 0x00; // Indicamos que el puerto E queda en modo salida
0x007A	0x6A8C      	CLRF        TRISE 
;one.c,68 :: 		TRISA = 0x00; // Indicamos que el puerto A queda en modo salida
0x007C	0x6A88      	CLRF        TRISA 
;one.c,70 :: 		PORTC = 0x00; // Ponemos al puerto C en ceros
0x007E	0x6A8F      	CLRF        PORTC 
;one.c,71 :: 		PORTE = 0x00; // Ponemos al puerto E en ceros
0x0080	0x6A91      	CLRF        PORTE 
;one.c,72 :: 		PORTA = 0x10; // Ponemos al puerto A en ceros
0x0082	0x0E10      	MOVLW       16
0x0084	0x6E8D      	MOVWF       PORTA 
;one.c,74 :: 		LATC = 0x00; // Establecemos en cero el registro del puerto C
0x0086	0x6A85      	CLRF        LATC 
;one.c,75 :: 		LATE = 0x00; // Establecemos en cero el registro del puerto E
0x0088	0x6A87      	CLRF        LATE 
;one.c,76 :: 		LATA = 0x10; // Establecemos en cero el registro del puerto A
0x008A	0x0E10      	MOVLW       16
0x008C	0x6E83      	MOVWF       LATA 
;one.c,78 :: 		bool_once = TRUE;
0x008E	0x8016      	BSF         _flags, 0 
;one.c,80 :: 		}
L_end_InitMCU:
0x0090	0x0012      	RETURN      0
; end of _InitMCU
___CC2DW:
;__Lib_System_xxK40.c,22 :: 		
;__Lib_System_xxK40.c,24 :: 		
0x0092	0x8E81      	BSF         NVMCON1, 7, 0
;__Lib_System_xxK40.c,25 :: 		
_CC2DL_Loop1:
;__Lib_System_xxK40.c,26 :: 		
0x0094	0x0009      	TBLRD*+
;__Lib_System_xxK40.c,27 :: 		
0x0096	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System_xxK40.c,28 :: 		
0x009A	0x0600      	DECF        R0, 1, 0
;__Lib_System_xxK40.c,29 :: 		
0x009C	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,30 :: 		
0x009E	0x0601      	DECF        R1, 1, 0
;__Lib_System_xxK40.c,31 :: 		
0x00A0	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System_xxK40.c,33 :: 		
L_end___CC2DW:
0x00A2	0x0012      	RETURN      0
; end of ___CC2DW
_main:
;one.c,90 :: 		void main() {
;one.c,92 :: 		InitMCU();
0x00A4	0xDFE2      	RCALL       _InitMCU
;one.c,93 :: 		InitInterrupt();
0x00A6	0xDFC5      	RCALL       _InitInterrupt
;one.c,95 :: 		blink();
0x00A8	0xDFCC      	RCALL       _blink
;one.c,97 :: 		do{
L_main4:
;one.c,98 :: 		Delay_ms(10);
0x00AA	0x0E41      	MOVLW       65
0x00AC	0x6E0C      	MOVWF       R12, 0
0x00AE	0x0EEE      	MOVLW       238
0x00B0	0x6E0D      	MOVWF       R13, 0
L_main7:
0x00B2	0x2E0D      	DECFSZ      R13, 1, 0
0x00B4	0xD7FE      	BRA         L_main7
0x00B6	0x2E0C      	DECFSZ      R12, 1, 0
0x00B8	0xD7FC      	BRA         L_main7
0x00BA	0x0000      	NOP
;one.c,99 :: 		}while(1);
0x00BC	0xD7F6      	BRA         L_main4
;one.c,109 :: 		}
L_end_main:
0x00BE	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [42]    _interrupt
0x0032      [16]    _InitInterrupt
0x0042      [40]    _blink
0x006A      [40]    _InitMCU
0x0092      [18]    ___CC2DW
0x00A4      [28]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0001       [1]    blink_i_L0
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    _flags
0x0017       [2]    _RC0_READ
0x0EC2       [1]    PIE0
0x0ECA       [1]    PIR0
0x0ECA       [0]    IOCIF_bit
0x0F11       [1]    ANSELA
0x0F1A       [0]    IOCCF0_bit
0x0F1C       [0]    IOCCP0_bit
0x0F21       [1]    ANSELC
0x0F2E       [1]    ANSELE
0x0F59       [1]    ADCON1
0x0F81       [1]    NVMCON1
0x0F83       [1]    LATA
0x0F85       [1]    LATC
0x0F87       [1]    LATE
0x0F88       [1]    TRISA
0x0F8A       [1]    TRISC
0x0F8C       [1]    TRISE
0x0F8D       [1]    PORTA
0x0F8F       [1]    PORTC
0x0F91       [1]    PORTE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [0]    GIE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
